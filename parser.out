Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    APOS
    BACK
    DECADE
    DECL
    HEX
    INT64
    NOTSO
    SEMI

Grammar

Rule 0     S' -> line
Rule 1     line -> Input line
Rule 2     line -> EXIT empty
Rule 3     EXIT -> <empty>
Rule 4     Input -> statement
Rule 5     Input -> expression
Rule 6     statement -> statement NEWLINE statement
Rule 7     statement -> statement NEWLINE statement NEWLINE
Rule 8     statement -> exassign
Rule 9     statement -> declare
Rule 10    statement -> exprint
Rule 11    statement -> exif
Rule 12    statement -> exelif
Rule 13    statement -> exloop
Rule 14    statement -> exrepeat
Rule 15    statement -> statement NEWLINE
Rule 16    statement -> NEWLINE statement
Rule 17    statement -> exloop NEWLINE
Rule 18    exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE
Rule 19    exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
Rule 20    exelif -> exif exelse
Rule 21    exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE
Rule 22    exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE
Rule 23    exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE
Rule 24    exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
Rule 25    exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
Rule 26    exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
Rule 27    expression -> expression PLUS expression
Rule 28    expression -> term PLUS term
Rule 29    expression -> term PLUS expression
Rule 30    expression -> expression MINUS expression
Rule 31    expression -> term MINUS term
Rule 32    expression -> term MINUS expression
Rule 33    expression -> expression MUL expression
Rule 34    expression -> term MUL term
Rule 35    expression -> term MUL expression
Rule 36    expression -> expression DIV expression
Rule 37    expression -> term DIV term
Rule 38    expression -> term DIV expression
Rule 39    expression -> expression MOD expression
Rule 40    expression -> term MOD term
Rule 41    expression -> term MOD expression
Rule 42    term -> STRING_LITERAL
Rule 43    typeconst -> TYPE_H
Rule 44    typeconst -> TYPE_N
Rule 45    typeconst -> TYPE_A
Rule 46    typeconst -> TYPE_S
Rule 47    expression -> term
Rule 48    expression -> MINUS expression
Rule 49    expression -> LPAREN expression RPAREN
Rule 50    exassign -> WORD EQU expression
Rule 51    exassign -> arraysh EQU expression
Rule 52    expression -> expression EQUTO expression
Rule 53    expression -> expression NOEQU expression
Rule 54    expression -> expression LESS expression
Rule 55    expression -> expression MORE expression
Rule 56    declare -> typeconst WORD
Rule 57    declare -> typeconst WORD EQU term
Rule 58    arraysh -> WORD LARRY NUM RARRY
Rule 59    arraysh -> WORD LARRY WORD RARRY
Rule 60    declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE
Rule 61    declare -> TYPE_A WORD LARRY NUM RARRY
Rule 62    declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
Rule 63    arrayX -> NUM arrayY
Rule 64    arrayY -> COMMA NUM arrayY
Rule 65    arrayY -> empty empty empty
Rule 66    exprint -> TEXT LPAREN expression printMore RPAREN
Rule 67    exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN
Rule 68    printMore -> COMMA expression printMore
Rule 69    printMore -> empty empty empty
Rule 70    printMore -> COMMA QUOT expression QUOT printMore
Rule 71    empty -> <empty>

Terminals, with rules where they appear

APOS                 : 
BACK                 : 
COMMA                : 64 68 70
DECADE               : 
DECL                 : 
DIV                  : 36 37 38
EQU                  : 50 51 57 60 62
EQUTO                : 52
HEX                  : 
INT64                : 
LARRY                : 58 59 61 62
LESS                 : 54
LOOP                 : 23 24
LPAREN               : 18 19 23 24 25 26 49 66 67
LSTATE               : 18 19 21 21 22 23 24 25 26 60 62
MINUS                : 30 31 32 48
MOD                  : 39 40 41
MORE                 : 55
MUL                  : 33 34 35
NEWLINE              : 6 7 7 15 16 17 19 22 24 26
NOEQU                : 53
NOTSO                : 
NUM                  : 58 61 62 63 64
OTHERWISE            : 21 21 22
PLUS                 : 27 28 29
QUOT                 : 70 70
RARRY                : 58 59 61 62
REPEAT               : 25 26
RPAREN               : 18 19 23 24 25 26 49 66 67
RSTATE               : 18 19 22 23 24 25 26 60 62
SEMI                 : 
SO                   : 18 19
STRING_LITERAL       : 42 67
TEXT                 : 66 67
TYPE_A               : 45 60 61 62
TYPE_H               : 43
TYPE_N               : 44
TYPE_S               : 46
WORD                 : 50 56 57 58 59 59 60 61 62
error                : 

Nonterminals, with rules where they appear

EXIT                 : 2
Input                : 1
arrayX               : 60 62
arrayY               : 63 64
arraysh              : 51
declare              : 9
empty                : 2 65 65 65 69 69 69
exassign             : 8
exelif               : 12
exelse               : 20
exif                 : 11 20
exloop               : 13 17
expression           : 5 18 19 23 24 25 26 27 27 29 30 30 32 33 33 35 36 36 38 39 39 41 48 49 50 51 52 52 53 53 54 54 55 55 66 68 70
exprint              : 10
exrepeat             : 14
line                 : 1 0
printMore            : 66 67 68 70
statement            : 4 6 6 7 7 15 16 18 19 21 22 23 24 25 26
term                 : 28 28 29 31 31 32 34 34 35 37 37 38 40 40 41 47 57
typeconst            : 56 57

Parsing method: LALR

state 0

    (0) S' -> . line
    (1) line -> . Input line
    (2) line -> . EXIT empty
    (4) Input -> . statement
    (5) Input -> . expression
    (3) EXIT -> .
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (50) exassign -> . WORD EQU expression
    (51) exassign -> . arraysh EQU expression
    (56) declare -> . typeconst WORD
    (57) declare -> . typeconst WORD EQU term
    (60) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (61) declare -> . TYPE_A WORD LARRY NUM RARRY
    (62) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (66) exprint -> . TEXT LPAREN expression printMore RPAREN
    (67) exprint -> . TEXT LPAREN STRING_LITERAL printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (42) term -> . STRING_LITERAL
    (58) arraysh -> . WORD LARRY NUM RARRY
    (59) arraysh -> . WORD LARRY WORD RARRY
    (43) typeconst -> . TYPE_H
    (44) typeconst -> . TYPE_N
    (45) typeconst -> . TYPE_A
    (46) typeconst -> . TYPE_S

    $end            reduce using rule 3 (EXIT -> .)
    NEWLINE         shift and go to state 6
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 17
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 21
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    STRING_LITERAL  shift and go to state 22
    TYPE_H          shift and go to state 26
    TYPE_N          shift and go to state 27
    TYPE_S          shift and go to state 28

    line                           shift and go to state 1
    Input                          shift and go to state 2
    EXIT                           shift and go to state 3
    statement                      shift and go to state 4
    expression                     shift and go to state 5
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    term                           shift and go to state 14
    arraysh                        shift and go to state 18
    typeconst                      shift and go to state 19

state 1

    (0) S' -> line .



state 2

    (1) line -> Input . line
    (1) line -> . Input line
    (2) line -> . EXIT empty
    (4) Input -> . statement
    (5) Input -> . expression
    (3) EXIT -> .
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (50) exassign -> . WORD EQU expression
    (51) exassign -> . arraysh EQU expression
    (56) declare -> . typeconst WORD
    (57) declare -> . typeconst WORD EQU term
    (60) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (61) declare -> . TYPE_A WORD LARRY NUM RARRY
    (62) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (66) exprint -> . TEXT LPAREN expression printMore RPAREN
    (67) exprint -> . TEXT LPAREN STRING_LITERAL printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (42) term -> . STRING_LITERAL
    (58) arraysh -> . WORD LARRY NUM RARRY
    (59) arraysh -> . WORD LARRY WORD RARRY
    (43) typeconst -> . TYPE_H
    (44) typeconst -> . TYPE_N
    (45) typeconst -> . TYPE_A
    (46) typeconst -> . TYPE_S

    $end            reduce using rule 3 (EXIT -> .)
    NEWLINE         shift and go to state 6
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 17
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 21
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    STRING_LITERAL  shift and go to state 22
    TYPE_H          shift and go to state 26
    TYPE_N          shift and go to state 27
    TYPE_S          shift and go to state 28

    Input                          shift and go to state 2
    line                           shift and go to state 29
    EXIT                           shift and go to state 3
    statement                      shift and go to state 4
    expression                     shift and go to state 5
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    term                           shift and go to state 14
    arraysh                        shift and go to state 18
    typeconst                      shift and go to state 19

state 3

    (2) line -> EXIT . empty
    (71) empty -> .

    $end            reduce using rule 71 (empty -> .)

    empty                          shift and go to state 30

state 4

    (4) Input -> statement .
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

  ! shift/reduce conflict for NEWLINE resolved as shift
    MINUS           reduce using rule 4 (Input -> statement .)
    LPAREN          reduce using rule 4 (Input -> statement .)
    WORD            reduce using rule 4 (Input -> statement .)
    TYPE_A          reduce using rule 4 (Input -> statement .)
    TEXT            reduce using rule 4 (Input -> statement .)
    SO              reduce using rule 4 (Input -> statement .)
    LOOP            reduce using rule 4 (Input -> statement .)
    REPEAT          reduce using rule 4 (Input -> statement .)
    STRING_LITERAL  reduce using rule 4 (Input -> statement .)
    TYPE_H          reduce using rule 4 (Input -> statement .)
    TYPE_N          reduce using rule 4 (Input -> statement .)
    TYPE_S          reduce using rule 4 (Input -> statement .)
    $end            reduce using rule 4 (Input -> statement .)
    NEWLINE         shift and go to state 31

  ! NEWLINE         [ reduce using rule 4 (Input -> statement .) ]


state 5

    (5) Input -> expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

  ! shift/reduce conflict for MINUS resolved as shift
    NEWLINE         reduce using rule 5 (Input -> expression .)
    LPAREN          reduce using rule 5 (Input -> expression .)
    WORD            reduce using rule 5 (Input -> expression .)
    TYPE_A          reduce using rule 5 (Input -> expression .)
    TEXT            reduce using rule 5 (Input -> expression .)
    SO              reduce using rule 5 (Input -> expression .)
    LOOP            reduce using rule 5 (Input -> expression .)
    REPEAT          reduce using rule 5 (Input -> expression .)
    STRING_LITERAL  reduce using rule 5 (Input -> expression .)
    TYPE_H          reduce using rule 5 (Input -> expression .)
    TYPE_N          reduce using rule 5 (Input -> expression .)
    TYPE_S          reduce using rule 5 (Input -> expression .)
    $end            reduce using rule 5 (Input -> expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    MOD             shift and go to state 36
    EQUTO           shift and go to state 37
    NOEQU           shift and go to state 38
    LESS            shift and go to state 39
    MORE            shift and go to state 40

  ! MINUS           [ reduce using rule 5 (Input -> expression .) ]


state 6

    (16) statement -> NEWLINE . statement
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (50) exassign -> . WORD EQU expression
    (51) exassign -> . arraysh EQU expression
    (56) declare -> . typeconst WORD
    (57) declare -> . typeconst WORD EQU term
    (60) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (61) declare -> . TYPE_A WORD LARRY NUM RARRY
    (62) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (66) exprint -> . TEXT LPAREN expression printMore RPAREN
    (67) exprint -> . TEXT LPAREN STRING_LITERAL printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (58) arraysh -> . WORD LARRY NUM RARRY
    (59) arraysh -> . WORD LARRY WORD RARRY
    (43) typeconst -> . TYPE_H
    (44) typeconst -> . TYPE_N
    (45) typeconst -> . TYPE_A
    (46) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 6
    WORD            shift and go to state 17
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 21
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 26
    TYPE_N          shift and go to state 27
    TYPE_S          shift and go to state 28

    statement                      shift and go to state 41
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 18
    typeconst                      shift and go to state 19

state 7

    (8) statement -> exassign .

    NEWLINE         reduce using rule 8 (statement -> exassign .)
    MINUS           reduce using rule 8 (statement -> exassign .)
    LPAREN          reduce using rule 8 (statement -> exassign .)
    WORD            reduce using rule 8 (statement -> exassign .)
    TYPE_A          reduce using rule 8 (statement -> exassign .)
    TEXT            reduce using rule 8 (statement -> exassign .)
    SO              reduce using rule 8 (statement -> exassign .)
    LOOP            reduce using rule 8 (statement -> exassign .)
    REPEAT          reduce using rule 8 (statement -> exassign .)
    STRING_LITERAL  reduce using rule 8 (statement -> exassign .)
    TYPE_H          reduce using rule 8 (statement -> exassign .)
    TYPE_N          reduce using rule 8 (statement -> exassign .)
    TYPE_S          reduce using rule 8 (statement -> exassign .)
    $end            reduce using rule 8 (statement -> exassign .)
    LSTATE          reduce using rule 8 (statement -> exassign .)
    RSTATE          reduce using rule 8 (statement -> exassign .)


state 8

    (9) statement -> declare .

    NEWLINE         reduce using rule 9 (statement -> declare .)
    MINUS           reduce using rule 9 (statement -> declare .)
    LPAREN          reduce using rule 9 (statement -> declare .)
    WORD            reduce using rule 9 (statement -> declare .)
    TYPE_A          reduce using rule 9 (statement -> declare .)
    TEXT            reduce using rule 9 (statement -> declare .)
    SO              reduce using rule 9 (statement -> declare .)
    LOOP            reduce using rule 9 (statement -> declare .)
    REPEAT          reduce using rule 9 (statement -> declare .)
    STRING_LITERAL  reduce using rule 9 (statement -> declare .)
    TYPE_H          reduce using rule 9 (statement -> declare .)
    TYPE_N          reduce using rule 9 (statement -> declare .)
    TYPE_S          reduce using rule 9 (statement -> declare .)
    $end            reduce using rule 9 (statement -> declare .)
    LSTATE          reduce using rule 9 (statement -> declare .)
    RSTATE          reduce using rule 9 (statement -> declare .)


state 9

    (10) statement -> exprint .

    NEWLINE         reduce using rule 10 (statement -> exprint .)
    MINUS           reduce using rule 10 (statement -> exprint .)
    LPAREN          reduce using rule 10 (statement -> exprint .)
    WORD            reduce using rule 10 (statement -> exprint .)
    TYPE_A          reduce using rule 10 (statement -> exprint .)
    TEXT            reduce using rule 10 (statement -> exprint .)
    SO              reduce using rule 10 (statement -> exprint .)
    LOOP            reduce using rule 10 (statement -> exprint .)
    REPEAT          reduce using rule 10 (statement -> exprint .)
    STRING_LITERAL  reduce using rule 10 (statement -> exprint .)
    TYPE_H          reduce using rule 10 (statement -> exprint .)
    TYPE_N          reduce using rule 10 (statement -> exprint .)
    TYPE_S          reduce using rule 10 (statement -> exprint .)
    $end            reduce using rule 10 (statement -> exprint .)
    LSTATE          reduce using rule 10 (statement -> exprint .)
    RSTATE          reduce using rule 10 (statement -> exprint .)


state 10

    (11) statement -> exif .
    (20) exelif -> exif . exelse
    (21) exelse -> . OTHERWISE LSTATE statement LSTATE OTHERWISE
    (22) exelse -> . OTHERWISE LSTATE NEWLINE statement RSTATE

    NEWLINE         reduce using rule 11 (statement -> exif .)
    MINUS           reduce using rule 11 (statement -> exif .)
    LPAREN          reduce using rule 11 (statement -> exif .)
    WORD            reduce using rule 11 (statement -> exif .)
    TYPE_A          reduce using rule 11 (statement -> exif .)
    TEXT            reduce using rule 11 (statement -> exif .)
    SO              reduce using rule 11 (statement -> exif .)
    LOOP            reduce using rule 11 (statement -> exif .)
    REPEAT          reduce using rule 11 (statement -> exif .)
    STRING_LITERAL  reduce using rule 11 (statement -> exif .)
    TYPE_H          reduce using rule 11 (statement -> exif .)
    TYPE_N          reduce using rule 11 (statement -> exif .)
    TYPE_S          reduce using rule 11 (statement -> exif .)
    $end            reduce using rule 11 (statement -> exif .)
    LSTATE          reduce using rule 11 (statement -> exif .)
    RSTATE          reduce using rule 11 (statement -> exif .)
    OTHERWISE       shift and go to state 43

    exelse                         shift and go to state 42

state 11

    (12) statement -> exelif .

    NEWLINE         reduce using rule 12 (statement -> exelif .)
    MINUS           reduce using rule 12 (statement -> exelif .)
    LPAREN          reduce using rule 12 (statement -> exelif .)
    WORD            reduce using rule 12 (statement -> exelif .)
    TYPE_A          reduce using rule 12 (statement -> exelif .)
    TEXT            reduce using rule 12 (statement -> exelif .)
    SO              reduce using rule 12 (statement -> exelif .)
    LOOP            reduce using rule 12 (statement -> exelif .)
    REPEAT          reduce using rule 12 (statement -> exelif .)
    STRING_LITERAL  reduce using rule 12 (statement -> exelif .)
    TYPE_H          reduce using rule 12 (statement -> exelif .)
    TYPE_N          reduce using rule 12 (statement -> exelif .)
    TYPE_S          reduce using rule 12 (statement -> exelif .)
    $end            reduce using rule 12 (statement -> exelif .)
    LSTATE          reduce using rule 12 (statement -> exelif .)
    RSTATE          reduce using rule 12 (statement -> exelif .)


state 12

    (13) statement -> exloop .
    (17) statement -> exloop . NEWLINE

  ! shift/reduce conflict for NEWLINE resolved as shift
    MINUS           reduce using rule 13 (statement -> exloop .)
    LPAREN          reduce using rule 13 (statement -> exloop .)
    WORD            reduce using rule 13 (statement -> exloop .)
    TYPE_A          reduce using rule 13 (statement -> exloop .)
    TEXT            reduce using rule 13 (statement -> exloop .)
    SO              reduce using rule 13 (statement -> exloop .)
    LOOP            reduce using rule 13 (statement -> exloop .)
    REPEAT          reduce using rule 13 (statement -> exloop .)
    STRING_LITERAL  reduce using rule 13 (statement -> exloop .)
    TYPE_H          reduce using rule 13 (statement -> exloop .)
    TYPE_N          reduce using rule 13 (statement -> exloop .)
    TYPE_S          reduce using rule 13 (statement -> exloop .)
    $end            reduce using rule 13 (statement -> exloop .)
    LSTATE          reduce using rule 13 (statement -> exloop .)
    RSTATE          reduce using rule 13 (statement -> exloop .)
    NEWLINE         shift and go to state 44

  ! NEWLINE         [ reduce using rule 13 (statement -> exloop .) ]


state 13

    (14) statement -> exrepeat .

    NEWLINE         reduce using rule 14 (statement -> exrepeat .)
    MINUS           reduce using rule 14 (statement -> exrepeat .)
    LPAREN          reduce using rule 14 (statement -> exrepeat .)
    WORD            reduce using rule 14 (statement -> exrepeat .)
    TYPE_A          reduce using rule 14 (statement -> exrepeat .)
    TEXT            reduce using rule 14 (statement -> exrepeat .)
    SO              reduce using rule 14 (statement -> exrepeat .)
    LOOP            reduce using rule 14 (statement -> exrepeat .)
    REPEAT          reduce using rule 14 (statement -> exrepeat .)
    STRING_LITERAL  reduce using rule 14 (statement -> exrepeat .)
    TYPE_H          reduce using rule 14 (statement -> exrepeat .)
    TYPE_N          reduce using rule 14 (statement -> exrepeat .)
    TYPE_S          reduce using rule 14 (statement -> exrepeat .)
    $end            reduce using rule 14 (statement -> exrepeat .)
    LSTATE          reduce using rule 14 (statement -> exrepeat .)
    RSTATE          reduce using rule 14 (statement -> exrepeat .)


state 14

    (28) expression -> term . PLUS term
    (29) expression -> term . PLUS expression
    (31) expression -> term . MINUS term
    (32) expression -> term . MINUS expression
    (34) expression -> term . MUL term
    (35) expression -> term . MUL expression
    (37) expression -> term . DIV term
    (38) expression -> term . DIV expression
    (40) expression -> term . MOD term
    (41) expression -> term . MOD expression
    (47) expression -> term .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    MUL             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    EQUTO           reduce using rule 47 (expression -> term .)
    NOEQU           reduce using rule 47 (expression -> term .)
    LESS            reduce using rule 47 (expression -> term .)
    MORE            reduce using rule 47 (expression -> term .)
    NEWLINE         reduce using rule 47 (expression -> term .)
    LPAREN          reduce using rule 47 (expression -> term .)
    WORD            reduce using rule 47 (expression -> term .)
    TYPE_A          reduce using rule 47 (expression -> term .)
    TEXT            reduce using rule 47 (expression -> term .)
    SO              reduce using rule 47 (expression -> term .)
    LOOP            reduce using rule 47 (expression -> term .)
    REPEAT          reduce using rule 47 (expression -> term .)
    STRING_LITERAL  reduce using rule 47 (expression -> term .)
    TYPE_H          reduce using rule 47 (expression -> term .)
    TYPE_N          reduce using rule 47 (expression -> term .)
    TYPE_S          reduce using rule 47 (expression -> term .)
    $end            reduce using rule 47 (expression -> term .)
    RPAREN          reduce using rule 47 (expression -> term .)
    LSTATE          reduce using rule 47 (expression -> term .)
    RSTATE          reduce using rule 47 (expression -> term .)
    COMMA           reduce using rule 47 (expression -> term .)
    QUOT            reduce using rule 47 (expression -> term .)

  ! PLUS            [ reduce using rule 47 (expression -> term .) ]
  ! MINUS           [ reduce using rule 47 (expression -> term .) ]
  ! MUL             [ reduce using rule 47 (expression -> term .) ]
  ! DIV             [ reduce using rule 47 (expression -> term .) ]
  ! MOD             [ reduce using rule 47 (expression -> term .) ]


state 15

    (48) expression -> MINUS . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 50
    term                           shift and go to state 14

state 16

    (49) expression -> LPAREN . expression RPAREN
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 51
    term                           shift and go to state 14

state 17

    (50) exassign -> WORD . EQU expression
    (58) arraysh -> WORD . LARRY NUM RARRY
    (59) arraysh -> WORD . LARRY WORD RARRY

    EQU             shift and go to state 52
    LARRY           shift and go to state 53


state 18

    (51) exassign -> arraysh . EQU expression

    EQU             shift and go to state 54


state 19

    (56) declare -> typeconst . WORD
    (57) declare -> typeconst . WORD EQU term

    WORD            shift and go to state 55


state 20

    (60) declare -> TYPE_A . WORD EQU LSTATE arrayX RSTATE
    (61) declare -> TYPE_A . WORD LARRY NUM RARRY
    (62) declare -> TYPE_A . WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (45) typeconst -> TYPE_A .

  ! shift/reduce conflict for WORD resolved as shift
    WORD            shift and go to state 56

  ! WORD            [ reduce using rule 45 (typeconst -> TYPE_A .) ]


state 21

    (66) exprint -> TEXT . LPAREN expression printMore RPAREN
    (67) exprint -> TEXT . LPAREN STRING_LITERAL printMore RPAREN

    LPAREN          shift and go to state 57


state 22

    (42) term -> STRING_LITERAL .

    PLUS            reduce using rule 42 (term -> STRING_LITERAL .)
    MINUS           reduce using rule 42 (term -> STRING_LITERAL .)
    MUL             reduce using rule 42 (term -> STRING_LITERAL .)
    DIV             reduce using rule 42 (term -> STRING_LITERAL .)
    MOD             reduce using rule 42 (term -> STRING_LITERAL .)
    EQUTO           reduce using rule 42 (term -> STRING_LITERAL .)
    NOEQU           reduce using rule 42 (term -> STRING_LITERAL .)
    LESS            reduce using rule 42 (term -> STRING_LITERAL .)
    MORE            reduce using rule 42 (term -> STRING_LITERAL .)
    NEWLINE         reduce using rule 42 (term -> STRING_LITERAL .)
    LPAREN          reduce using rule 42 (term -> STRING_LITERAL .)
    WORD            reduce using rule 42 (term -> STRING_LITERAL .)
    TYPE_A          reduce using rule 42 (term -> STRING_LITERAL .)
    TEXT            reduce using rule 42 (term -> STRING_LITERAL .)
    SO              reduce using rule 42 (term -> STRING_LITERAL .)
    LOOP            reduce using rule 42 (term -> STRING_LITERAL .)
    REPEAT          reduce using rule 42 (term -> STRING_LITERAL .)
    STRING_LITERAL  reduce using rule 42 (term -> STRING_LITERAL .)
    TYPE_H          reduce using rule 42 (term -> STRING_LITERAL .)
    TYPE_N          reduce using rule 42 (term -> STRING_LITERAL .)
    TYPE_S          reduce using rule 42 (term -> STRING_LITERAL .)
    $end            reduce using rule 42 (term -> STRING_LITERAL .)
    RPAREN          reduce using rule 42 (term -> STRING_LITERAL .)
    LSTATE          reduce using rule 42 (term -> STRING_LITERAL .)
    RSTATE          reduce using rule 42 (term -> STRING_LITERAL .)
    COMMA           reduce using rule 42 (term -> STRING_LITERAL .)
    QUOT            reduce using rule 42 (term -> STRING_LITERAL .)


state 23

    (18) exif -> SO . LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> SO . LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE

    LPAREN          shift and go to state 58


state 24

    (23) exloop -> LOOP . LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> LOOP . LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE

    LPAREN          shift and go to state 59


state 25

    (25) exrepeat -> REPEAT . LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> REPEAT . LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE

    LPAREN          shift and go to state 60


state 26

    (43) typeconst -> TYPE_H .

    WORD            reduce using rule 43 (typeconst -> TYPE_H .)


state 27

    (44) typeconst -> TYPE_N .

    WORD            reduce using rule 44 (typeconst -> TYPE_N .)


state 28

    (46) typeconst -> TYPE_S .

    WORD            reduce using rule 46 (typeconst -> TYPE_S .)


state 29

    (1) line -> Input line .

    $end            reduce using rule 1 (line -> Input line .)


state 30

    (2) line -> EXIT empty .

    $end            reduce using rule 2 (line -> EXIT empty .)


state 31

    (6) statement -> statement NEWLINE . statement
    (7) statement -> statement NEWLINE . statement NEWLINE
    (15) statement -> statement NEWLINE .
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (50) exassign -> . WORD EQU expression
    (51) exassign -> . arraysh EQU expression
    (56) declare -> . typeconst WORD
    (57) declare -> . typeconst WORD EQU term
    (60) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (61) declare -> . TYPE_A WORD LARRY NUM RARRY
    (62) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (66) exprint -> . TEXT LPAREN expression printMore RPAREN
    (67) exprint -> . TEXT LPAREN STRING_LITERAL printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (58) arraysh -> . WORD LARRY NUM RARRY
    (59) arraysh -> . WORD LARRY WORD RARRY
    (43) typeconst -> . TYPE_H
    (44) typeconst -> . TYPE_N
    (45) typeconst -> . TYPE_A
    (46) typeconst -> . TYPE_S

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
  ! shift/reduce conflict for TYPE_A resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SO resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for TYPE_H resolved as shift
  ! shift/reduce conflict for TYPE_N resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
    MINUS           reduce using rule 15 (statement -> statement NEWLINE .)
    LPAREN          reduce using rule 15 (statement -> statement NEWLINE .)
    STRING_LITERAL  reduce using rule 15 (statement -> statement NEWLINE .)
    $end            reduce using rule 15 (statement -> statement NEWLINE .)
    LSTATE          reduce using rule 15 (statement -> statement NEWLINE .)
    RSTATE          reduce using rule 15 (statement -> statement NEWLINE .)
    NEWLINE         shift and go to state 6
    WORD            shift and go to state 17
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 21
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 26
    TYPE_N          shift and go to state 27
    TYPE_S          shift and go to state 28

  ! NEWLINE         [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! WORD            [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TYPE_A          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TEXT            [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! SO              [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! LOOP            [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! REPEAT          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TYPE_H          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TYPE_N          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TYPE_S          [ reduce using rule 15 (statement -> statement NEWLINE .) ]

    statement                      shift and go to state 61
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 18
    typeconst                      shift and go to state 19

state 32

    (27) expression -> expression PLUS . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 62
    term                           shift and go to state 14

state 33

    (30) expression -> expression MINUS . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 63
    term                           shift and go to state 14

state 34

    (33) expression -> expression MUL . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 64
    term                           shift and go to state 14

state 35

    (36) expression -> expression DIV . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 65
    term                           shift and go to state 14

state 36

    (39) expression -> expression MOD . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 66
    term                           shift and go to state 14

state 37

    (52) expression -> expression EQUTO . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 67
    term                           shift and go to state 14

state 38

    (53) expression -> expression NOEQU . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 68
    term                           shift and go to state 14

state 39

    (54) expression -> expression LESS . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 69
    term                           shift and go to state 14

state 40

    (55) expression -> expression MORE . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 70
    term                           shift and go to state 14

state 41

    (16) statement -> NEWLINE statement .
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

  ! shift/reduce conflict for NEWLINE resolved as shift
    MINUS           reduce using rule 16 (statement -> NEWLINE statement .)
    LPAREN          reduce using rule 16 (statement -> NEWLINE statement .)
    WORD            reduce using rule 16 (statement -> NEWLINE statement .)
    TYPE_A          reduce using rule 16 (statement -> NEWLINE statement .)
    TEXT            reduce using rule 16 (statement -> NEWLINE statement .)
    SO              reduce using rule 16 (statement -> NEWLINE statement .)
    LOOP            reduce using rule 16 (statement -> NEWLINE statement .)
    REPEAT          reduce using rule 16 (statement -> NEWLINE statement .)
    STRING_LITERAL  reduce using rule 16 (statement -> NEWLINE statement .)
    TYPE_H          reduce using rule 16 (statement -> NEWLINE statement .)
    TYPE_N          reduce using rule 16 (statement -> NEWLINE statement .)
    TYPE_S          reduce using rule 16 (statement -> NEWLINE statement .)
    $end            reduce using rule 16 (statement -> NEWLINE statement .)
    LSTATE          reduce using rule 16 (statement -> NEWLINE statement .)
    RSTATE          reduce using rule 16 (statement -> NEWLINE statement .)
    NEWLINE         shift and go to state 31

  ! NEWLINE         [ reduce using rule 16 (statement -> NEWLINE statement .) ]


state 42

    (20) exelif -> exif exelse .

    NEWLINE         reduce using rule 20 (exelif -> exif exelse .)
    MINUS           reduce using rule 20 (exelif -> exif exelse .)
    LPAREN          reduce using rule 20 (exelif -> exif exelse .)
    WORD            reduce using rule 20 (exelif -> exif exelse .)
    TYPE_A          reduce using rule 20 (exelif -> exif exelse .)
    TEXT            reduce using rule 20 (exelif -> exif exelse .)
    SO              reduce using rule 20 (exelif -> exif exelse .)
    LOOP            reduce using rule 20 (exelif -> exif exelse .)
    REPEAT          reduce using rule 20 (exelif -> exif exelse .)
    STRING_LITERAL  reduce using rule 20 (exelif -> exif exelse .)
    TYPE_H          reduce using rule 20 (exelif -> exif exelse .)
    TYPE_N          reduce using rule 20 (exelif -> exif exelse .)
    TYPE_S          reduce using rule 20 (exelif -> exif exelse .)
    $end            reduce using rule 20 (exelif -> exif exelse .)
    LSTATE          reduce using rule 20 (exelif -> exif exelse .)
    RSTATE          reduce using rule 20 (exelif -> exif exelse .)


state 43

    (21) exelse -> OTHERWISE . LSTATE statement LSTATE OTHERWISE
    (22) exelse -> OTHERWISE . LSTATE NEWLINE statement RSTATE

    LSTATE          shift and go to state 71


state 44

    (17) statement -> exloop NEWLINE .

    NEWLINE         reduce using rule 17 (statement -> exloop NEWLINE .)
    MINUS           reduce using rule 17 (statement -> exloop NEWLINE .)
    LPAREN          reduce using rule 17 (statement -> exloop NEWLINE .)
    WORD            reduce using rule 17 (statement -> exloop NEWLINE .)
    TYPE_A          reduce using rule 17 (statement -> exloop NEWLINE .)
    TEXT            reduce using rule 17 (statement -> exloop NEWLINE .)
    SO              reduce using rule 17 (statement -> exloop NEWLINE .)
    LOOP            reduce using rule 17 (statement -> exloop NEWLINE .)
    REPEAT          reduce using rule 17 (statement -> exloop NEWLINE .)
    STRING_LITERAL  reduce using rule 17 (statement -> exloop NEWLINE .)
    TYPE_H          reduce using rule 17 (statement -> exloop NEWLINE .)
    TYPE_N          reduce using rule 17 (statement -> exloop NEWLINE .)
    TYPE_S          reduce using rule 17 (statement -> exloop NEWLINE .)
    $end            reduce using rule 17 (statement -> exloop NEWLINE .)
    LSTATE          reduce using rule 17 (statement -> exloop NEWLINE .)
    RSTATE          reduce using rule 17 (statement -> exloop NEWLINE .)


state 45

    (28) expression -> term PLUS . term
    (29) expression -> term PLUS . expression
    (42) term -> . STRING_LITERAL
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression

    STRING_LITERAL  shift and go to state 22
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16

    term                           shift and go to state 72
    expression                     shift and go to state 73

state 46

    (31) expression -> term MINUS . term
    (32) expression -> term MINUS . expression
    (42) term -> . STRING_LITERAL
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression

    STRING_LITERAL  shift and go to state 22
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16

    term                           shift and go to state 74
    expression                     shift and go to state 75

state 47

    (34) expression -> term MUL . term
    (35) expression -> term MUL . expression
    (42) term -> . STRING_LITERAL
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression

    STRING_LITERAL  shift and go to state 22
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16

    term                           shift and go to state 76
    expression                     shift and go to state 77

state 48

    (37) expression -> term DIV . term
    (38) expression -> term DIV . expression
    (42) term -> . STRING_LITERAL
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression

    STRING_LITERAL  shift and go to state 22
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16

    term                           shift and go to state 78
    expression                     shift and go to state 79

state 49

    (40) expression -> term MOD . term
    (41) expression -> term MOD . expression
    (42) term -> . STRING_LITERAL
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression

    STRING_LITERAL  shift and go to state 22
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16

    term                           shift and go to state 80
    expression                     shift and go to state 81

state 50

    (48) expression -> MINUS expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    PLUS            reduce using rule 48 (expression -> MINUS expression .)
    MINUS           reduce using rule 48 (expression -> MINUS expression .)
    EQUTO           reduce using rule 48 (expression -> MINUS expression .)
    NOEQU           reduce using rule 48 (expression -> MINUS expression .)
    NEWLINE         reduce using rule 48 (expression -> MINUS expression .)
    LPAREN          reduce using rule 48 (expression -> MINUS expression .)
    WORD            reduce using rule 48 (expression -> MINUS expression .)
    TYPE_A          reduce using rule 48 (expression -> MINUS expression .)
    TEXT            reduce using rule 48 (expression -> MINUS expression .)
    SO              reduce using rule 48 (expression -> MINUS expression .)
    LOOP            reduce using rule 48 (expression -> MINUS expression .)
    REPEAT          reduce using rule 48 (expression -> MINUS expression .)
    STRING_LITERAL  reduce using rule 48 (expression -> MINUS expression .)
    TYPE_H          reduce using rule 48 (expression -> MINUS expression .)
    TYPE_N          reduce using rule 48 (expression -> MINUS expression .)
    TYPE_S          reduce using rule 48 (expression -> MINUS expression .)
    $end            reduce using rule 48 (expression -> MINUS expression .)
    RPAREN          reduce using rule 48 (expression -> MINUS expression .)
    LSTATE          reduce using rule 48 (expression -> MINUS expression .)
    RSTATE          reduce using rule 48 (expression -> MINUS expression .)
    COMMA           reduce using rule 48 (expression -> MINUS expression .)
    QUOT            reduce using rule 48 (expression -> MINUS expression .)
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    MOD             shift and go to state 36
    LESS            shift and go to state 39
    MORE            shift and go to state 40

  ! MUL             [ reduce using rule 48 (expression -> MINUS expression .) ]
  ! DIV             [ reduce using rule 48 (expression -> MINUS expression .) ]
  ! MOD             [ reduce using rule 48 (expression -> MINUS expression .) ]
  ! LESS            [ reduce using rule 48 (expression -> MINUS expression .) ]
  ! MORE            [ reduce using rule 48 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! EQUTO           [ shift and go to state 37 ]
  ! NOEQU           [ shift and go to state 38 ]


state 51

    (49) expression -> LPAREN expression . RPAREN
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    RPAREN          shift and go to state 82
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    MOD             shift and go to state 36
    EQUTO           shift and go to state 37
    NOEQU           shift and go to state 38
    LESS            shift and go to state 39
    MORE            shift and go to state 40


state 52

    (50) exassign -> WORD EQU . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 83
    term                           shift and go to state 14

state 53

    (58) arraysh -> WORD LARRY . NUM RARRY
    (59) arraysh -> WORD LARRY . WORD RARRY

    NUM             shift and go to state 85
    WORD            shift and go to state 84


state 54

    (51) exassign -> arraysh EQU . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 86
    term                           shift and go to state 14

state 55

    (56) declare -> typeconst WORD .
    (57) declare -> typeconst WORD . EQU term

    NEWLINE         reduce using rule 56 (declare -> typeconst WORD .)
    MINUS           reduce using rule 56 (declare -> typeconst WORD .)
    LPAREN          reduce using rule 56 (declare -> typeconst WORD .)
    WORD            reduce using rule 56 (declare -> typeconst WORD .)
    TYPE_A          reduce using rule 56 (declare -> typeconst WORD .)
    TEXT            reduce using rule 56 (declare -> typeconst WORD .)
    SO              reduce using rule 56 (declare -> typeconst WORD .)
    LOOP            reduce using rule 56 (declare -> typeconst WORD .)
    REPEAT          reduce using rule 56 (declare -> typeconst WORD .)
    STRING_LITERAL  reduce using rule 56 (declare -> typeconst WORD .)
    TYPE_H          reduce using rule 56 (declare -> typeconst WORD .)
    TYPE_N          reduce using rule 56 (declare -> typeconst WORD .)
    TYPE_S          reduce using rule 56 (declare -> typeconst WORD .)
    $end            reduce using rule 56 (declare -> typeconst WORD .)
    LSTATE          reduce using rule 56 (declare -> typeconst WORD .)
    RSTATE          reduce using rule 56 (declare -> typeconst WORD .)
    EQU             shift and go to state 87


state 56

    (60) declare -> TYPE_A WORD . EQU LSTATE arrayX RSTATE
    (61) declare -> TYPE_A WORD . LARRY NUM RARRY
    (62) declare -> TYPE_A WORD . LARRY NUM RARRY EQU LSTATE arrayX RSTATE

    EQU             shift and go to state 88
    LARRY           shift and go to state 89


state 57

    (66) exprint -> TEXT LPAREN . expression printMore RPAREN
    (67) exprint -> TEXT LPAREN . STRING_LITERAL printMore RPAREN
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    STRING_LITERAL  shift and go to state 91
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16

    expression                     shift and go to state 90
    term                           shift and go to state 14

state 58

    (18) exif -> SO LPAREN . expression RPAREN LSTATE statement RSTATE
    (19) exif -> SO LPAREN . expression RPAREN NEWLINE LSTATE statement RSTATE
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 92
    term                           shift and go to state 14

state 59

    (23) exloop -> LOOP LPAREN . expression RPAREN LSTATE statement RSTATE
    (24) exloop -> LOOP LPAREN . expression RPAREN LSTATE NEWLINE statement RSTATE
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 93
    term                           shift and go to state 14

state 60

    (25) exrepeat -> REPEAT LPAREN . expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> REPEAT LPAREN . expression RPAREN NEWLINE LSTATE statement RSTATE
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 94
    term                           shift and go to state 14

state 61

    (6) statement -> statement NEWLINE statement .
    (7) statement -> statement NEWLINE statement . NEWLINE
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

  ! shift/reduce conflict for NEWLINE resolved as shift
    MINUS           reduce using rule 6 (statement -> statement NEWLINE statement .)
    LPAREN          reduce using rule 6 (statement -> statement NEWLINE statement .)
    WORD            reduce using rule 6 (statement -> statement NEWLINE statement .)
    TYPE_A          reduce using rule 6 (statement -> statement NEWLINE statement .)
    TEXT            reduce using rule 6 (statement -> statement NEWLINE statement .)
    SO              reduce using rule 6 (statement -> statement NEWLINE statement .)
    LOOP            reduce using rule 6 (statement -> statement NEWLINE statement .)
    REPEAT          reduce using rule 6 (statement -> statement NEWLINE statement .)
    STRING_LITERAL  reduce using rule 6 (statement -> statement NEWLINE statement .)
    TYPE_H          reduce using rule 6 (statement -> statement NEWLINE statement .)
    TYPE_N          reduce using rule 6 (statement -> statement NEWLINE statement .)
    TYPE_S          reduce using rule 6 (statement -> statement NEWLINE statement .)
    $end            reduce using rule 6 (statement -> statement NEWLINE statement .)
    LSTATE          reduce using rule 6 (statement -> statement NEWLINE statement .)
    RSTATE          reduce using rule 6 (statement -> statement NEWLINE statement .)
    NEWLINE         shift and go to state 95

  ! NEWLINE         [ reduce using rule 6 (statement -> statement NEWLINE statement .) ]


state 62

    (27) expression -> expression PLUS expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    PLUS            reduce using rule 27 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 27 (expression -> expression PLUS expression .)
    EQUTO           reduce using rule 27 (expression -> expression PLUS expression .)
    NOEQU           reduce using rule 27 (expression -> expression PLUS expression .)
    NEWLINE         reduce using rule 27 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 27 (expression -> expression PLUS expression .)
    WORD            reduce using rule 27 (expression -> expression PLUS expression .)
    TYPE_A          reduce using rule 27 (expression -> expression PLUS expression .)
    TEXT            reduce using rule 27 (expression -> expression PLUS expression .)
    SO              reduce using rule 27 (expression -> expression PLUS expression .)
    LOOP            reduce using rule 27 (expression -> expression PLUS expression .)
    REPEAT          reduce using rule 27 (expression -> expression PLUS expression .)
    STRING_LITERAL  reduce using rule 27 (expression -> expression PLUS expression .)
    TYPE_H          reduce using rule 27 (expression -> expression PLUS expression .)
    TYPE_N          reduce using rule 27 (expression -> expression PLUS expression .)
    TYPE_S          reduce using rule 27 (expression -> expression PLUS expression .)
    $end            reduce using rule 27 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 27 (expression -> expression PLUS expression .)
    LSTATE          reduce using rule 27 (expression -> expression PLUS expression .)
    RSTATE          reduce using rule 27 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 27 (expression -> expression PLUS expression .)
    QUOT            reduce using rule 27 (expression -> expression PLUS expression .)
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    MOD             shift and go to state 36
    LESS            shift and go to state 39
    MORE            shift and go to state 40

  ! MUL             [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! LESS            [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! MORE            [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! EQUTO           [ shift and go to state 37 ]
  ! NOEQU           [ shift and go to state 38 ]


state 63

    (30) expression -> expression MINUS expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    PLUS            reduce using rule 30 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 30 (expression -> expression MINUS expression .)
    EQUTO           reduce using rule 30 (expression -> expression MINUS expression .)
    NOEQU           reduce using rule 30 (expression -> expression MINUS expression .)
    NEWLINE         reduce using rule 30 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 30 (expression -> expression MINUS expression .)
    WORD            reduce using rule 30 (expression -> expression MINUS expression .)
    TYPE_A          reduce using rule 30 (expression -> expression MINUS expression .)
    TEXT            reduce using rule 30 (expression -> expression MINUS expression .)
    SO              reduce using rule 30 (expression -> expression MINUS expression .)
    LOOP            reduce using rule 30 (expression -> expression MINUS expression .)
    REPEAT          reduce using rule 30 (expression -> expression MINUS expression .)
    STRING_LITERAL  reduce using rule 30 (expression -> expression MINUS expression .)
    TYPE_H          reduce using rule 30 (expression -> expression MINUS expression .)
    TYPE_N          reduce using rule 30 (expression -> expression MINUS expression .)
    TYPE_S          reduce using rule 30 (expression -> expression MINUS expression .)
    $end            reduce using rule 30 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 30 (expression -> expression MINUS expression .)
    LSTATE          reduce using rule 30 (expression -> expression MINUS expression .)
    RSTATE          reduce using rule 30 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 30 (expression -> expression MINUS expression .)
    QUOT            reduce using rule 30 (expression -> expression MINUS expression .)
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    MOD             shift and go to state 36
    LESS            shift and go to state 39
    MORE            shift and go to state 40

  ! MUL             [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! LESS            [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! MORE            [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! EQUTO           [ shift and go to state 37 ]
  ! NOEQU           [ shift and go to state 38 ]


state 64

    (33) expression -> expression MUL expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    PLUS            reduce using rule 33 (expression -> expression MUL expression .)
    MINUS           reduce using rule 33 (expression -> expression MUL expression .)
    MUL             reduce using rule 33 (expression -> expression MUL expression .)
    DIV             reduce using rule 33 (expression -> expression MUL expression .)
    MOD             reduce using rule 33 (expression -> expression MUL expression .)
    EQUTO           reduce using rule 33 (expression -> expression MUL expression .)
    NOEQU           reduce using rule 33 (expression -> expression MUL expression .)
    NEWLINE         reduce using rule 33 (expression -> expression MUL expression .)
    LPAREN          reduce using rule 33 (expression -> expression MUL expression .)
    WORD            reduce using rule 33 (expression -> expression MUL expression .)
    TYPE_A          reduce using rule 33 (expression -> expression MUL expression .)
    TEXT            reduce using rule 33 (expression -> expression MUL expression .)
    SO              reduce using rule 33 (expression -> expression MUL expression .)
    LOOP            reduce using rule 33 (expression -> expression MUL expression .)
    REPEAT          reduce using rule 33 (expression -> expression MUL expression .)
    STRING_LITERAL  reduce using rule 33 (expression -> expression MUL expression .)
    TYPE_H          reduce using rule 33 (expression -> expression MUL expression .)
    TYPE_N          reduce using rule 33 (expression -> expression MUL expression .)
    TYPE_S          reduce using rule 33 (expression -> expression MUL expression .)
    $end            reduce using rule 33 (expression -> expression MUL expression .)
    RPAREN          reduce using rule 33 (expression -> expression MUL expression .)
    LSTATE          reduce using rule 33 (expression -> expression MUL expression .)
    RSTATE          reduce using rule 33 (expression -> expression MUL expression .)
    COMMA           reduce using rule 33 (expression -> expression MUL expression .)
    QUOT            reduce using rule 33 (expression -> expression MUL expression .)
    LESS            shift and go to state 39
    MORE            shift and go to state 40

  ! LESS            [ reduce using rule 33 (expression -> expression MUL expression .) ]
  ! MORE            [ reduce using rule 33 (expression -> expression MUL expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! EQUTO           [ shift and go to state 37 ]
  ! NOEQU           [ shift and go to state 38 ]


state 65

    (36) expression -> expression DIV expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    PLUS            reduce using rule 36 (expression -> expression DIV expression .)
    MINUS           reduce using rule 36 (expression -> expression DIV expression .)
    MUL             reduce using rule 36 (expression -> expression DIV expression .)
    DIV             reduce using rule 36 (expression -> expression DIV expression .)
    MOD             reduce using rule 36 (expression -> expression DIV expression .)
    EQUTO           reduce using rule 36 (expression -> expression DIV expression .)
    NOEQU           reduce using rule 36 (expression -> expression DIV expression .)
    NEWLINE         reduce using rule 36 (expression -> expression DIV expression .)
    LPAREN          reduce using rule 36 (expression -> expression DIV expression .)
    WORD            reduce using rule 36 (expression -> expression DIV expression .)
    TYPE_A          reduce using rule 36 (expression -> expression DIV expression .)
    TEXT            reduce using rule 36 (expression -> expression DIV expression .)
    SO              reduce using rule 36 (expression -> expression DIV expression .)
    LOOP            reduce using rule 36 (expression -> expression DIV expression .)
    REPEAT          reduce using rule 36 (expression -> expression DIV expression .)
    STRING_LITERAL  reduce using rule 36 (expression -> expression DIV expression .)
    TYPE_H          reduce using rule 36 (expression -> expression DIV expression .)
    TYPE_N          reduce using rule 36 (expression -> expression DIV expression .)
    TYPE_S          reduce using rule 36 (expression -> expression DIV expression .)
    $end            reduce using rule 36 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 36 (expression -> expression DIV expression .)
    LSTATE          reduce using rule 36 (expression -> expression DIV expression .)
    RSTATE          reduce using rule 36 (expression -> expression DIV expression .)
    COMMA           reduce using rule 36 (expression -> expression DIV expression .)
    QUOT            reduce using rule 36 (expression -> expression DIV expression .)
    LESS            shift and go to state 39
    MORE            shift and go to state 40

  ! LESS            [ reduce using rule 36 (expression -> expression DIV expression .) ]
  ! MORE            [ reduce using rule 36 (expression -> expression DIV expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! EQUTO           [ shift and go to state 37 ]
  ! NOEQU           [ shift and go to state 38 ]


state 66

    (39) expression -> expression MOD expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    PLUS            reduce using rule 39 (expression -> expression MOD expression .)
    MINUS           reduce using rule 39 (expression -> expression MOD expression .)
    MUL             reduce using rule 39 (expression -> expression MOD expression .)
    DIV             reduce using rule 39 (expression -> expression MOD expression .)
    MOD             reduce using rule 39 (expression -> expression MOD expression .)
    EQUTO           reduce using rule 39 (expression -> expression MOD expression .)
    NOEQU           reduce using rule 39 (expression -> expression MOD expression .)
    NEWLINE         reduce using rule 39 (expression -> expression MOD expression .)
    LPAREN          reduce using rule 39 (expression -> expression MOD expression .)
    WORD            reduce using rule 39 (expression -> expression MOD expression .)
    TYPE_A          reduce using rule 39 (expression -> expression MOD expression .)
    TEXT            reduce using rule 39 (expression -> expression MOD expression .)
    SO              reduce using rule 39 (expression -> expression MOD expression .)
    LOOP            reduce using rule 39 (expression -> expression MOD expression .)
    REPEAT          reduce using rule 39 (expression -> expression MOD expression .)
    STRING_LITERAL  reduce using rule 39 (expression -> expression MOD expression .)
    TYPE_H          reduce using rule 39 (expression -> expression MOD expression .)
    TYPE_N          reduce using rule 39 (expression -> expression MOD expression .)
    TYPE_S          reduce using rule 39 (expression -> expression MOD expression .)
    $end            reduce using rule 39 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 39 (expression -> expression MOD expression .)
    LSTATE          reduce using rule 39 (expression -> expression MOD expression .)
    RSTATE          reduce using rule 39 (expression -> expression MOD expression .)
    COMMA           reduce using rule 39 (expression -> expression MOD expression .)
    QUOT            reduce using rule 39 (expression -> expression MOD expression .)
    LESS            shift and go to state 39
    MORE            shift and go to state 40

  ! LESS            [ reduce using rule 39 (expression -> expression MOD expression .) ]
  ! MORE            [ reduce using rule 39 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! EQUTO           [ shift and go to state 37 ]
  ! NOEQU           [ shift and go to state 38 ]


state 67

    (52) expression -> expression EQUTO expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for EQUTO resolved as shift
  ! shift/reduce conflict for NOEQU resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for MORE resolved as shift
    NEWLINE         reduce using rule 52 (expression -> expression EQUTO expression .)
    LPAREN          reduce using rule 52 (expression -> expression EQUTO expression .)
    WORD            reduce using rule 52 (expression -> expression EQUTO expression .)
    TYPE_A          reduce using rule 52 (expression -> expression EQUTO expression .)
    TEXT            reduce using rule 52 (expression -> expression EQUTO expression .)
    SO              reduce using rule 52 (expression -> expression EQUTO expression .)
    LOOP            reduce using rule 52 (expression -> expression EQUTO expression .)
    REPEAT          reduce using rule 52 (expression -> expression EQUTO expression .)
    STRING_LITERAL  reduce using rule 52 (expression -> expression EQUTO expression .)
    TYPE_H          reduce using rule 52 (expression -> expression EQUTO expression .)
    TYPE_N          reduce using rule 52 (expression -> expression EQUTO expression .)
    TYPE_S          reduce using rule 52 (expression -> expression EQUTO expression .)
    $end            reduce using rule 52 (expression -> expression EQUTO expression .)
    RPAREN          reduce using rule 52 (expression -> expression EQUTO expression .)
    LSTATE          reduce using rule 52 (expression -> expression EQUTO expression .)
    RSTATE          reduce using rule 52 (expression -> expression EQUTO expression .)
    COMMA           reduce using rule 52 (expression -> expression EQUTO expression .)
    QUOT            reduce using rule 52 (expression -> expression EQUTO expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    MOD             shift and go to state 36
    EQUTO           shift and go to state 37
    NOEQU           shift and go to state 38
    LESS            shift and go to state 39
    MORE            shift and go to state 40

  ! PLUS            [ reduce using rule 52 (expression -> expression EQUTO expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression EQUTO expression .) ]
  ! MUL             [ reduce using rule 52 (expression -> expression EQUTO expression .) ]
  ! DIV             [ reduce using rule 52 (expression -> expression EQUTO expression .) ]
  ! MOD             [ reduce using rule 52 (expression -> expression EQUTO expression .) ]
  ! EQUTO           [ reduce using rule 52 (expression -> expression EQUTO expression .) ]
  ! NOEQU           [ reduce using rule 52 (expression -> expression EQUTO expression .) ]
  ! LESS            [ reduce using rule 52 (expression -> expression EQUTO expression .) ]
  ! MORE            [ reduce using rule 52 (expression -> expression EQUTO expression .) ]


state 68

    (53) expression -> expression NOEQU expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for EQUTO resolved as shift
  ! shift/reduce conflict for NOEQU resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for MORE resolved as shift
    NEWLINE         reduce using rule 53 (expression -> expression NOEQU expression .)
    LPAREN          reduce using rule 53 (expression -> expression NOEQU expression .)
    WORD            reduce using rule 53 (expression -> expression NOEQU expression .)
    TYPE_A          reduce using rule 53 (expression -> expression NOEQU expression .)
    TEXT            reduce using rule 53 (expression -> expression NOEQU expression .)
    SO              reduce using rule 53 (expression -> expression NOEQU expression .)
    LOOP            reduce using rule 53 (expression -> expression NOEQU expression .)
    REPEAT          reduce using rule 53 (expression -> expression NOEQU expression .)
    STRING_LITERAL  reduce using rule 53 (expression -> expression NOEQU expression .)
    TYPE_H          reduce using rule 53 (expression -> expression NOEQU expression .)
    TYPE_N          reduce using rule 53 (expression -> expression NOEQU expression .)
    TYPE_S          reduce using rule 53 (expression -> expression NOEQU expression .)
    $end            reduce using rule 53 (expression -> expression NOEQU expression .)
    RPAREN          reduce using rule 53 (expression -> expression NOEQU expression .)
    LSTATE          reduce using rule 53 (expression -> expression NOEQU expression .)
    RSTATE          reduce using rule 53 (expression -> expression NOEQU expression .)
    COMMA           reduce using rule 53 (expression -> expression NOEQU expression .)
    QUOT            reduce using rule 53 (expression -> expression NOEQU expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    MOD             shift and go to state 36
    EQUTO           shift and go to state 37
    NOEQU           shift and go to state 38
    LESS            shift and go to state 39
    MORE            shift and go to state 40

  ! PLUS            [ reduce using rule 53 (expression -> expression NOEQU expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression NOEQU expression .) ]
  ! MUL             [ reduce using rule 53 (expression -> expression NOEQU expression .) ]
  ! DIV             [ reduce using rule 53 (expression -> expression NOEQU expression .) ]
  ! MOD             [ reduce using rule 53 (expression -> expression NOEQU expression .) ]
  ! EQUTO           [ reduce using rule 53 (expression -> expression NOEQU expression .) ]
  ! NOEQU           [ reduce using rule 53 (expression -> expression NOEQU expression .) ]
  ! LESS            [ reduce using rule 53 (expression -> expression NOEQU expression .) ]
  ! MORE            [ reduce using rule 53 (expression -> expression NOEQU expression .) ]


state 69

    (54) expression -> expression LESS expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    PLUS            reduce using rule 54 (expression -> expression LESS expression .)
    MINUS           reduce using rule 54 (expression -> expression LESS expression .)
    MUL             reduce using rule 54 (expression -> expression LESS expression .)
    DIV             reduce using rule 54 (expression -> expression LESS expression .)
    MOD             reduce using rule 54 (expression -> expression LESS expression .)
    EQUTO           reduce using rule 54 (expression -> expression LESS expression .)
    NOEQU           reduce using rule 54 (expression -> expression LESS expression .)
    LESS            reduce using rule 54 (expression -> expression LESS expression .)
    MORE            reduce using rule 54 (expression -> expression LESS expression .)
    NEWLINE         reduce using rule 54 (expression -> expression LESS expression .)
    LPAREN          reduce using rule 54 (expression -> expression LESS expression .)
    WORD            reduce using rule 54 (expression -> expression LESS expression .)
    TYPE_A          reduce using rule 54 (expression -> expression LESS expression .)
    TEXT            reduce using rule 54 (expression -> expression LESS expression .)
    SO              reduce using rule 54 (expression -> expression LESS expression .)
    LOOP            reduce using rule 54 (expression -> expression LESS expression .)
    REPEAT          reduce using rule 54 (expression -> expression LESS expression .)
    STRING_LITERAL  reduce using rule 54 (expression -> expression LESS expression .)
    TYPE_H          reduce using rule 54 (expression -> expression LESS expression .)
    TYPE_N          reduce using rule 54 (expression -> expression LESS expression .)
    TYPE_S          reduce using rule 54 (expression -> expression LESS expression .)
    $end            reduce using rule 54 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 54 (expression -> expression LESS expression .)
    LSTATE          reduce using rule 54 (expression -> expression LESS expression .)
    RSTATE          reduce using rule 54 (expression -> expression LESS expression .)
    COMMA           reduce using rule 54 (expression -> expression LESS expression .)
    QUOT            reduce using rule 54 (expression -> expression LESS expression .)

  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! EQUTO           [ shift and go to state 37 ]
  ! NOEQU           [ shift and go to state 38 ]
  ! LESS            [ shift and go to state 39 ]
  ! MORE            [ shift and go to state 40 ]


state 70

    (55) expression -> expression MORE expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    PLUS            reduce using rule 55 (expression -> expression MORE expression .)
    MINUS           reduce using rule 55 (expression -> expression MORE expression .)
    MUL             reduce using rule 55 (expression -> expression MORE expression .)
    DIV             reduce using rule 55 (expression -> expression MORE expression .)
    MOD             reduce using rule 55 (expression -> expression MORE expression .)
    EQUTO           reduce using rule 55 (expression -> expression MORE expression .)
    NOEQU           reduce using rule 55 (expression -> expression MORE expression .)
    LESS            reduce using rule 55 (expression -> expression MORE expression .)
    MORE            reduce using rule 55 (expression -> expression MORE expression .)
    NEWLINE         reduce using rule 55 (expression -> expression MORE expression .)
    LPAREN          reduce using rule 55 (expression -> expression MORE expression .)
    WORD            reduce using rule 55 (expression -> expression MORE expression .)
    TYPE_A          reduce using rule 55 (expression -> expression MORE expression .)
    TEXT            reduce using rule 55 (expression -> expression MORE expression .)
    SO              reduce using rule 55 (expression -> expression MORE expression .)
    LOOP            reduce using rule 55 (expression -> expression MORE expression .)
    REPEAT          reduce using rule 55 (expression -> expression MORE expression .)
    STRING_LITERAL  reduce using rule 55 (expression -> expression MORE expression .)
    TYPE_H          reduce using rule 55 (expression -> expression MORE expression .)
    TYPE_N          reduce using rule 55 (expression -> expression MORE expression .)
    TYPE_S          reduce using rule 55 (expression -> expression MORE expression .)
    $end            reduce using rule 55 (expression -> expression MORE expression .)
    RPAREN          reduce using rule 55 (expression -> expression MORE expression .)
    LSTATE          reduce using rule 55 (expression -> expression MORE expression .)
    RSTATE          reduce using rule 55 (expression -> expression MORE expression .)
    COMMA           reduce using rule 55 (expression -> expression MORE expression .)
    QUOT            reduce using rule 55 (expression -> expression MORE expression .)

  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! EQUTO           [ shift and go to state 37 ]
  ! NOEQU           [ shift and go to state 38 ]
  ! LESS            [ shift and go to state 39 ]
  ! MORE            [ shift and go to state 40 ]


state 71

    (21) exelse -> OTHERWISE LSTATE . statement LSTATE OTHERWISE
    (22) exelse -> OTHERWISE LSTATE . NEWLINE statement RSTATE
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (50) exassign -> . WORD EQU expression
    (51) exassign -> . arraysh EQU expression
    (56) declare -> . typeconst WORD
    (57) declare -> . typeconst WORD EQU term
    (60) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (61) declare -> . TYPE_A WORD LARRY NUM RARRY
    (62) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (66) exprint -> . TEXT LPAREN expression printMore RPAREN
    (67) exprint -> . TEXT LPAREN STRING_LITERAL printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (58) arraysh -> . WORD LARRY NUM RARRY
    (59) arraysh -> . WORD LARRY WORD RARRY
    (43) typeconst -> . TYPE_H
    (44) typeconst -> . TYPE_N
    (45) typeconst -> . TYPE_A
    (46) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 97
    WORD            shift and go to state 17
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 21
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 26
    TYPE_N          shift and go to state 27
    TYPE_S          shift and go to state 28

    statement                      shift and go to state 96
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 18
    typeconst                      shift and go to state 19

state 72

    (28) expression -> term PLUS term .
    (28) expression -> term . PLUS term
    (29) expression -> term . PLUS expression
    (31) expression -> term . MINUS term
    (32) expression -> term . MINUS expression
    (34) expression -> term . MUL term
    (35) expression -> term . MUL expression
    (37) expression -> term . DIV term
    (38) expression -> term . DIV expression
    (40) expression -> term . MOD term
    (41) expression -> term . MOD expression
    (47) expression -> term .

  ! reduce/reduce conflict for PLUS resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for MINUS resolved using rule 28 (expression -> term PLUS term .)
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! reduce/reduce conflict for EQUTO resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for NOEQU resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for LESS resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for MORE resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for LPAREN resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for WORD resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for TYPE_A resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for TEXT resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for SO resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for LOOP resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for REPEAT resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for STRING_LITERAL resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for TYPE_H resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for TYPE_N resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for $end resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for LSTATE resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for RSTATE resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for COMMA resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for QUOT resolved using rule 28 (expression -> term PLUS term .)
    PLUS            reduce using rule 28 (expression -> term PLUS term .)
    MINUS           reduce using rule 28 (expression -> term PLUS term .)
    EQUTO           reduce using rule 28 (expression -> term PLUS term .)
    NOEQU           reduce using rule 28 (expression -> term PLUS term .)
    LESS            reduce using rule 28 (expression -> term PLUS term .)
    MORE            reduce using rule 28 (expression -> term PLUS term .)
    NEWLINE         reduce using rule 28 (expression -> term PLUS term .)
    LPAREN          reduce using rule 28 (expression -> term PLUS term .)
    WORD            reduce using rule 28 (expression -> term PLUS term .)
    TYPE_A          reduce using rule 28 (expression -> term PLUS term .)
    TEXT            reduce using rule 28 (expression -> term PLUS term .)
    SO              reduce using rule 28 (expression -> term PLUS term .)
    LOOP            reduce using rule 28 (expression -> term PLUS term .)
    REPEAT          reduce using rule 28 (expression -> term PLUS term .)
    STRING_LITERAL  reduce using rule 28 (expression -> term PLUS term .)
    TYPE_H          reduce using rule 28 (expression -> term PLUS term .)
    TYPE_N          reduce using rule 28 (expression -> term PLUS term .)
    TYPE_S          reduce using rule 28 (expression -> term PLUS term .)
    $end            reduce using rule 28 (expression -> term PLUS term .)
    RPAREN          reduce using rule 28 (expression -> term PLUS term .)
    LSTATE          reduce using rule 28 (expression -> term PLUS term .)
    RSTATE          reduce using rule 28 (expression -> term PLUS term .)
    COMMA           reduce using rule 28 (expression -> term PLUS term .)
    QUOT            reduce using rule 28 (expression -> term PLUS term .)
    MUL             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49

  ! MUL             [ reduce using rule 28 (expression -> term PLUS term .) ]
  ! DIV             [ reduce using rule 28 (expression -> term PLUS term .) ]
  ! MOD             [ reduce using rule 28 (expression -> term PLUS term .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! PLUS            [ reduce using rule 47 (expression -> term .) ]
  ! MINUS           [ reduce using rule 47 (expression -> term .) ]
  ! MUL             [ reduce using rule 47 (expression -> term .) ]
  ! DIV             [ reduce using rule 47 (expression -> term .) ]
  ! MOD             [ reduce using rule 47 (expression -> term .) ]
  ! EQUTO           [ reduce using rule 47 (expression -> term .) ]
  ! NOEQU           [ reduce using rule 47 (expression -> term .) ]
  ! LESS            [ reduce using rule 47 (expression -> term .) ]
  ! MORE            [ reduce using rule 47 (expression -> term .) ]
  ! NEWLINE         [ reduce using rule 47 (expression -> term .) ]
  ! LPAREN          [ reduce using rule 47 (expression -> term .) ]
  ! WORD            [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_A          [ reduce using rule 47 (expression -> term .) ]
  ! TEXT            [ reduce using rule 47 (expression -> term .) ]
  ! SO              [ reduce using rule 47 (expression -> term .) ]
  ! LOOP            [ reduce using rule 47 (expression -> term .) ]
  ! REPEAT          [ reduce using rule 47 (expression -> term .) ]
  ! STRING_LITERAL  [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_H          [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_N          [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_S          [ reduce using rule 47 (expression -> term .) ]
  ! $end            [ reduce using rule 47 (expression -> term .) ]
  ! RPAREN          [ reduce using rule 47 (expression -> term .) ]
  ! LSTATE          [ reduce using rule 47 (expression -> term .) ]
  ! RSTATE          [ reduce using rule 47 (expression -> term .) ]
  ! COMMA           [ reduce using rule 47 (expression -> term .) ]
  ! QUOT            [ reduce using rule 47 (expression -> term .) ]


state 73

    (29) expression -> term PLUS expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    PLUS            reduce using rule 29 (expression -> term PLUS expression .)
    MINUS           reduce using rule 29 (expression -> term PLUS expression .)
    EQUTO           reduce using rule 29 (expression -> term PLUS expression .)
    NOEQU           reduce using rule 29 (expression -> term PLUS expression .)
    NEWLINE         reduce using rule 29 (expression -> term PLUS expression .)
    LPAREN          reduce using rule 29 (expression -> term PLUS expression .)
    WORD            reduce using rule 29 (expression -> term PLUS expression .)
    TYPE_A          reduce using rule 29 (expression -> term PLUS expression .)
    TEXT            reduce using rule 29 (expression -> term PLUS expression .)
    SO              reduce using rule 29 (expression -> term PLUS expression .)
    LOOP            reduce using rule 29 (expression -> term PLUS expression .)
    REPEAT          reduce using rule 29 (expression -> term PLUS expression .)
    STRING_LITERAL  reduce using rule 29 (expression -> term PLUS expression .)
    TYPE_H          reduce using rule 29 (expression -> term PLUS expression .)
    TYPE_N          reduce using rule 29 (expression -> term PLUS expression .)
    TYPE_S          reduce using rule 29 (expression -> term PLUS expression .)
    $end            reduce using rule 29 (expression -> term PLUS expression .)
    RPAREN          reduce using rule 29 (expression -> term PLUS expression .)
    LSTATE          reduce using rule 29 (expression -> term PLUS expression .)
    RSTATE          reduce using rule 29 (expression -> term PLUS expression .)
    COMMA           reduce using rule 29 (expression -> term PLUS expression .)
    QUOT            reduce using rule 29 (expression -> term PLUS expression .)
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    MOD             shift and go to state 36
    LESS            shift and go to state 39
    MORE            shift and go to state 40

  ! MUL             [ reduce using rule 29 (expression -> term PLUS expression .) ]
  ! DIV             [ reduce using rule 29 (expression -> term PLUS expression .) ]
  ! MOD             [ reduce using rule 29 (expression -> term PLUS expression .) ]
  ! LESS            [ reduce using rule 29 (expression -> term PLUS expression .) ]
  ! MORE            [ reduce using rule 29 (expression -> term PLUS expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! EQUTO           [ shift and go to state 37 ]
  ! NOEQU           [ shift and go to state 38 ]


state 74

    (31) expression -> term MINUS term .
    (28) expression -> term . PLUS term
    (29) expression -> term . PLUS expression
    (31) expression -> term . MINUS term
    (32) expression -> term . MINUS expression
    (34) expression -> term . MUL term
    (35) expression -> term . MUL expression
    (37) expression -> term . DIV term
    (38) expression -> term . DIV expression
    (40) expression -> term . MOD term
    (41) expression -> term . MOD expression
    (47) expression -> term .

  ! reduce/reduce conflict for PLUS resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for MINUS resolved using rule 31 (expression -> term MINUS term .)
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! reduce/reduce conflict for EQUTO resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for NOEQU resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for LESS resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for MORE resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for LPAREN resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for WORD resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for TYPE_A resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for TEXT resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for SO resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for LOOP resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for REPEAT resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for STRING_LITERAL resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for TYPE_H resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for TYPE_N resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for $end resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for LSTATE resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for RSTATE resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for COMMA resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for QUOT resolved using rule 31 (expression -> term MINUS term .)
    PLUS            reduce using rule 31 (expression -> term MINUS term .)
    MINUS           reduce using rule 31 (expression -> term MINUS term .)
    EQUTO           reduce using rule 31 (expression -> term MINUS term .)
    NOEQU           reduce using rule 31 (expression -> term MINUS term .)
    LESS            reduce using rule 31 (expression -> term MINUS term .)
    MORE            reduce using rule 31 (expression -> term MINUS term .)
    NEWLINE         reduce using rule 31 (expression -> term MINUS term .)
    LPAREN          reduce using rule 31 (expression -> term MINUS term .)
    WORD            reduce using rule 31 (expression -> term MINUS term .)
    TYPE_A          reduce using rule 31 (expression -> term MINUS term .)
    TEXT            reduce using rule 31 (expression -> term MINUS term .)
    SO              reduce using rule 31 (expression -> term MINUS term .)
    LOOP            reduce using rule 31 (expression -> term MINUS term .)
    REPEAT          reduce using rule 31 (expression -> term MINUS term .)
    STRING_LITERAL  reduce using rule 31 (expression -> term MINUS term .)
    TYPE_H          reduce using rule 31 (expression -> term MINUS term .)
    TYPE_N          reduce using rule 31 (expression -> term MINUS term .)
    TYPE_S          reduce using rule 31 (expression -> term MINUS term .)
    $end            reduce using rule 31 (expression -> term MINUS term .)
    RPAREN          reduce using rule 31 (expression -> term MINUS term .)
    LSTATE          reduce using rule 31 (expression -> term MINUS term .)
    RSTATE          reduce using rule 31 (expression -> term MINUS term .)
    COMMA           reduce using rule 31 (expression -> term MINUS term .)
    QUOT            reduce using rule 31 (expression -> term MINUS term .)
    MUL             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49

  ! MUL             [ reduce using rule 31 (expression -> term MINUS term .) ]
  ! DIV             [ reduce using rule 31 (expression -> term MINUS term .) ]
  ! MOD             [ reduce using rule 31 (expression -> term MINUS term .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! PLUS            [ reduce using rule 47 (expression -> term .) ]
  ! MINUS           [ reduce using rule 47 (expression -> term .) ]
  ! MUL             [ reduce using rule 47 (expression -> term .) ]
  ! DIV             [ reduce using rule 47 (expression -> term .) ]
  ! MOD             [ reduce using rule 47 (expression -> term .) ]
  ! EQUTO           [ reduce using rule 47 (expression -> term .) ]
  ! NOEQU           [ reduce using rule 47 (expression -> term .) ]
  ! LESS            [ reduce using rule 47 (expression -> term .) ]
  ! MORE            [ reduce using rule 47 (expression -> term .) ]
  ! NEWLINE         [ reduce using rule 47 (expression -> term .) ]
  ! LPAREN          [ reduce using rule 47 (expression -> term .) ]
  ! WORD            [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_A          [ reduce using rule 47 (expression -> term .) ]
  ! TEXT            [ reduce using rule 47 (expression -> term .) ]
  ! SO              [ reduce using rule 47 (expression -> term .) ]
  ! LOOP            [ reduce using rule 47 (expression -> term .) ]
  ! REPEAT          [ reduce using rule 47 (expression -> term .) ]
  ! STRING_LITERAL  [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_H          [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_N          [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_S          [ reduce using rule 47 (expression -> term .) ]
  ! $end            [ reduce using rule 47 (expression -> term .) ]
  ! RPAREN          [ reduce using rule 47 (expression -> term .) ]
  ! LSTATE          [ reduce using rule 47 (expression -> term .) ]
  ! RSTATE          [ reduce using rule 47 (expression -> term .) ]
  ! COMMA           [ reduce using rule 47 (expression -> term .) ]
  ! QUOT            [ reduce using rule 47 (expression -> term .) ]


state 75

    (32) expression -> term MINUS expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    PLUS            reduce using rule 32 (expression -> term MINUS expression .)
    MINUS           reduce using rule 32 (expression -> term MINUS expression .)
    EQUTO           reduce using rule 32 (expression -> term MINUS expression .)
    NOEQU           reduce using rule 32 (expression -> term MINUS expression .)
    NEWLINE         reduce using rule 32 (expression -> term MINUS expression .)
    LPAREN          reduce using rule 32 (expression -> term MINUS expression .)
    WORD            reduce using rule 32 (expression -> term MINUS expression .)
    TYPE_A          reduce using rule 32 (expression -> term MINUS expression .)
    TEXT            reduce using rule 32 (expression -> term MINUS expression .)
    SO              reduce using rule 32 (expression -> term MINUS expression .)
    LOOP            reduce using rule 32 (expression -> term MINUS expression .)
    REPEAT          reduce using rule 32 (expression -> term MINUS expression .)
    STRING_LITERAL  reduce using rule 32 (expression -> term MINUS expression .)
    TYPE_H          reduce using rule 32 (expression -> term MINUS expression .)
    TYPE_N          reduce using rule 32 (expression -> term MINUS expression .)
    TYPE_S          reduce using rule 32 (expression -> term MINUS expression .)
    $end            reduce using rule 32 (expression -> term MINUS expression .)
    RPAREN          reduce using rule 32 (expression -> term MINUS expression .)
    LSTATE          reduce using rule 32 (expression -> term MINUS expression .)
    RSTATE          reduce using rule 32 (expression -> term MINUS expression .)
    COMMA           reduce using rule 32 (expression -> term MINUS expression .)
    QUOT            reduce using rule 32 (expression -> term MINUS expression .)
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    MOD             shift and go to state 36
    LESS            shift and go to state 39
    MORE            shift and go to state 40

  ! MUL             [ reduce using rule 32 (expression -> term MINUS expression .) ]
  ! DIV             [ reduce using rule 32 (expression -> term MINUS expression .) ]
  ! MOD             [ reduce using rule 32 (expression -> term MINUS expression .) ]
  ! LESS            [ reduce using rule 32 (expression -> term MINUS expression .) ]
  ! MORE            [ reduce using rule 32 (expression -> term MINUS expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! EQUTO           [ shift and go to state 37 ]
  ! NOEQU           [ shift and go to state 38 ]


state 76

    (34) expression -> term MUL term .
    (28) expression -> term . PLUS term
    (29) expression -> term . PLUS expression
    (31) expression -> term . MINUS term
    (32) expression -> term . MINUS expression
    (34) expression -> term . MUL term
    (35) expression -> term . MUL expression
    (37) expression -> term . DIV term
    (38) expression -> term . DIV expression
    (40) expression -> term . MOD term
    (41) expression -> term . MOD expression
    (47) expression -> term .

  ! reduce/reduce conflict for PLUS resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for MINUS resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for MUL resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for DIV resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for MOD resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for EQUTO resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for NOEQU resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for LESS resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for MORE resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for LPAREN resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for WORD resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for TYPE_A resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for TEXT resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for SO resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for LOOP resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for REPEAT resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for STRING_LITERAL resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for TYPE_H resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for TYPE_N resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for $end resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for LSTATE resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for RSTATE resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for COMMA resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for QUOT resolved using rule 34 (expression -> term MUL term .)
    PLUS            reduce using rule 34 (expression -> term MUL term .)
    MINUS           reduce using rule 34 (expression -> term MUL term .)
    MUL             reduce using rule 34 (expression -> term MUL term .)
    DIV             reduce using rule 34 (expression -> term MUL term .)
    MOD             reduce using rule 34 (expression -> term MUL term .)
    EQUTO           reduce using rule 34 (expression -> term MUL term .)
    NOEQU           reduce using rule 34 (expression -> term MUL term .)
    LESS            reduce using rule 34 (expression -> term MUL term .)
    MORE            reduce using rule 34 (expression -> term MUL term .)
    NEWLINE         reduce using rule 34 (expression -> term MUL term .)
    LPAREN          reduce using rule 34 (expression -> term MUL term .)
    WORD            reduce using rule 34 (expression -> term MUL term .)
    TYPE_A          reduce using rule 34 (expression -> term MUL term .)
    TEXT            reduce using rule 34 (expression -> term MUL term .)
    SO              reduce using rule 34 (expression -> term MUL term .)
    LOOP            reduce using rule 34 (expression -> term MUL term .)
    REPEAT          reduce using rule 34 (expression -> term MUL term .)
    STRING_LITERAL  reduce using rule 34 (expression -> term MUL term .)
    TYPE_H          reduce using rule 34 (expression -> term MUL term .)
    TYPE_N          reduce using rule 34 (expression -> term MUL term .)
    TYPE_S          reduce using rule 34 (expression -> term MUL term .)
    $end            reduce using rule 34 (expression -> term MUL term .)
    RPAREN          reduce using rule 34 (expression -> term MUL term .)
    LSTATE          reduce using rule 34 (expression -> term MUL term .)
    RSTATE          reduce using rule 34 (expression -> term MUL term .)
    COMMA           reduce using rule 34 (expression -> term MUL term .)
    QUOT            reduce using rule 34 (expression -> term MUL term .)

  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! MUL             [ shift and go to state 47 ]
  ! DIV             [ shift and go to state 48 ]
  ! MOD             [ shift and go to state 49 ]
  ! PLUS            [ reduce using rule 47 (expression -> term .) ]
  ! MINUS           [ reduce using rule 47 (expression -> term .) ]
  ! MUL             [ reduce using rule 47 (expression -> term .) ]
  ! DIV             [ reduce using rule 47 (expression -> term .) ]
  ! MOD             [ reduce using rule 47 (expression -> term .) ]
  ! EQUTO           [ reduce using rule 47 (expression -> term .) ]
  ! NOEQU           [ reduce using rule 47 (expression -> term .) ]
  ! LESS            [ reduce using rule 47 (expression -> term .) ]
  ! MORE            [ reduce using rule 47 (expression -> term .) ]
  ! NEWLINE         [ reduce using rule 47 (expression -> term .) ]
  ! LPAREN          [ reduce using rule 47 (expression -> term .) ]
  ! WORD            [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_A          [ reduce using rule 47 (expression -> term .) ]
  ! TEXT            [ reduce using rule 47 (expression -> term .) ]
  ! SO              [ reduce using rule 47 (expression -> term .) ]
  ! LOOP            [ reduce using rule 47 (expression -> term .) ]
  ! REPEAT          [ reduce using rule 47 (expression -> term .) ]
  ! STRING_LITERAL  [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_H          [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_N          [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_S          [ reduce using rule 47 (expression -> term .) ]
  ! $end            [ reduce using rule 47 (expression -> term .) ]
  ! RPAREN          [ reduce using rule 47 (expression -> term .) ]
  ! LSTATE          [ reduce using rule 47 (expression -> term .) ]
  ! RSTATE          [ reduce using rule 47 (expression -> term .) ]
  ! COMMA           [ reduce using rule 47 (expression -> term .) ]
  ! QUOT            [ reduce using rule 47 (expression -> term .) ]


state 77

    (35) expression -> term MUL expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    PLUS            reduce using rule 35 (expression -> term MUL expression .)
    MINUS           reduce using rule 35 (expression -> term MUL expression .)
    MUL             reduce using rule 35 (expression -> term MUL expression .)
    DIV             reduce using rule 35 (expression -> term MUL expression .)
    MOD             reduce using rule 35 (expression -> term MUL expression .)
    EQUTO           reduce using rule 35 (expression -> term MUL expression .)
    NOEQU           reduce using rule 35 (expression -> term MUL expression .)
    NEWLINE         reduce using rule 35 (expression -> term MUL expression .)
    LPAREN          reduce using rule 35 (expression -> term MUL expression .)
    WORD            reduce using rule 35 (expression -> term MUL expression .)
    TYPE_A          reduce using rule 35 (expression -> term MUL expression .)
    TEXT            reduce using rule 35 (expression -> term MUL expression .)
    SO              reduce using rule 35 (expression -> term MUL expression .)
    LOOP            reduce using rule 35 (expression -> term MUL expression .)
    REPEAT          reduce using rule 35 (expression -> term MUL expression .)
    STRING_LITERAL  reduce using rule 35 (expression -> term MUL expression .)
    TYPE_H          reduce using rule 35 (expression -> term MUL expression .)
    TYPE_N          reduce using rule 35 (expression -> term MUL expression .)
    TYPE_S          reduce using rule 35 (expression -> term MUL expression .)
    $end            reduce using rule 35 (expression -> term MUL expression .)
    RPAREN          reduce using rule 35 (expression -> term MUL expression .)
    LSTATE          reduce using rule 35 (expression -> term MUL expression .)
    RSTATE          reduce using rule 35 (expression -> term MUL expression .)
    COMMA           reduce using rule 35 (expression -> term MUL expression .)
    QUOT            reduce using rule 35 (expression -> term MUL expression .)
    LESS            shift and go to state 39
    MORE            shift and go to state 40

  ! LESS            [ reduce using rule 35 (expression -> term MUL expression .) ]
  ! MORE            [ reduce using rule 35 (expression -> term MUL expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! EQUTO           [ shift and go to state 37 ]
  ! NOEQU           [ shift and go to state 38 ]


state 78

    (37) expression -> term DIV term .
    (28) expression -> term . PLUS term
    (29) expression -> term . PLUS expression
    (31) expression -> term . MINUS term
    (32) expression -> term . MINUS expression
    (34) expression -> term . MUL term
    (35) expression -> term . MUL expression
    (37) expression -> term . DIV term
    (38) expression -> term . DIV expression
    (40) expression -> term . MOD term
    (41) expression -> term . MOD expression
    (47) expression -> term .

  ! reduce/reduce conflict for PLUS resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for MINUS resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for MUL resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for DIV resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for MOD resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for EQUTO resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for NOEQU resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for LESS resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for MORE resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for LPAREN resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for WORD resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for TYPE_A resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for TEXT resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for SO resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for LOOP resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for REPEAT resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for STRING_LITERAL resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for TYPE_H resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for TYPE_N resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for $end resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for LSTATE resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for RSTATE resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for COMMA resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for QUOT resolved using rule 37 (expression -> term DIV term .)
    PLUS            reduce using rule 37 (expression -> term DIV term .)
    MINUS           reduce using rule 37 (expression -> term DIV term .)
    MUL             reduce using rule 37 (expression -> term DIV term .)
    DIV             reduce using rule 37 (expression -> term DIV term .)
    MOD             reduce using rule 37 (expression -> term DIV term .)
    EQUTO           reduce using rule 37 (expression -> term DIV term .)
    NOEQU           reduce using rule 37 (expression -> term DIV term .)
    LESS            reduce using rule 37 (expression -> term DIV term .)
    MORE            reduce using rule 37 (expression -> term DIV term .)
    NEWLINE         reduce using rule 37 (expression -> term DIV term .)
    LPAREN          reduce using rule 37 (expression -> term DIV term .)
    WORD            reduce using rule 37 (expression -> term DIV term .)
    TYPE_A          reduce using rule 37 (expression -> term DIV term .)
    TEXT            reduce using rule 37 (expression -> term DIV term .)
    SO              reduce using rule 37 (expression -> term DIV term .)
    LOOP            reduce using rule 37 (expression -> term DIV term .)
    REPEAT          reduce using rule 37 (expression -> term DIV term .)
    STRING_LITERAL  reduce using rule 37 (expression -> term DIV term .)
    TYPE_H          reduce using rule 37 (expression -> term DIV term .)
    TYPE_N          reduce using rule 37 (expression -> term DIV term .)
    TYPE_S          reduce using rule 37 (expression -> term DIV term .)
    $end            reduce using rule 37 (expression -> term DIV term .)
    RPAREN          reduce using rule 37 (expression -> term DIV term .)
    LSTATE          reduce using rule 37 (expression -> term DIV term .)
    RSTATE          reduce using rule 37 (expression -> term DIV term .)
    COMMA           reduce using rule 37 (expression -> term DIV term .)
    QUOT            reduce using rule 37 (expression -> term DIV term .)

  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! MUL             [ shift and go to state 47 ]
  ! DIV             [ shift and go to state 48 ]
  ! MOD             [ shift and go to state 49 ]
  ! PLUS            [ reduce using rule 47 (expression -> term .) ]
  ! MINUS           [ reduce using rule 47 (expression -> term .) ]
  ! MUL             [ reduce using rule 47 (expression -> term .) ]
  ! DIV             [ reduce using rule 47 (expression -> term .) ]
  ! MOD             [ reduce using rule 47 (expression -> term .) ]
  ! EQUTO           [ reduce using rule 47 (expression -> term .) ]
  ! NOEQU           [ reduce using rule 47 (expression -> term .) ]
  ! LESS            [ reduce using rule 47 (expression -> term .) ]
  ! MORE            [ reduce using rule 47 (expression -> term .) ]
  ! NEWLINE         [ reduce using rule 47 (expression -> term .) ]
  ! LPAREN          [ reduce using rule 47 (expression -> term .) ]
  ! WORD            [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_A          [ reduce using rule 47 (expression -> term .) ]
  ! TEXT            [ reduce using rule 47 (expression -> term .) ]
  ! SO              [ reduce using rule 47 (expression -> term .) ]
  ! LOOP            [ reduce using rule 47 (expression -> term .) ]
  ! REPEAT          [ reduce using rule 47 (expression -> term .) ]
  ! STRING_LITERAL  [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_H          [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_N          [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_S          [ reduce using rule 47 (expression -> term .) ]
  ! $end            [ reduce using rule 47 (expression -> term .) ]
  ! RPAREN          [ reduce using rule 47 (expression -> term .) ]
  ! LSTATE          [ reduce using rule 47 (expression -> term .) ]
  ! RSTATE          [ reduce using rule 47 (expression -> term .) ]
  ! COMMA           [ reduce using rule 47 (expression -> term .) ]
  ! QUOT            [ reduce using rule 47 (expression -> term .) ]


state 79

    (38) expression -> term DIV expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    PLUS            reduce using rule 38 (expression -> term DIV expression .)
    MINUS           reduce using rule 38 (expression -> term DIV expression .)
    MUL             reduce using rule 38 (expression -> term DIV expression .)
    DIV             reduce using rule 38 (expression -> term DIV expression .)
    MOD             reduce using rule 38 (expression -> term DIV expression .)
    EQUTO           reduce using rule 38 (expression -> term DIV expression .)
    NOEQU           reduce using rule 38 (expression -> term DIV expression .)
    NEWLINE         reduce using rule 38 (expression -> term DIV expression .)
    LPAREN          reduce using rule 38 (expression -> term DIV expression .)
    WORD            reduce using rule 38 (expression -> term DIV expression .)
    TYPE_A          reduce using rule 38 (expression -> term DIV expression .)
    TEXT            reduce using rule 38 (expression -> term DIV expression .)
    SO              reduce using rule 38 (expression -> term DIV expression .)
    LOOP            reduce using rule 38 (expression -> term DIV expression .)
    REPEAT          reduce using rule 38 (expression -> term DIV expression .)
    STRING_LITERAL  reduce using rule 38 (expression -> term DIV expression .)
    TYPE_H          reduce using rule 38 (expression -> term DIV expression .)
    TYPE_N          reduce using rule 38 (expression -> term DIV expression .)
    TYPE_S          reduce using rule 38 (expression -> term DIV expression .)
    $end            reduce using rule 38 (expression -> term DIV expression .)
    RPAREN          reduce using rule 38 (expression -> term DIV expression .)
    LSTATE          reduce using rule 38 (expression -> term DIV expression .)
    RSTATE          reduce using rule 38 (expression -> term DIV expression .)
    COMMA           reduce using rule 38 (expression -> term DIV expression .)
    QUOT            reduce using rule 38 (expression -> term DIV expression .)
    LESS            shift and go to state 39
    MORE            shift and go to state 40

  ! LESS            [ reduce using rule 38 (expression -> term DIV expression .) ]
  ! MORE            [ reduce using rule 38 (expression -> term DIV expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! EQUTO           [ shift and go to state 37 ]
  ! NOEQU           [ shift and go to state 38 ]


state 80

    (40) expression -> term MOD term .
    (28) expression -> term . PLUS term
    (29) expression -> term . PLUS expression
    (31) expression -> term . MINUS term
    (32) expression -> term . MINUS expression
    (34) expression -> term . MUL term
    (35) expression -> term . MUL expression
    (37) expression -> term . DIV term
    (38) expression -> term . DIV expression
    (40) expression -> term . MOD term
    (41) expression -> term . MOD expression
    (47) expression -> term .

  ! reduce/reduce conflict for PLUS resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for MUL resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for DIV resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for MOD resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for EQUTO resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for NOEQU resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for LESS resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for MORE resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for LPAREN resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for WORD resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for TYPE_A resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for TEXT resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for SO resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for LOOP resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for REPEAT resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for STRING_LITERAL resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for TYPE_H resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for TYPE_N resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for LSTATE resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for RSTATE resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for COMMA resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for QUOT resolved using rule 40 (expression -> term MOD term .)
    PLUS            reduce using rule 40 (expression -> term MOD term .)
    MINUS           reduce using rule 40 (expression -> term MOD term .)
    MUL             reduce using rule 40 (expression -> term MOD term .)
    DIV             reduce using rule 40 (expression -> term MOD term .)
    MOD             reduce using rule 40 (expression -> term MOD term .)
    EQUTO           reduce using rule 40 (expression -> term MOD term .)
    NOEQU           reduce using rule 40 (expression -> term MOD term .)
    LESS            reduce using rule 40 (expression -> term MOD term .)
    MORE            reduce using rule 40 (expression -> term MOD term .)
    NEWLINE         reduce using rule 40 (expression -> term MOD term .)
    LPAREN          reduce using rule 40 (expression -> term MOD term .)
    WORD            reduce using rule 40 (expression -> term MOD term .)
    TYPE_A          reduce using rule 40 (expression -> term MOD term .)
    TEXT            reduce using rule 40 (expression -> term MOD term .)
    SO              reduce using rule 40 (expression -> term MOD term .)
    LOOP            reduce using rule 40 (expression -> term MOD term .)
    REPEAT          reduce using rule 40 (expression -> term MOD term .)
    STRING_LITERAL  reduce using rule 40 (expression -> term MOD term .)
    TYPE_H          reduce using rule 40 (expression -> term MOD term .)
    TYPE_N          reduce using rule 40 (expression -> term MOD term .)
    TYPE_S          reduce using rule 40 (expression -> term MOD term .)
    $end            reduce using rule 40 (expression -> term MOD term .)
    RPAREN          reduce using rule 40 (expression -> term MOD term .)
    LSTATE          reduce using rule 40 (expression -> term MOD term .)
    RSTATE          reduce using rule 40 (expression -> term MOD term .)
    COMMA           reduce using rule 40 (expression -> term MOD term .)
    QUOT            reduce using rule 40 (expression -> term MOD term .)

  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! MUL             [ shift and go to state 47 ]
  ! DIV             [ shift and go to state 48 ]
  ! MOD             [ shift and go to state 49 ]
  ! PLUS            [ reduce using rule 47 (expression -> term .) ]
  ! MINUS           [ reduce using rule 47 (expression -> term .) ]
  ! MUL             [ reduce using rule 47 (expression -> term .) ]
  ! DIV             [ reduce using rule 47 (expression -> term .) ]
  ! MOD             [ reduce using rule 47 (expression -> term .) ]
  ! EQUTO           [ reduce using rule 47 (expression -> term .) ]
  ! NOEQU           [ reduce using rule 47 (expression -> term .) ]
  ! LESS            [ reduce using rule 47 (expression -> term .) ]
  ! MORE            [ reduce using rule 47 (expression -> term .) ]
  ! NEWLINE         [ reduce using rule 47 (expression -> term .) ]
  ! LPAREN          [ reduce using rule 47 (expression -> term .) ]
  ! WORD            [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_A          [ reduce using rule 47 (expression -> term .) ]
  ! TEXT            [ reduce using rule 47 (expression -> term .) ]
  ! SO              [ reduce using rule 47 (expression -> term .) ]
  ! LOOP            [ reduce using rule 47 (expression -> term .) ]
  ! REPEAT          [ reduce using rule 47 (expression -> term .) ]
  ! STRING_LITERAL  [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_H          [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_N          [ reduce using rule 47 (expression -> term .) ]
  ! TYPE_S          [ reduce using rule 47 (expression -> term .) ]
  ! $end            [ reduce using rule 47 (expression -> term .) ]
  ! RPAREN          [ reduce using rule 47 (expression -> term .) ]
  ! LSTATE          [ reduce using rule 47 (expression -> term .) ]
  ! RSTATE          [ reduce using rule 47 (expression -> term .) ]
  ! COMMA           [ reduce using rule 47 (expression -> term .) ]
  ! QUOT            [ reduce using rule 47 (expression -> term .) ]


state 81

    (41) expression -> term MOD expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    PLUS            reduce using rule 41 (expression -> term MOD expression .)
    MINUS           reduce using rule 41 (expression -> term MOD expression .)
    MUL             reduce using rule 41 (expression -> term MOD expression .)
    DIV             reduce using rule 41 (expression -> term MOD expression .)
    MOD             reduce using rule 41 (expression -> term MOD expression .)
    EQUTO           reduce using rule 41 (expression -> term MOD expression .)
    NOEQU           reduce using rule 41 (expression -> term MOD expression .)
    NEWLINE         reduce using rule 41 (expression -> term MOD expression .)
    LPAREN          reduce using rule 41 (expression -> term MOD expression .)
    WORD            reduce using rule 41 (expression -> term MOD expression .)
    TYPE_A          reduce using rule 41 (expression -> term MOD expression .)
    TEXT            reduce using rule 41 (expression -> term MOD expression .)
    SO              reduce using rule 41 (expression -> term MOD expression .)
    LOOP            reduce using rule 41 (expression -> term MOD expression .)
    REPEAT          reduce using rule 41 (expression -> term MOD expression .)
    STRING_LITERAL  reduce using rule 41 (expression -> term MOD expression .)
    TYPE_H          reduce using rule 41 (expression -> term MOD expression .)
    TYPE_N          reduce using rule 41 (expression -> term MOD expression .)
    TYPE_S          reduce using rule 41 (expression -> term MOD expression .)
    $end            reduce using rule 41 (expression -> term MOD expression .)
    RPAREN          reduce using rule 41 (expression -> term MOD expression .)
    LSTATE          reduce using rule 41 (expression -> term MOD expression .)
    RSTATE          reduce using rule 41 (expression -> term MOD expression .)
    COMMA           reduce using rule 41 (expression -> term MOD expression .)
    QUOT            reduce using rule 41 (expression -> term MOD expression .)
    LESS            shift and go to state 39
    MORE            shift and go to state 40

  ! LESS            [ reduce using rule 41 (expression -> term MOD expression .) ]
  ! MORE            [ reduce using rule 41 (expression -> term MOD expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! EQUTO           [ shift and go to state 37 ]
  ! NOEQU           [ shift and go to state 38 ]


state 82

    (49) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MUL             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    EQUTO           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    NOEQU           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MORE            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    WORD            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    TYPE_A          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    TEXT            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    SO              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LOOP            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    REPEAT          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    STRING_LITERAL  reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    TYPE_H          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    TYPE_N          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    TYPE_S          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LSTATE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RSTATE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    QUOT            reduce using rule 49 (expression -> LPAREN expression RPAREN .)


state 83

    (50) exassign -> WORD EQU expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

  ! shift/reduce conflict for MINUS resolved as shift
    NEWLINE         reduce using rule 50 (exassign -> WORD EQU expression .)
    LPAREN          reduce using rule 50 (exassign -> WORD EQU expression .)
    WORD            reduce using rule 50 (exassign -> WORD EQU expression .)
    TYPE_A          reduce using rule 50 (exassign -> WORD EQU expression .)
    TEXT            reduce using rule 50 (exassign -> WORD EQU expression .)
    SO              reduce using rule 50 (exassign -> WORD EQU expression .)
    LOOP            reduce using rule 50 (exassign -> WORD EQU expression .)
    REPEAT          reduce using rule 50 (exassign -> WORD EQU expression .)
    STRING_LITERAL  reduce using rule 50 (exassign -> WORD EQU expression .)
    TYPE_H          reduce using rule 50 (exassign -> WORD EQU expression .)
    TYPE_N          reduce using rule 50 (exassign -> WORD EQU expression .)
    TYPE_S          reduce using rule 50 (exassign -> WORD EQU expression .)
    $end            reduce using rule 50 (exassign -> WORD EQU expression .)
    LSTATE          reduce using rule 50 (exassign -> WORD EQU expression .)
    RSTATE          reduce using rule 50 (exassign -> WORD EQU expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    MOD             shift and go to state 36
    EQUTO           shift and go to state 37
    NOEQU           shift and go to state 38
    LESS            shift and go to state 39
    MORE            shift and go to state 40

  ! MINUS           [ reduce using rule 50 (exassign -> WORD EQU expression .) ]


state 84

    (59) arraysh -> WORD LARRY WORD . RARRY

    RARRY           shift and go to state 98


state 85

    (58) arraysh -> WORD LARRY NUM . RARRY

    RARRY           shift and go to state 99


state 86

    (51) exassign -> arraysh EQU expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

  ! shift/reduce conflict for MINUS resolved as shift
    NEWLINE         reduce using rule 51 (exassign -> arraysh EQU expression .)
    LPAREN          reduce using rule 51 (exassign -> arraysh EQU expression .)
    WORD            reduce using rule 51 (exassign -> arraysh EQU expression .)
    TYPE_A          reduce using rule 51 (exassign -> arraysh EQU expression .)
    TEXT            reduce using rule 51 (exassign -> arraysh EQU expression .)
    SO              reduce using rule 51 (exassign -> arraysh EQU expression .)
    LOOP            reduce using rule 51 (exassign -> arraysh EQU expression .)
    REPEAT          reduce using rule 51 (exassign -> arraysh EQU expression .)
    STRING_LITERAL  reduce using rule 51 (exassign -> arraysh EQU expression .)
    TYPE_H          reduce using rule 51 (exassign -> arraysh EQU expression .)
    TYPE_N          reduce using rule 51 (exassign -> arraysh EQU expression .)
    TYPE_S          reduce using rule 51 (exassign -> arraysh EQU expression .)
    $end            reduce using rule 51 (exassign -> arraysh EQU expression .)
    LSTATE          reduce using rule 51 (exassign -> arraysh EQU expression .)
    RSTATE          reduce using rule 51 (exassign -> arraysh EQU expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    MOD             shift and go to state 36
    EQUTO           shift and go to state 37
    NOEQU           shift and go to state 38
    LESS            shift and go to state 39
    MORE            shift and go to state 40

  ! MINUS           [ reduce using rule 51 (exassign -> arraysh EQU expression .) ]


state 87

    (57) declare -> typeconst WORD EQU . term
    (42) term -> . STRING_LITERAL

    STRING_LITERAL  shift and go to state 22

    term                           shift and go to state 100

state 88

    (60) declare -> TYPE_A WORD EQU . LSTATE arrayX RSTATE

    LSTATE          shift and go to state 101


state 89

    (61) declare -> TYPE_A WORD LARRY . NUM RARRY
    (62) declare -> TYPE_A WORD LARRY . NUM RARRY EQU LSTATE arrayX RSTATE

    NUM             shift and go to state 102


state 90

    (66) exprint -> TEXT LPAREN expression . printMore RPAREN
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression
    (68) printMore -> . COMMA expression printMore
    (69) printMore -> . empty empty empty
    (70) printMore -> . COMMA QUOT expression QUOT printMore
    (71) empty -> .

    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    MOD             shift and go to state 36
    EQUTO           shift and go to state 37
    NOEQU           shift and go to state 38
    LESS            shift and go to state 39
    MORE            shift and go to state 40
    COMMA           shift and go to state 104
    RPAREN          reduce using rule 71 (empty -> .)

    printMore                      shift and go to state 103
    empty                          shift and go to state 105

state 91

    (67) exprint -> TEXT LPAREN STRING_LITERAL . printMore RPAREN
    (42) term -> STRING_LITERAL .
    (68) printMore -> . COMMA expression printMore
    (69) printMore -> . empty empty empty
    (70) printMore -> . COMMA QUOT expression QUOT printMore
    (71) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 42 (term -> STRING_LITERAL .)
    PLUS            reduce using rule 42 (term -> STRING_LITERAL .)
    MINUS           reduce using rule 42 (term -> STRING_LITERAL .)
    MUL             reduce using rule 42 (term -> STRING_LITERAL .)
    DIV             reduce using rule 42 (term -> STRING_LITERAL .)
    MOD             reduce using rule 42 (term -> STRING_LITERAL .)
    EQUTO           reduce using rule 42 (term -> STRING_LITERAL .)
    NOEQU           reduce using rule 42 (term -> STRING_LITERAL .)
    LESS            reduce using rule 42 (term -> STRING_LITERAL .)
    MORE            reduce using rule 42 (term -> STRING_LITERAL .)
    RPAREN          reduce using rule 42 (term -> STRING_LITERAL .)
    COMMA           shift and go to state 104

  ! COMMA           [ reduce using rule 42 (term -> STRING_LITERAL .) ]
  ! RPAREN          [ reduce using rule 71 (empty -> .) ]

    printMore                      shift and go to state 106
    empty                          shift and go to state 105

state 92

    (18) exif -> SO LPAREN expression . RPAREN LSTATE statement RSTATE
    (19) exif -> SO LPAREN expression . RPAREN NEWLINE LSTATE statement RSTATE
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    RPAREN          shift and go to state 107
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    MOD             shift and go to state 36
    EQUTO           shift and go to state 37
    NOEQU           shift and go to state 38
    LESS            shift and go to state 39
    MORE            shift and go to state 40


state 93

    (23) exloop -> LOOP LPAREN expression . RPAREN LSTATE statement RSTATE
    (24) exloop -> LOOP LPAREN expression . RPAREN LSTATE NEWLINE statement RSTATE
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    RPAREN          shift and go to state 108
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    MOD             shift and go to state 36
    EQUTO           shift and go to state 37
    NOEQU           shift and go to state 38
    LESS            shift and go to state 39
    MORE            shift and go to state 40


state 94

    (25) exrepeat -> REPEAT LPAREN expression . RPAREN LSTATE statement RSTATE
    (26) exrepeat -> REPEAT LPAREN expression . RPAREN NEWLINE LSTATE statement RSTATE
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    RPAREN          shift and go to state 109
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    MOD             shift and go to state 36
    EQUTO           shift and go to state 37
    NOEQU           shift and go to state 38
    LESS            shift and go to state 39
    MORE            shift and go to state 40


state 95

    (7) statement -> statement NEWLINE statement NEWLINE .
    (6) statement -> statement NEWLINE . statement
    (7) statement -> statement NEWLINE . statement NEWLINE
    (15) statement -> statement NEWLINE .
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (50) exassign -> . WORD EQU expression
    (51) exassign -> . arraysh EQU expression
    (56) declare -> . typeconst WORD
    (57) declare -> . typeconst WORD EQU term
    (60) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (61) declare -> . TYPE_A WORD LARRY NUM RARRY
    (62) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (66) exprint -> . TEXT LPAREN expression printMore RPAREN
    (67) exprint -> . TEXT LPAREN STRING_LITERAL printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (58) arraysh -> . WORD LARRY NUM RARRY
    (59) arraysh -> . WORD LARRY WORD RARRY
    (43) typeconst -> . TYPE_H
    (44) typeconst -> . TYPE_N
    (45) typeconst -> . TYPE_A
    (46) typeconst -> . TYPE_S

  ! reduce/reduce conflict for NEWLINE resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for MINUS resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for WORD resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for TYPE_A resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for TEXT resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for SO resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for LOOP resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for REPEAT resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for STRING_LITERAL resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for TYPE_H resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for TYPE_N resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for $end resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for LSTATE resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for RSTATE resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
  ! shift/reduce conflict for TYPE_A resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SO resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for TYPE_H resolved as shift
  ! shift/reduce conflict for TYPE_N resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
    MINUS           reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
    LPAREN          reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
    STRING_LITERAL  reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
    $end            reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
    LSTATE          reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
    RSTATE          reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
    NEWLINE         shift and go to state 6
    WORD            shift and go to state 17
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 21
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 26
    TYPE_N          shift and go to state 27
    TYPE_S          shift and go to state 28

  ! NEWLINE         [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! WORD            [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! TYPE_A          [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! TEXT            [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! SO              [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! LOOP            [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! REPEAT          [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! TYPE_H          [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! TYPE_N          [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! TYPE_S          [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! NEWLINE         [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! MINUS           [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! LPAREN          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! WORD            [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TYPE_A          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TEXT            [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! SO              [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! LOOP            [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! REPEAT          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! STRING_LITERAL  [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TYPE_H          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TYPE_N          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TYPE_S          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! $end            [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! LSTATE          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! RSTATE          [ reduce using rule 15 (statement -> statement NEWLINE .) ]

    statement                      shift and go to state 61
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 18
    typeconst                      shift and go to state 19

state 96

    (21) exelse -> OTHERWISE LSTATE statement . LSTATE OTHERWISE
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

    LSTATE          shift and go to state 110
    NEWLINE         shift and go to state 31


state 97

    (22) exelse -> OTHERWISE LSTATE NEWLINE . statement RSTATE
    (16) statement -> NEWLINE . statement
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (50) exassign -> . WORD EQU expression
    (51) exassign -> . arraysh EQU expression
    (56) declare -> . typeconst WORD
    (57) declare -> . typeconst WORD EQU term
    (60) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (61) declare -> . TYPE_A WORD LARRY NUM RARRY
    (62) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (66) exprint -> . TEXT LPAREN expression printMore RPAREN
    (67) exprint -> . TEXT LPAREN STRING_LITERAL printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (58) arraysh -> . WORD LARRY NUM RARRY
    (59) arraysh -> . WORD LARRY WORD RARRY
    (43) typeconst -> . TYPE_H
    (44) typeconst -> . TYPE_N
    (45) typeconst -> . TYPE_A
    (46) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 6
    WORD            shift and go to state 17
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 21
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 26
    TYPE_N          shift and go to state 27
    TYPE_S          shift and go to state 28

    statement                      shift and go to state 111
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 18
    typeconst                      shift and go to state 19

state 98

    (59) arraysh -> WORD LARRY WORD RARRY .

    EQU             reduce using rule 59 (arraysh -> WORD LARRY WORD RARRY .)


state 99

    (58) arraysh -> WORD LARRY NUM RARRY .

    EQU             reduce using rule 58 (arraysh -> WORD LARRY NUM RARRY .)


state 100

    (57) declare -> typeconst WORD EQU term .

    NEWLINE         reduce using rule 57 (declare -> typeconst WORD EQU term .)
    MINUS           reduce using rule 57 (declare -> typeconst WORD EQU term .)
    LPAREN          reduce using rule 57 (declare -> typeconst WORD EQU term .)
    WORD            reduce using rule 57 (declare -> typeconst WORD EQU term .)
    TYPE_A          reduce using rule 57 (declare -> typeconst WORD EQU term .)
    TEXT            reduce using rule 57 (declare -> typeconst WORD EQU term .)
    SO              reduce using rule 57 (declare -> typeconst WORD EQU term .)
    LOOP            reduce using rule 57 (declare -> typeconst WORD EQU term .)
    REPEAT          reduce using rule 57 (declare -> typeconst WORD EQU term .)
    STRING_LITERAL  reduce using rule 57 (declare -> typeconst WORD EQU term .)
    TYPE_H          reduce using rule 57 (declare -> typeconst WORD EQU term .)
    TYPE_N          reduce using rule 57 (declare -> typeconst WORD EQU term .)
    TYPE_S          reduce using rule 57 (declare -> typeconst WORD EQU term .)
    $end            reduce using rule 57 (declare -> typeconst WORD EQU term .)
    LSTATE          reduce using rule 57 (declare -> typeconst WORD EQU term .)
    RSTATE          reduce using rule 57 (declare -> typeconst WORD EQU term .)


state 101

    (60) declare -> TYPE_A WORD EQU LSTATE . arrayX RSTATE
    (63) arrayX -> . NUM arrayY

    NUM             shift and go to state 113

    arrayX                         shift and go to state 112

state 102

    (61) declare -> TYPE_A WORD LARRY NUM . RARRY
    (62) declare -> TYPE_A WORD LARRY NUM . RARRY EQU LSTATE arrayX RSTATE

    RARRY           shift and go to state 114


state 103

    (66) exprint -> TEXT LPAREN expression printMore . RPAREN

    RPAREN          shift and go to state 115


state 104

    (68) printMore -> COMMA . expression printMore
    (70) printMore -> COMMA . QUOT expression QUOT printMore
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    QUOT            shift and go to state 117
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 116
    term                           shift and go to state 14

state 105

    (69) printMore -> empty . empty empty
    (71) empty -> .

    RPAREN          reduce using rule 71 (empty -> .)

    empty                          shift and go to state 118

state 106

    (67) exprint -> TEXT LPAREN STRING_LITERAL printMore . RPAREN

    RPAREN          shift and go to state 119


state 107

    (18) exif -> SO LPAREN expression RPAREN . LSTATE statement RSTATE
    (19) exif -> SO LPAREN expression RPAREN . NEWLINE LSTATE statement RSTATE

    LSTATE          shift and go to state 120
    NEWLINE         shift and go to state 121


state 108

    (23) exloop -> LOOP LPAREN expression RPAREN . LSTATE statement RSTATE
    (24) exloop -> LOOP LPAREN expression RPAREN . LSTATE NEWLINE statement RSTATE

    LSTATE          shift and go to state 122


state 109

    (25) exrepeat -> REPEAT LPAREN expression RPAREN . LSTATE statement RSTATE
    (26) exrepeat -> REPEAT LPAREN expression RPAREN . NEWLINE LSTATE statement RSTATE

    LSTATE          shift and go to state 123
    NEWLINE         shift and go to state 124


state 110

    (21) exelse -> OTHERWISE LSTATE statement LSTATE . OTHERWISE

    OTHERWISE       shift and go to state 125


state 111

    (22) exelse -> OTHERWISE LSTATE NEWLINE statement . RSTATE
    (16) statement -> NEWLINE statement .
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

  ! shift/reduce conflict for NEWLINE resolved as shift
    RSTATE          shift and go to state 126
    LSTATE          reduce using rule 16 (statement -> NEWLINE statement .)
    NEWLINE         shift and go to state 31

  ! NEWLINE         [ reduce using rule 16 (statement -> NEWLINE statement .) ]


state 112

    (60) declare -> TYPE_A WORD EQU LSTATE arrayX . RSTATE

    RSTATE          shift and go to state 127


state 113

    (63) arrayX -> NUM . arrayY
    (64) arrayY -> . COMMA NUM arrayY
    (65) arrayY -> . empty empty empty
    (71) empty -> .

    COMMA           shift and go to state 129
    RSTATE          reduce using rule 71 (empty -> .)

    arrayY                         shift and go to state 128
    empty                          shift and go to state 130

state 114

    (61) declare -> TYPE_A WORD LARRY NUM RARRY .
    (62) declare -> TYPE_A WORD LARRY NUM RARRY . EQU LSTATE arrayX RSTATE

    NEWLINE         reduce using rule 61 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    MINUS           reduce using rule 61 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    LPAREN          reduce using rule 61 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    WORD            reduce using rule 61 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    TYPE_A          reduce using rule 61 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    TEXT            reduce using rule 61 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    SO              reduce using rule 61 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    LOOP            reduce using rule 61 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    REPEAT          reduce using rule 61 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    STRING_LITERAL  reduce using rule 61 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    TYPE_H          reduce using rule 61 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    TYPE_N          reduce using rule 61 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    TYPE_S          reduce using rule 61 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    $end            reduce using rule 61 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    LSTATE          reduce using rule 61 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    RSTATE          reduce using rule 61 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    EQU             shift and go to state 131


state 115

    (66) exprint -> TEXT LPAREN expression printMore RPAREN .

    NEWLINE         reduce using rule 66 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    MINUS           reduce using rule 66 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    LPAREN          reduce using rule 66 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    WORD            reduce using rule 66 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    TYPE_A          reduce using rule 66 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    TEXT            reduce using rule 66 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    SO              reduce using rule 66 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    LOOP            reduce using rule 66 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    REPEAT          reduce using rule 66 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    STRING_LITERAL  reduce using rule 66 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    TYPE_H          reduce using rule 66 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    TYPE_N          reduce using rule 66 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    TYPE_S          reduce using rule 66 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    $end            reduce using rule 66 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    LSTATE          reduce using rule 66 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    RSTATE          reduce using rule 66 (exprint -> TEXT LPAREN expression printMore RPAREN .)


state 116

    (68) printMore -> COMMA expression . printMore
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression
    (68) printMore -> . COMMA expression printMore
    (69) printMore -> . empty empty empty
    (70) printMore -> . COMMA QUOT expression QUOT printMore
    (71) empty -> .

    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    MOD             shift and go to state 36
    EQUTO           shift and go to state 37
    NOEQU           shift and go to state 38
    LESS            shift and go to state 39
    MORE            shift and go to state 40
    COMMA           shift and go to state 104
    RPAREN          reduce using rule 71 (empty -> .)

    printMore                      shift and go to state 132
    empty                          shift and go to state 105

state 117

    (70) printMore -> COMMA QUOT . expression QUOT printMore
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (47) expression -> . term
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression EQUTO expression
    (53) expression -> . expression NOEQU expression
    (54) expression -> . expression LESS expression
    (55) expression -> . expression MORE expression
    (42) term -> . STRING_LITERAL

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    STRING_LITERAL  shift and go to state 22

    expression                     shift and go to state 133
    term                           shift and go to state 14

state 118

    (69) printMore -> empty empty . empty
    (71) empty -> .

    RPAREN          reduce using rule 71 (empty -> .)

    empty                          shift and go to state 134

state 119

    (67) exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN .

    NEWLINE         reduce using rule 67 (exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN .)
    MINUS           reduce using rule 67 (exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN .)
    LPAREN          reduce using rule 67 (exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN .)
    WORD            reduce using rule 67 (exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN .)
    TYPE_A          reduce using rule 67 (exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN .)
    TEXT            reduce using rule 67 (exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN .)
    SO              reduce using rule 67 (exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN .)
    LOOP            reduce using rule 67 (exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN .)
    REPEAT          reduce using rule 67 (exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN .)
    STRING_LITERAL  reduce using rule 67 (exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN .)
    TYPE_H          reduce using rule 67 (exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN .)
    TYPE_N          reduce using rule 67 (exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN .)
    TYPE_S          reduce using rule 67 (exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN .)
    $end            reduce using rule 67 (exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN .)
    LSTATE          reduce using rule 67 (exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN .)
    RSTATE          reduce using rule 67 (exprint -> TEXT LPAREN STRING_LITERAL printMore RPAREN .)


state 120

    (18) exif -> SO LPAREN expression RPAREN LSTATE . statement RSTATE
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (50) exassign -> . WORD EQU expression
    (51) exassign -> . arraysh EQU expression
    (56) declare -> . typeconst WORD
    (57) declare -> . typeconst WORD EQU term
    (60) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (61) declare -> . TYPE_A WORD LARRY NUM RARRY
    (62) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (66) exprint -> . TEXT LPAREN expression printMore RPAREN
    (67) exprint -> . TEXT LPAREN STRING_LITERAL printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (58) arraysh -> . WORD LARRY NUM RARRY
    (59) arraysh -> . WORD LARRY WORD RARRY
    (43) typeconst -> . TYPE_H
    (44) typeconst -> . TYPE_N
    (45) typeconst -> . TYPE_A
    (46) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 6
    WORD            shift and go to state 17
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 21
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 26
    TYPE_N          shift and go to state 27
    TYPE_S          shift and go to state 28

    statement                      shift and go to state 135
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 18
    typeconst                      shift and go to state 19

state 121

    (19) exif -> SO LPAREN expression RPAREN NEWLINE . LSTATE statement RSTATE

    LSTATE          shift and go to state 136


state 122

    (23) exloop -> LOOP LPAREN expression RPAREN LSTATE . statement RSTATE
    (24) exloop -> LOOP LPAREN expression RPAREN LSTATE . NEWLINE statement RSTATE
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (50) exassign -> . WORD EQU expression
    (51) exassign -> . arraysh EQU expression
    (56) declare -> . typeconst WORD
    (57) declare -> . typeconst WORD EQU term
    (60) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (61) declare -> . TYPE_A WORD LARRY NUM RARRY
    (62) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (66) exprint -> . TEXT LPAREN expression printMore RPAREN
    (67) exprint -> . TEXT LPAREN STRING_LITERAL printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (58) arraysh -> . WORD LARRY NUM RARRY
    (59) arraysh -> . WORD LARRY WORD RARRY
    (43) typeconst -> . TYPE_H
    (44) typeconst -> . TYPE_N
    (45) typeconst -> . TYPE_A
    (46) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 138
    WORD            shift and go to state 17
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 21
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 26
    TYPE_N          shift and go to state 27
    TYPE_S          shift and go to state 28

    statement                      shift and go to state 137
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 18
    typeconst                      shift and go to state 19

state 123

    (25) exrepeat -> REPEAT LPAREN expression RPAREN LSTATE . statement RSTATE
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (50) exassign -> . WORD EQU expression
    (51) exassign -> . arraysh EQU expression
    (56) declare -> . typeconst WORD
    (57) declare -> . typeconst WORD EQU term
    (60) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (61) declare -> . TYPE_A WORD LARRY NUM RARRY
    (62) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (66) exprint -> . TEXT LPAREN expression printMore RPAREN
    (67) exprint -> . TEXT LPAREN STRING_LITERAL printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (58) arraysh -> . WORD LARRY NUM RARRY
    (59) arraysh -> . WORD LARRY WORD RARRY
    (43) typeconst -> . TYPE_H
    (44) typeconst -> . TYPE_N
    (45) typeconst -> . TYPE_A
    (46) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 6
    WORD            shift and go to state 17
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 21
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 26
    TYPE_N          shift and go to state 27
    TYPE_S          shift and go to state 28

    statement                      shift and go to state 139
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 18
    typeconst                      shift and go to state 19

state 124

    (26) exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE . LSTATE statement RSTATE

    LSTATE          shift and go to state 140


state 125

    (21) exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .

    NEWLINE         reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    MINUS           reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    LPAREN          reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    WORD            reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    TYPE_A          reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    TEXT            reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    SO              reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    LOOP            reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    REPEAT          reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    STRING_LITERAL  reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    TYPE_H          reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    TYPE_N          reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    TYPE_S          reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    $end            reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    LSTATE          reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    RSTATE          reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)


state 126

    (22) exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .

    NEWLINE         reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    MINUS           reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    LPAREN          reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    WORD            reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    TYPE_A          reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    TEXT            reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    SO              reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    LOOP            reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    REPEAT          reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    STRING_LITERAL  reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    TYPE_H          reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    TYPE_N          reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    TYPE_S          reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    $end            reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    LSTATE          reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    RSTATE          reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)


state 127

    (60) declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .

    NEWLINE         reduce using rule 60 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    MINUS           reduce using rule 60 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    LPAREN          reduce using rule 60 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    WORD            reduce using rule 60 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    TYPE_A          reduce using rule 60 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    TEXT            reduce using rule 60 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    SO              reduce using rule 60 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    LOOP            reduce using rule 60 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    REPEAT          reduce using rule 60 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    STRING_LITERAL  reduce using rule 60 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    TYPE_H          reduce using rule 60 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    TYPE_N          reduce using rule 60 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    TYPE_S          reduce using rule 60 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    $end            reduce using rule 60 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    LSTATE          reduce using rule 60 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    RSTATE          reduce using rule 60 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)


state 128

    (63) arrayX -> NUM arrayY .

    RSTATE          reduce using rule 63 (arrayX -> NUM arrayY .)


state 129

    (64) arrayY -> COMMA . NUM arrayY

    NUM             shift and go to state 141


state 130

    (65) arrayY -> empty . empty empty
    (71) empty -> .

    RSTATE          reduce using rule 71 (empty -> .)

    empty                          shift and go to state 142

state 131

    (62) declare -> TYPE_A WORD LARRY NUM RARRY EQU . LSTATE arrayX RSTATE

    LSTATE          shift and go to state 143


state 132

    (68) printMore -> COMMA expression printMore .

    RPAREN          reduce using rule 68 (printMore -> COMMA expression printMore .)


state 133

    (70) printMore -> COMMA QUOT expression . QUOT printMore
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (52) expression -> expression . EQUTO expression
    (53) expression -> expression . NOEQU expression
    (54) expression -> expression . LESS expression
    (55) expression -> expression . MORE expression

    QUOT            shift and go to state 144
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    MOD             shift and go to state 36
    EQUTO           shift and go to state 37
    NOEQU           shift and go to state 38
    LESS            shift and go to state 39
    MORE            shift and go to state 40


state 134

    (69) printMore -> empty empty empty .

    RPAREN          reduce using rule 69 (printMore -> empty empty empty .)


state 135

    (18) exif -> SO LPAREN expression RPAREN LSTATE statement . RSTATE
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

    RSTATE          shift and go to state 145
    NEWLINE         shift and go to state 31


state 136

    (19) exif -> SO LPAREN expression RPAREN NEWLINE LSTATE . statement RSTATE
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (50) exassign -> . WORD EQU expression
    (51) exassign -> . arraysh EQU expression
    (56) declare -> . typeconst WORD
    (57) declare -> . typeconst WORD EQU term
    (60) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (61) declare -> . TYPE_A WORD LARRY NUM RARRY
    (62) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (66) exprint -> . TEXT LPAREN expression printMore RPAREN
    (67) exprint -> . TEXT LPAREN STRING_LITERAL printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (58) arraysh -> . WORD LARRY NUM RARRY
    (59) arraysh -> . WORD LARRY WORD RARRY
    (43) typeconst -> . TYPE_H
    (44) typeconst -> . TYPE_N
    (45) typeconst -> . TYPE_A
    (46) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 6
    WORD            shift and go to state 17
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 21
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 26
    TYPE_N          shift and go to state 27
    TYPE_S          shift and go to state 28

    statement                      shift and go to state 146
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 18
    typeconst                      shift and go to state 19

state 137

    (23) exloop -> LOOP LPAREN expression RPAREN LSTATE statement . RSTATE
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

    RSTATE          shift and go to state 147
    NEWLINE         shift and go to state 31


state 138

    (24) exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE . statement RSTATE
    (16) statement -> NEWLINE . statement
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (50) exassign -> . WORD EQU expression
    (51) exassign -> . arraysh EQU expression
    (56) declare -> . typeconst WORD
    (57) declare -> . typeconst WORD EQU term
    (60) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (61) declare -> . TYPE_A WORD LARRY NUM RARRY
    (62) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (66) exprint -> . TEXT LPAREN expression printMore RPAREN
    (67) exprint -> . TEXT LPAREN STRING_LITERAL printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (58) arraysh -> . WORD LARRY NUM RARRY
    (59) arraysh -> . WORD LARRY WORD RARRY
    (43) typeconst -> . TYPE_H
    (44) typeconst -> . TYPE_N
    (45) typeconst -> . TYPE_A
    (46) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 6
    WORD            shift and go to state 17
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 21
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 26
    TYPE_N          shift and go to state 27
    TYPE_S          shift and go to state 28

    statement                      shift and go to state 148
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 18
    typeconst                      shift and go to state 19

state 139

    (25) exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement . RSTATE
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

    RSTATE          shift and go to state 149
    NEWLINE         shift and go to state 31


state 140

    (26) exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE . statement RSTATE
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (50) exassign -> . WORD EQU expression
    (51) exassign -> . arraysh EQU expression
    (56) declare -> . typeconst WORD
    (57) declare -> . typeconst WORD EQU term
    (60) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (61) declare -> . TYPE_A WORD LARRY NUM RARRY
    (62) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (66) exprint -> . TEXT LPAREN expression printMore RPAREN
    (67) exprint -> . TEXT LPAREN STRING_LITERAL printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (58) arraysh -> . WORD LARRY NUM RARRY
    (59) arraysh -> . WORD LARRY WORD RARRY
    (43) typeconst -> . TYPE_H
    (44) typeconst -> . TYPE_N
    (45) typeconst -> . TYPE_A
    (46) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 6
    WORD            shift and go to state 17
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 21
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 26
    TYPE_N          shift and go to state 27
    TYPE_S          shift and go to state 28

    statement                      shift and go to state 150
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 18
    typeconst                      shift and go to state 19

state 141

    (64) arrayY -> COMMA NUM . arrayY
    (64) arrayY -> . COMMA NUM arrayY
    (65) arrayY -> . empty empty empty
    (71) empty -> .

    COMMA           shift and go to state 129
    RSTATE          reduce using rule 71 (empty -> .)

    arrayY                         shift and go to state 151
    empty                          shift and go to state 130

state 142

    (65) arrayY -> empty empty . empty
    (71) empty -> .

    RSTATE          reduce using rule 71 (empty -> .)

    empty                          shift and go to state 152

state 143

    (62) declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE . arrayX RSTATE
    (63) arrayX -> . NUM arrayY

    NUM             shift and go to state 113

    arrayX                         shift and go to state 153

state 144

    (70) printMore -> COMMA QUOT expression QUOT . printMore
    (68) printMore -> . COMMA expression printMore
    (69) printMore -> . empty empty empty
    (70) printMore -> . COMMA QUOT expression QUOT printMore
    (71) empty -> .

    COMMA           shift and go to state 104
    RPAREN          reduce using rule 71 (empty -> .)

    printMore                      shift and go to state 154
    empty                          shift and go to state 105

state 145

    (18) exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .

    OTHERWISE       reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    NEWLINE         reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    MINUS           reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    LPAREN          reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    WORD            reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_A          reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    TEXT            reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    SO              reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    LOOP            reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    REPEAT          reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    STRING_LITERAL  reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_H          reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_N          reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_S          reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    $end            reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    LSTATE          reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    RSTATE          reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)


state 146

    (19) exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement . RSTATE
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

    RSTATE          shift and go to state 155
    NEWLINE         shift and go to state 31


state 147

    (23) exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .

    NEWLINE         reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    MINUS           reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    LPAREN          reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    WORD            reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_A          reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    TEXT            reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    SO              reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    LOOP            reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    REPEAT          reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    STRING_LITERAL  reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_H          reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_N          reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_S          reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    $end            reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    LSTATE          reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    RSTATE          reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)


state 148

    (24) exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement . RSTATE
    (16) statement -> NEWLINE statement .
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

  ! shift/reduce conflict for RSTATE resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
    RSTATE          shift and go to state 156
    NEWLINE         shift and go to state 31

  ! RSTATE          [ reduce using rule 16 (statement -> NEWLINE statement .) ]
  ! NEWLINE         [ reduce using rule 16 (statement -> NEWLINE statement .) ]


state 149

    (25) exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .

    NEWLINE         reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    MINUS           reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    LPAREN          reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    WORD            reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_A          reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    TEXT            reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    SO              reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    LOOP            reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    REPEAT          reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    STRING_LITERAL  reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_H          reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_N          reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_S          reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    $end            reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    LSTATE          reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    RSTATE          reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)


state 150

    (26) exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement . RSTATE
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

    RSTATE          shift and go to state 157
    NEWLINE         shift and go to state 31


state 151

    (64) arrayY -> COMMA NUM arrayY .

    RSTATE          reduce using rule 64 (arrayY -> COMMA NUM arrayY .)


state 152

    (65) arrayY -> empty empty empty .

    RSTATE          reduce using rule 65 (arrayY -> empty empty empty .)


state 153

    (62) declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX . RSTATE

    RSTATE          shift and go to state 158


state 154

    (70) printMore -> COMMA QUOT expression QUOT printMore .

    RPAREN          reduce using rule 70 (printMore -> COMMA QUOT expression QUOT printMore .)


state 155

    (19) exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .

    OTHERWISE       reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    NEWLINE         reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    MINUS           reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    LPAREN          reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    WORD            reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TYPE_A          reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TEXT            reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    SO              reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    LOOP            reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    REPEAT          reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    STRING_LITERAL  reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TYPE_H          reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TYPE_N          reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TYPE_S          reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    $end            reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    LSTATE          reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    RSTATE          reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)


state 156

    (24) exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .

    NEWLINE         reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    MINUS           reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    LPAREN          reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    WORD            reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    TYPE_A          reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    TEXT            reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    SO              reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    LOOP            reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    REPEAT          reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    STRING_LITERAL  reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    TYPE_H          reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    TYPE_N          reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    TYPE_S          reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    $end            reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    LSTATE          reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    RSTATE          reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)


state 157

    (26) exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .

    NEWLINE         reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    MINUS           reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    LPAREN          reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    WORD            reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TYPE_A          reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TEXT            reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    SO              reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    LOOP            reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    REPEAT          reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    STRING_LITERAL  reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TYPE_H          reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TYPE_N          reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TYPE_S          reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    $end            reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    LSTATE          reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    RSTATE          reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)


state 158

    (62) declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .

    NEWLINE         reduce using rule 62 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    MINUS           reduce using rule 62 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    LPAREN          reduce using rule 62 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    WORD            reduce using rule 62 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    TYPE_A          reduce using rule 62 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    TEXT            reduce using rule 62 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    SO              reduce using rule 62 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    LOOP            reduce using rule 62 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    REPEAT          reduce using rule 62 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    STRING_LITERAL  reduce using rule 62 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    TYPE_H          reduce using rule 62 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    TYPE_N          reduce using rule 62 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    TYPE_S          reduce using rule 62 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    $end            reduce using rule 62 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    LSTATE          reduce using rule 62 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    RSTATE          reduce using rule 62 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLINE in state 4 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 5 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 12 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 14 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 14 resolved as shift
WARNING: shift/reduce conflict for MUL in state 14 resolved as shift
WARNING: shift/reduce conflict for DIV in state 14 resolved as shift
WARNING: shift/reduce conflict for MOD in state 14 resolved as shift
WARNING: shift/reduce conflict for WORD in state 20 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 31 resolved as shift
WARNING: shift/reduce conflict for WORD in state 31 resolved as shift
WARNING: shift/reduce conflict for TYPE_A in state 31 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 31 resolved as shift
WARNING: shift/reduce conflict for SO in state 31 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 31 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 31 resolved as shift
WARNING: shift/reduce conflict for TYPE_H in state 31 resolved as shift
WARNING: shift/reduce conflict for TYPE_N in state 31 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 31 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 41 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MUL in state 67 resolved as shift
WARNING: shift/reduce conflict for DIV in state 67 resolved as shift
WARNING: shift/reduce conflict for MOD in state 67 resolved as shift
WARNING: shift/reduce conflict for EQUTO in state 67 resolved as shift
WARNING: shift/reduce conflict for NOEQU in state 67 resolved as shift
WARNING: shift/reduce conflict for LESS in state 67 resolved as shift
WARNING: shift/reduce conflict for MORE in state 67 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MUL in state 68 resolved as shift
WARNING: shift/reduce conflict for DIV in state 68 resolved as shift
WARNING: shift/reduce conflict for MOD in state 68 resolved as shift
WARNING: shift/reduce conflict for EQUTO in state 68 resolved as shift
WARNING: shift/reduce conflict for NOEQU in state 68 resolved as shift
WARNING: shift/reduce conflict for LESS in state 68 resolved as shift
WARNING: shift/reduce conflict for MORE in state 68 resolved as shift
WARNING: shift/reduce conflict for MUL in state 72 resolved as shift
WARNING: shift/reduce conflict for DIV in state 72 resolved as shift
WARNING: shift/reduce conflict for MOD in state 72 resolved as shift
WARNING: shift/reduce conflict for MUL in state 74 resolved as shift
WARNING: shift/reduce conflict for DIV in state 74 resolved as shift
WARNING: shift/reduce conflict for MOD in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 86 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 91 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 95 resolved as shift
WARNING: shift/reduce conflict for WORD in state 95 resolved as shift
WARNING: shift/reduce conflict for TYPE_A in state 95 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 95 resolved as shift
WARNING: shift/reduce conflict for SO in state 95 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 95 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 95 resolved as shift
WARNING: shift/reduce conflict for TYPE_H in state 95 resolved as shift
WARNING: shift/reduce conflict for TYPE_N in state 95 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 95 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 111 resolved as shift
WARNING: shift/reduce conflict for RSTATE in state 148 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 148 resolved as shift
WARNING: reduce/reduce conflict in state 72 resolved using rule (expression -> term PLUS term)
WARNING: rejected rule (expression -> term) in state 72
WARNING: reduce/reduce conflict in state 74 resolved using rule (expression -> term MINUS term)
WARNING: rejected rule (expression -> term) in state 74
WARNING: reduce/reduce conflict in state 76 resolved using rule (expression -> term MUL term)
WARNING: rejected rule (expression -> term) in state 76
WARNING: reduce/reduce conflict in state 78 resolved using rule (expression -> term DIV term)
WARNING: rejected rule (expression -> term) in state 78
WARNING: reduce/reduce conflict in state 80 resolved using rule (expression -> term MOD term)
WARNING: rejected rule (expression -> term) in state 80
WARNING: reduce/reduce conflict in state 91 resolved using rule (term -> STRING_LITERAL)
WARNING: rejected rule (empty -> <empty>) in state 91
WARNING: reduce/reduce conflict in state 95 resolved using rule (statement -> statement NEWLINE statement NEWLINE)
WARNING: rejected rule (statement -> statement NEWLINE) in state 95
