Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BACK
    DECADE
    DECL
    INT64
    NOTSO
    SEMI

Grammar

Rule 0     S' -> line
Rule 1     line -> Input line
Rule 2     line -> EXIT empty
Rule 3     EXIT -> <empty>
Rule 4     Input -> statement
Rule 5     Input -> expression
Rule 6     statement -> statement NEWLINE statement
Rule 7     statement -> statement NEWLINE statement NEWLINE
Rule 8     statement -> exassign
Rule 9     statement -> declare
Rule 10    statement -> exprint
Rule 11    statement -> exif
Rule 12    statement -> exelif
Rule 13    statement -> exloop
Rule 14    statement -> exrepeat
Rule 15    statement -> statement NEWLINE
Rule 16    statement -> NEWLINE statement
Rule 17    statement -> exloop NEWLINE
Rule 18    exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE
Rule 19    exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
Rule 20    exelif -> exif exelse
Rule 21    exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE
Rule 22    exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE
Rule 23    exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE
Rule 24    exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
Rule 25    exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
Rule 26    exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
Rule 27    expression -> expression PLUS expression
Rule 28    expression -> term PLUS term
Rule 29    expression -> term PLUS expression
Rule 30    expression -> expression MINUS expression
Rule 31    expression -> term MINUS term
Rule 32    expression -> term MINUS expression
Rule 33    expression -> expression MUL expression
Rule 34    expression -> term MUL term
Rule 35    expression -> term MUL expression
Rule 36    expression -> expression DIV expression
Rule 37    expression -> term DIV term
Rule 38    expression -> term DIV expression
Rule 39    expression -> expression MOD expression
Rule 40    expression -> term MOD term
Rule 41    expression -> term MOD expression
Rule 42    term -> WORD
Rule 43    term -> arraysh
Rule 44    term -> NUM
Rule 45    term -> HEX
Rule 46    term -> APOS WORD APOS
Rule 47    term -> APOS NUM APOS
Rule 48    typeconst -> TYPE_H
Rule 49    typeconst -> TYPE_N
Rule 50    typeconst -> TYPE_A
Rule 51    typeconst -> TYPE_S
Rule 52    expression -> term
Rule 53    expression -> MINUS expression
Rule 54    expression -> LPAREN expression RPAREN
Rule 55    exassign -> WORD EQU expression
Rule 56    exassign -> arraysh EQU expression
Rule 57    expression -> expression EQUTO expression
Rule 58    expression -> expression NOEQU expression
Rule 59    expression -> expression LESS expression
Rule 60    expression -> expression MORE expression
Rule 61    declare -> typeconst WORD
Rule 62    declare -> typeconst WORD EQU term
Rule 63    arraysh -> WORD LARRY NUM RARRY
Rule 64    arraysh -> WORD LARRY WORD RARRY
Rule 65    declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE
Rule 66    declare -> TYPE_A WORD LARRY NUM RARRY
Rule 67    declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
Rule 68    arrayX -> NUM arrayY
Rule 69    arrayY -> COMMA NUM arrayY
Rule 70    arrayY -> empty empty empty
Rule 71    exprint -> TEXT LPAREN expression printMore RPAREN
Rule 72    exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN
Rule 73    printMore -> COMMA expression printMore
Rule 74    printMore -> empty empty empty
Rule 75    printMore -> COMMA QUOT expression QUOT printMore
Rule 76    empty -> <empty>

Terminals, with rules where they appear

APOS                 : 46 46 47 47
BACK                 : 
COMMA                : 69 73 75
DECADE               : 
DECL                 : 
DIV                  : 36 37 38
EQU                  : 55 56 62 65 67
EQUTO                : 57
HEX                  : 45
INT64                : 
LARRY                : 63 64 66 67
LESS                 : 59
LOOP                 : 23 24
LPAREN               : 18 19 23 24 25 26 54 71 72
LSTATE               : 18 19 21 21 22 23 24 25 26 65 67
MINUS                : 30 31 32 53
MOD                  : 39 40 41
MORE                 : 60
MUL                  : 33 34 35
NEWLINE              : 6 7 7 15 16 17 19 22 24 26
NOEQU                : 58
NOTSO                : 
NUM                  : 44 47 63 66 67 68 69
OTHERWISE            : 21 21 22
PLUS                 : 27 28 29
QUOT                 : 72 72 75 75
RARRY                : 63 64 66 67
REPEAT               : 25 26
RPAREN               : 18 19 23 24 25 26 54 71 72
RSTATE               : 18 19 22 23 24 25 26 65 67
SEMI                 : 
SO                   : 18 19
TEXT                 : 71 72
TYPE_A               : 50 65 66 67
TYPE_H               : 48
TYPE_N               : 49
TYPE_S               : 51
WORD                 : 42 46 55 61 62 63 64 64 65 66 67
error                : 

Nonterminals, with rules where they appear

EXIT                 : 2
Input                : 1
arrayX               : 65 67
arrayY               : 68 69
arraysh              : 43 56
declare              : 9
empty                : 2 70 70 70 74 74 74
exassign             : 8
exelif               : 12
exelse               : 20
exif                 : 11 20
exloop               : 13 17
expression           : 5 18 19 23 24 25 26 27 27 29 30 30 32 33 33 35 36 36 38 39 39 41 53 54 55 56 57 57 58 58 59 59 60 60 71 72 73 75
exprint              : 10
exrepeat             : 14
line                 : 1 0
printMore            : 71 72 73 75
statement            : 4 6 6 7 7 15 16 18 19 21 22 23 24 25 26
term                 : 28 28 29 31 31 32 34 34 35 37 37 38 40 40 41 52 62
typeconst            : 61 62

Parsing method: LALR

state 0

    (0) S' -> . line
    (1) line -> . Input line
    (2) line -> . EXIT empty
    (4) Input -> . statement
    (5) Input -> . expression
    (3) EXIT -> .
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (55) exassign -> . WORD EQU expression
    (56) exassign -> . arraysh EQU expression
    (61) declare -> . typeconst WORD
    (62) declare -> . typeconst WORD EQU term
    (65) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (66) declare -> . TYPE_A WORD LARRY NUM RARRY
    (67) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (71) exprint -> . TEXT LPAREN expression printMore RPAREN
    (72) exprint -> . TEXT LPAREN QUOT expression QUOT printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY
    (48) typeconst -> . TYPE_H
    (49) typeconst -> . TYPE_N
    (50) typeconst -> . TYPE_A
    (51) typeconst -> . TYPE_S

    $end            reduce using rule 3 (EXIT -> .)
    NEWLINE         shift and go to state 6
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 17
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 22
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27
    TYPE_H          shift and go to state 28
    TYPE_N          shift and go to state 29
    TYPE_S          shift and go to state 30

    line                           shift and go to state 1
    Input                          shift and go to state 2
    EXIT                           shift and go to state 3
    statement                      shift and go to state 4
    expression                     shift and go to state 5
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    term                           shift and go to state 14
    arraysh                        shift and go to state 18
    typeconst                      shift and go to state 19

state 1

    (0) S' -> line .



state 2

    (1) line -> Input . line
    (1) line -> . Input line
    (2) line -> . EXIT empty
    (4) Input -> . statement
    (5) Input -> . expression
    (3) EXIT -> .
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (55) exassign -> . WORD EQU expression
    (56) exassign -> . arraysh EQU expression
    (61) declare -> . typeconst WORD
    (62) declare -> . typeconst WORD EQU term
    (65) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (66) declare -> . TYPE_A WORD LARRY NUM RARRY
    (67) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (71) exprint -> . TEXT LPAREN expression printMore RPAREN
    (72) exprint -> . TEXT LPAREN QUOT expression QUOT printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY
    (48) typeconst -> . TYPE_H
    (49) typeconst -> . TYPE_N
    (50) typeconst -> . TYPE_A
    (51) typeconst -> . TYPE_S

    $end            reduce using rule 3 (EXIT -> .)
    NEWLINE         shift and go to state 6
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 17
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 22
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27
    TYPE_H          shift and go to state 28
    TYPE_N          shift and go to state 29
    TYPE_S          shift and go to state 30

    Input                          shift and go to state 2
    line                           shift and go to state 31
    EXIT                           shift and go to state 3
    statement                      shift and go to state 4
    expression                     shift and go to state 5
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    term                           shift and go to state 14
    arraysh                        shift and go to state 18
    typeconst                      shift and go to state 19

state 3

    (2) line -> EXIT . empty
    (76) empty -> .

    $end            reduce using rule 76 (empty -> .)

    empty                          shift and go to state 32

state 4

    (4) Input -> statement .
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

  ! shift/reduce conflict for NEWLINE resolved as shift
    MINUS           reduce using rule 4 (Input -> statement .)
    LPAREN          reduce using rule 4 (Input -> statement .)
    WORD            reduce using rule 4 (Input -> statement .)
    TYPE_A          reduce using rule 4 (Input -> statement .)
    TEXT            reduce using rule 4 (Input -> statement .)
    SO              reduce using rule 4 (Input -> statement .)
    LOOP            reduce using rule 4 (Input -> statement .)
    REPEAT          reduce using rule 4 (Input -> statement .)
    NUM             reduce using rule 4 (Input -> statement .)
    HEX             reduce using rule 4 (Input -> statement .)
    APOS            reduce using rule 4 (Input -> statement .)
    TYPE_H          reduce using rule 4 (Input -> statement .)
    TYPE_N          reduce using rule 4 (Input -> statement .)
    TYPE_S          reduce using rule 4 (Input -> statement .)
    $end            reduce using rule 4 (Input -> statement .)
    NEWLINE         shift and go to state 33

  ! NEWLINE         [ reduce using rule 4 (Input -> statement .) ]


state 5

    (5) Input -> expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

  ! shift/reduce conflict for MINUS resolved as shift
    NEWLINE         reduce using rule 5 (Input -> expression .)
    LPAREN          reduce using rule 5 (Input -> expression .)
    WORD            reduce using rule 5 (Input -> expression .)
    TYPE_A          reduce using rule 5 (Input -> expression .)
    TEXT            reduce using rule 5 (Input -> expression .)
    SO              reduce using rule 5 (Input -> expression .)
    LOOP            reduce using rule 5 (Input -> expression .)
    REPEAT          reduce using rule 5 (Input -> expression .)
    NUM             reduce using rule 5 (Input -> expression .)
    HEX             reduce using rule 5 (Input -> expression .)
    APOS            reduce using rule 5 (Input -> expression .)
    TYPE_H          reduce using rule 5 (Input -> expression .)
    TYPE_N          reduce using rule 5 (Input -> expression .)
    TYPE_S          reduce using rule 5 (Input -> expression .)
    $end            reduce using rule 5 (Input -> expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    EQUTO           shift and go to state 39
    NOEQU           shift and go to state 40
    LESS            shift and go to state 41
    MORE            shift and go to state 42

  ! MINUS           [ reduce using rule 5 (Input -> expression .) ]


state 6

    (16) statement -> NEWLINE . statement
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (55) exassign -> . WORD EQU expression
    (56) exassign -> . arraysh EQU expression
    (61) declare -> . typeconst WORD
    (62) declare -> . typeconst WORD EQU term
    (65) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (66) declare -> . TYPE_A WORD LARRY NUM RARRY
    (67) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (71) exprint -> . TEXT LPAREN expression printMore RPAREN
    (72) exprint -> . TEXT LPAREN QUOT expression QUOT printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY
    (48) typeconst -> . TYPE_H
    (49) typeconst -> . TYPE_N
    (50) typeconst -> . TYPE_A
    (51) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 6
    WORD            shift and go to state 44
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 22
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 28
    TYPE_N          shift and go to state 29
    TYPE_S          shift and go to state 30

    statement                      shift and go to state 43
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 45
    typeconst                      shift and go to state 19

state 7

    (8) statement -> exassign .

    NEWLINE         reduce using rule 8 (statement -> exassign .)
    MINUS           reduce using rule 8 (statement -> exassign .)
    LPAREN          reduce using rule 8 (statement -> exassign .)
    WORD            reduce using rule 8 (statement -> exassign .)
    TYPE_A          reduce using rule 8 (statement -> exassign .)
    TEXT            reduce using rule 8 (statement -> exassign .)
    SO              reduce using rule 8 (statement -> exassign .)
    LOOP            reduce using rule 8 (statement -> exassign .)
    REPEAT          reduce using rule 8 (statement -> exassign .)
    NUM             reduce using rule 8 (statement -> exassign .)
    HEX             reduce using rule 8 (statement -> exassign .)
    APOS            reduce using rule 8 (statement -> exassign .)
    TYPE_H          reduce using rule 8 (statement -> exassign .)
    TYPE_N          reduce using rule 8 (statement -> exassign .)
    TYPE_S          reduce using rule 8 (statement -> exassign .)
    $end            reduce using rule 8 (statement -> exassign .)
    LSTATE          reduce using rule 8 (statement -> exassign .)
    RSTATE          reduce using rule 8 (statement -> exassign .)


state 8

    (9) statement -> declare .

    NEWLINE         reduce using rule 9 (statement -> declare .)
    MINUS           reduce using rule 9 (statement -> declare .)
    LPAREN          reduce using rule 9 (statement -> declare .)
    WORD            reduce using rule 9 (statement -> declare .)
    TYPE_A          reduce using rule 9 (statement -> declare .)
    TEXT            reduce using rule 9 (statement -> declare .)
    SO              reduce using rule 9 (statement -> declare .)
    LOOP            reduce using rule 9 (statement -> declare .)
    REPEAT          reduce using rule 9 (statement -> declare .)
    NUM             reduce using rule 9 (statement -> declare .)
    HEX             reduce using rule 9 (statement -> declare .)
    APOS            reduce using rule 9 (statement -> declare .)
    TYPE_H          reduce using rule 9 (statement -> declare .)
    TYPE_N          reduce using rule 9 (statement -> declare .)
    TYPE_S          reduce using rule 9 (statement -> declare .)
    $end            reduce using rule 9 (statement -> declare .)
    LSTATE          reduce using rule 9 (statement -> declare .)
    RSTATE          reduce using rule 9 (statement -> declare .)


state 9

    (10) statement -> exprint .

    NEWLINE         reduce using rule 10 (statement -> exprint .)
    MINUS           reduce using rule 10 (statement -> exprint .)
    LPAREN          reduce using rule 10 (statement -> exprint .)
    WORD            reduce using rule 10 (statement -> exprint .)
    TYPE_A          reduce using rule 10 (statement -> exprint .)
    TEXT            reduce using rule 10 (statement -> exprint .)
    SO              reduce using rule 10 (statement -> exprint .)
    LOOP            reduce using rule 10 (statement -> exprint .)
    REPEAT          reduce using rule 10 (statement -> exprint .)
    NUM             reduce using rule 10 (statement -> exprint .)
    HEX             reduce using rule 10 (statement -> exprint .)
    APOS            reduce using rule 10 (statement -> exprint .)
    TYPE_H          reduce using rule 10 (statement -> exprint .)
    TYPE_N          reduce using rule 10 (statement -> exprint .)
    TYPE_S          reduce using rule 10 (statement -> exprint .)
    $end            reduce using rule 10 (statement -> exprint .)
    LSTATE          reduce using rule 10 (statement -> exprint .)
    RSTATE          reduce using rule 10 (statement -> exprint .)


state 10

    (11) statement -> exif .
    (20) exelif -> exif . exelse
    (21) exelse -> . OTHERWISE LSTATE statement LSTATE OTHERWISE
    (22) exelse -> . OTHERWISE LSTATE NEWLINE statement RSTATE

    NEWLINE         reduce using rule 11 (statement -> exif .)
    MINUS           reduce using rule 11 (statement -> exif .)
    LPAREN          reduce using rule 11 (statement -> exif .)
    WORD            reduce using rule 11 (statement -> exif .)
    TYPE_A          reduce using rule 11 (statement -> exif .)
    TEXT            reduce using rule 11 (statement -> exif .)
    SO              reduce using rule 11 (statement -> exif .)
    LOOP            reduce using rule 11 (statement -> exif .)
    REPEAT          reduce using rule 11 (statement -> exif .)
    NUM             reduce using rule 11 (statement -> exif .)
    HEX             reduce using rule 11 (statement -> exif .)
    APOS            reduce using rule 11 (statement -> exif .)
    TYPE_H          reduce using rule 11 (statement -> exif .)
    TYPE_N          reduce using rule 11 (statement -> exif .)
    TYPE_S          reduce using rule 11 (statement -> exif .)
    $end            reduce using rule 11 (statement -> exif .)
    LSTATE          reduce using rule 11 (statement -> exif .)
    RSTATE          reduce using rule 11 (statement -> exif .)
    OTHERWISE       shift and go to state 47

    exelse                         shift and go to state 46

state 11

    (12) statement -> exelif .

    NEWLINE         reduce using rule 12 (statement -> exelif .)
    MINUS           reduce using rule 12 (statement -> exelif .)
    LPAREN          reduce using rule 12 (statement -> exelif .)
    WORD            reduce using rule 12 (statement -> exelif .)
    TYPE_A          reduce using rule 12 (statement -> exelif .)
    TEXT            reduce using rule 12 (statement -> exelif .)
    SO              reduce using rule 12 (statement -> exelif .)
    LOOP            reduce using rule 12 (statement -> exelif .)
    REPEAT          reduce using rule 12 (statement -> exelif .)
    NUM             reduce using rule 12 (statement -> exelif .)
    HEX             reduce using rule 12 (statement -> exelif .)
    APOS            reduce using rule 12 (statement -> exelif .)
    TYPE_H          reduce using rule 12 (statement -> exelif .)
    TYPE_N          reduce using rule 12 (statement -> exelif .)
    TYPE_S          reduce using rule 12 (statement -> exelif .)
    $end            reduce using rule 12 (statement -> exelif .)
    LSTATE          reduce using rule 12 (statement -> exelif .)
    RSTATE          reduce using rule 12 (statement -> exelif .)


state 12

    (13) statement -> exloop .
    (17) statement -> exloop . NEWLINE

  ! shift/reduce conflict for NEWLINE resolved as shift
    MINUS           reduce using rule 13 (statement -> exloop .)
    LPAREN          reduce using rule 13 (statement -> exloop .)
    WORD            reduce using rule 13 (statement -> exloop .)
    TYPE_A          reduce using rule 13 (statement -> exloop .)
    TEXT            reduce using rule 13 (statement -> exloop .)
    SO              reduce using rule 13 (statement -> exloop .)
    LOOP            reduce using rule 13 (statement -> exloop .)
    REPEAT          reduce using rule 13 (statement -> exloop .)
    NUM             reduce using rule 13 (statement -> exloop .)
    HEX             reduce using rule 13 (statement -> exloop .)
    APOS            reduce using rule 13 (statement -> exloop .)
    TYPE_H          reduce using rule 13 (statement -> exloop .)
    TYPE_N          reduce using rule 13 (statement -> exloop .)
    TYPE_S          reduce using rule 13 (statement -> exloop .)
    $end            reduce using rule 13 (statement -> exloop .)
    LSTATE          reduce using rule 13 (statement -> exloop .)
    RSTATE          reduce using rule 13 (statement -> exloop .)
    NEWLINE         shift and go to state 48

  ! NEWLINE         [ reduce using rule 13 (statement -> exloop .) ]


state 13

    (14) statement -> exrepeat .

    NEWLINE         reduce using rule 14 (statement -> exrepeat .)
    MINUS           reduce using rule 14 (statement -> exrepeat .)
    LPAREN          reduce using rule 14 (statement -> exrepeat .)
    WORD            reduce using rule 14 (statement -> exrepeat .)
    TYPE_A          reduce using rule 14 (statement -> exrepeat .)
    TEXT            reduce using rule 14 (statement -> exrepeat .)
    SO              reduce using rule 14 (statement -> exrepeat .)
    LOOP            reduce using rule 14 (statement -> exrepeat .)
    REPEAT          reduce using rule 14 (statement -> exrepeat .)
    NUM             reduce using rule 14 (statement -> exrepeat .)
    HEX             reduce using rule 14 (statement -> exrepeat .)
    APOS            reduce using rule 14 (statement -> exrepeat .)
    TYPE_H          reduce using rule 14 (statement -> exrepeat .)
    TYPE_N          reduce using rule 14 (statement -> exrepeat .)
    TYPE_S          reduce using rule 14 (statement -> exrepeat .)
    $end            reduce using rule 14 (statement -> exrepeat .)
    LSTATE          reduce using rule 14 (statement -> exrepeat .)
    RSTATE          reduce using rule 14 (statement -> exrepeat .)


state 14

    (28) expression -> term . PLUS term
    (29) expression -> term . PLUS expression
    (31) expression -> term . MINUS term
    (32) expression -> term . MINUS expression
    (34) expression -> term . MUL term
    (35) expression -> term . MUL expression
    (37) expression -> term . DIV term
    (38) expression -> term . DIV expression
    (40) expression -> term . MOD term
    (41) expression -> term . MOD expression
    (52) expression -> term .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    MUL             shift and go to state 51
    DIV             shift and go to state 52
    MOD             shift and go to state 53
    EQUTO           reduce using rule 52 (expression -> term .)
    NOEQU           reduce using rule 52 (expression -> term .)
    LESS            reduce using rule 52 (expression -> term .)
    MORE            reduce using rule 52 (expression -> term .)
    NEWLINE         reduce using rule 52 (expression -> term .)
    LPAREN          reduce using rule 52 (expression -> term .)
    WORD            reduce using rule 52 (expression -> term .)
    TYPE_A          reduce using rule 52 (expression -> term .)
    TEXT            reduce using rule 52 (expression -> term .)
    SO              reduce using rule 52 (expression -> term .)
    LOOP            reduce using rule 52 (expression -> term .)
    REPEAT          reduce using rule 52 (expression -> term .)
    NUM             reduce using rule 52 (expression -> term .)
    HEX             reduce using rule 52 (expression -> term .)
    APOS            reduce using rule 52 (expression -> term .)
    TYPE_H          reduce using rule 52 (expression -> term .)
    TYPE_N          reduce using rule 52 (expression -> term .)
    TYPE_S          reduce using rule 52 (expression -> term .)
    $end            reduce using rule 52 (expression -> term .)
    RPAREN          reduce using rule 52 (expression -> term .)
    LSTATE          reduce using rule 52 (expression -> term .)
    RSTATE          reduce using rule 52 (expression -> term .)
    COMMA           reduce using rule 52 (expression -> term .)
    QUOT            reduce using rule 52 (expression -> term .)

  ! PLUS            [ reduce using rule 52 (expression -> term .) ]
  ! MINUS           [ reduce using rule 52 (expression -> term .) ]
  ! MUL             [ reduce using rule 52 (expression -> term .) ]
  ! DIV             [ reduce using rule 52 (expression -> term .) ]
  ! MOD             [ reduce using rule 52 (expression -> term .) ]


state 15

    (53) expression -> MINUS . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 54
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 16

    (54) expression -> LPAREN . expression RPAREN
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 57
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 17

    (55) exassign -> WORD . EQU expression
    (42) term -> WORD .
    (63) arraysh -> WORD . LARRY NUM RARRY
    (64) arraysh -> WORD . LARRY WORD RARRY

    EQU             shift and go to state 58
    PLUS            reduce using rule 42 (term -> WORD .)
    MINUS           reduce using rule 42 (term -> WORD .)
    MUL             reduce using rule 42 (term -> WORD .)
    DIV             reduce using rule 42 (term -> WORD .)
    MOD             reduce using rule 42 (term -> WORD .)
    EQUTO           reduce using rule 42 (term -> WORD .)
    NOEQU           reduce using rule 42 (term -> WORD .)
    LESS            reduce using rule 42 (term -> WORD .)
    MORE            reduce using rule 42 (term -> WORD .)
    NEWLINE         reduce using rule 42 (term -> WORD .)
    LPAREN          reduce using rule 42 (term -> WORD .)
    WORD            reduce using rule 42 (term -> WORD .)
    TYPE_A          reduce using rule 42 (term -> WORD .)
    TEXT            reduce using rule 42 (term -> WORD .)
    SO              reduce using rule 42 (term -> WORD .)
    LOOP            reduce using rule 42 (term -> WORD .)
    REPEAT          reduce using rule 42 (term -> WORD .)
    NUM             reduce using rule 42 (term -> WORD .)
    HEX             reduce using rule 42 (term -> WORD .)
    APOS            reduce using rule 42 (term -> WORD .)
    TYPE_H          reduce using rule 42 (term -> WORD .)
    TYPE_N          reduce using rule 42 (term -> WORD .)
    TYPE_S          reduce using rule 42 (term -> WORD .)
    $end            reduce using rule 42 (term -> WORD .)
    LARRY           shift and go to state 59


state 18

    (56) exassign -> arraysh . EQU expression
    (43) term -> arraysh .

    EQU             shift and go to state 60
    PLUS            reduce using rule 43 (term -> arraysh .)
    MINUS           reduce using rule 43 (term -> arraysh .)
    MUL             reduce using rule 43 (term -> arraysh .)
    DIV             reduce using rule 43 (term -> arraysh .)
    MOD             reduce using rule 43 (term -> arraysh .)
    EQUTO           reduce using rule 43 (term -> arraysh .)
    NOEQU           reduce using rule 43 (term -> arraysh .)
    LESS            reduce using rule 43 (term -> arraysh .)
    MORE            reduce using rule 43 (term -> arraysh .)
    NEWLINE         reduce using rule 43 (term -> arraysh .)
    LPAREN          reduce using rule 43 (term -> arraysh .)
    WORD            reduce using rule 43 (term -> arraysh .)
    TYPE_A          reduce using rule 43 (term -> arraysh .)
    TEXT            reduce using rule 43 (term -> arraysh .)
    SO              reduce using rule 43 (term -> arraysh .)
    LOOP            reduce using rule 43 (term -> arraysh .)
    REPEAT          reduce using rule 43 (term -> arraysh .)
    NUM             reduce using rule 43 (term -> arraysh .)
    HEX             reduce using rule 43 (term -> arraysh .)
    APOS            reduce using rule 43 (term -> arraysh .)
    TYPE_H          reduce using rule 43 (term -> arraysh .)
    TYPE_N          reduce using rule 43 (term -> arraysh .)
    TYPE_S          reduce using rule 43 (term -> arraysh .)
    $end            reduce using rule 43 (term -> arraysh .)


state 19

    (61) declare -> typeconst . WORD
    (62) declare -> typeconst . WORD EQU term

    WORD            shift and go to state 61


state 20

    (65) declare -> TYPE_A . WORD EQU LSTATE arrayX RSTATE
    (66) declare -> TYPE_A . WORD LARRY NUM RARRY
    (67) declare -> TYPE_A . WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (50) typeconst -> TYPE_A .

  ! shift/reduce conflict for WORD resolved as shift
    WORD            shift and go to state 62

  ! WORD            [ reduce using rule 50 (typeconst -> TYPE_A .) ]


state 21

    (44) term -> NUM .

    PLUS            reduce using rule 44 (term -> NUM .)
    MINUS           reduce using rule 44 (term -> NUM .)
    MUL             reduce using rule 44 (term -> NUM .)
    DIV             reduce using rule 44 (term -> NUM .)
    MOD             reduce using rule 44 (term -> NUM .)
    EQUTO           reduce using rule 44 (term -> NUM .)
    NOEQU           reduce using rule 44 (term -> NUM .)
    LESS            reduce using rule 44 (term -> NUM .)
    MORE            reduce using rule 44 (term -> NUM .)
    NEWLINE         reduce using rule 44 (term -> NUM .)
    LPAREN          reduce using rule 44 (term -> NUM .)
    WORD            reduce using rule 44 (term -> NUM .)
    TYPE_A          reduce using rule 44 (term -> NUM .)
    TEXT            reduce using rule 44 (term -> NUM .)
    SO              reduce using rule 44 (term -> NUM .)
    LOOP            reduce using rule 44 (term -> NUM .)
    REPEAT          reduce using rule 44 (term -> NUM .)
    NUM             reduce using rule 44 (term -> NUM .)
    HEX             reduce using rule 44 (term -> NUM .)
    APOS            reduce using rule 44 (term -> NUM .)
    TYPE_H          reduce using rule 44 (term -> NUM .)
    TYPE_N          reduce using rule 44 (term -> NUM .)
    TYPE_S          reduce using rule 44 (term -> NUM .)
    $end            reduce using rule 44 (term -> NUM .)
    RPAREN          reduce using rule 44 (term -> NUM .)
    LSTATE          reduce using rule 44 (term -> NUM .)
    RSTATE          reduce using rule 44 (term -> NUM .)
    COMMA           reduce using rule 44 (term -> NUM .)
    QUOT            reduce using rule 44 (term -> NUM .)


state 22

    (71) exprint -> TEXT . LPAREN expression printMore RPAREN
    (72) exprint -> TEXT . LPAREN QUOT expression QUOT printMore RPAREN

    LPAREN          shift and go to state 63


state 23

    (18) exif -> SO . LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> SO . LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE

    LPAREN          shift and go to state 64


state 24

    (23) exloop -> LOOP . LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> LOOP . LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE

    LPAREN          shift and go to state 65


state 25

    (25) exrepeat -> REPEAT . LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> REPEAT . LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE

    LPAREN          shift and go to state 66


state 26

    (45) term -> HEX .

    PLUS            reduce using rule 45 (term -> HEX .)
    MINUS           reduce using rule 45 (term -> HEX .)
    MUL             reduce using rule 45 (term -> HEX .)
    DIV             reduce using rule 45 (term -> HEX .)
    MOD             reduce using rule 45 (term -> HEX .)
    EQUTO           reduce using rule 45 (term -> HEX .)
    NOEQU           reduce using rule 45 (term -> HEX .)
    LESS            reduce using rule 45 (term -> HEX .)
    MORE            reduce using rule 45 (term -> HEX .)
    NEWLINE         reduce using rule 45 (term -> HEX .)
    LPAREN          reduce using rule 45 (term -> HEX .)
    WORD            reduce using rule 45 (term -> HEX .)
    TYPE_A          reduce using rule 45 (term -> HEX .)
    TEXT            reduce using rule 45 (term -> HEX .)
    SO              reduce using rule 45 (term -> HEX .)
    LOOP            reduce using rule 45 (term -> HEX .)
    REPEAT          reduce using rule 45 (term -> HEX .)
    NUM             reduce using rule 45 (term -> HEX .)
    HEX             reduce using rule 45 (term -> HEX .)
    APOS            reduce using rule 45 (term -> HEX .)
    TYPE_H          reduce using rule 45 (term -> HEX .)
    TYPE_N          reduce using rule 45 (term -> HEX .)
    TYPE_S          reduce using rule 45 (term -> HEX .)
    $end            reduce using rule 45 (term -> HEX .)
    RPAREN          reduce using rule 45 (term -> HEX .)
    LSTATE          reduce using rule 45 (term -> HEX .)
    RSTATE          reduce using rule 45 (term -> HEX .)
    COMMA           reduce using rule 45 (term -> HEX .)
    QUOT            reduce using rule 45 (term -> HEX .)


state 27

    (46) term -> APOS . WORD APOS
    (47) term -> APOS . NUM APOS

    WORD            shift and go to state 67
    NUM             shift and go to state 68


state 28

    (48) typeconst -> TYPE_H .

    WORD            reduce using rule 48 (typeconst -> TYPE_H .)


state 29

    (49) typeconst -> TYPE_N .

    WORD            reduce using rule 49 (typeconst -> TYPE_N .)


state 30

    (51) typeconst -> TYPE_S .

    WORD            reduce using rule 51 (typeconst -> TYPE_S .)


state 31

    (1) line -> Input line .

    $end            reduce using rule 1 (line -> Input line .)


state 32

    (2) line -> EXIT empty .

    $end            reduce using rule 2 (line -> EXIT empty .)


state 33

    (6) statement -> statement NEWLINE . statement
    (7) statement -> statement NEWLINE . statement NEWLINE
    (15) statement -> statement NEWLINE .
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (55) exassign -> . WORD EQU expression
    (56) exassign -> . arraysh EQU expression
    (61) declare -> . typeconst WORD
    (62) declare -> . typeconst WORD EQU term
    (65) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (66) declare -> . TYPE_A WORD LARRY NUM RARRY
    (67) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (71) exprint -> . TEXT LPAREN expression printMore RPAREN
    (72) exprint -> . TEXT LPAREN QUOT expression QUOT printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY
    (48) typeconst -> . TYPE_H
    (49) typeconst -> . TYPE_N
    (50) typeconst -> . TYPE_A
    (51) typeconst -> . TYPE_S

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
  ! shift/reduce conflict for TYPE_A resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SO resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for TYPE_H resolved as shift
  ! shift/reduce conflict for TYPE_N resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
    MINUS           reduce using rule 15 (statement -> statement NEWLINE .)
    LPAREN          reduce using rule 15 (statement -> statement NEWLINE .)
    NUM             reduce using rule 15 (statement -> statement NEWLINE .)
    HEX             reduce using rule 15 (statement -> statement NEWLINE .)
    APOS            reduce using rule 15 (statement -> statement NEWLINE .)
    $end            reduce using rule 15 (statement -> statement NEWLINE .)
    LSTATE          reduce using rule 15 (statement -> statement NEWLINE .)
    RSTATE          reduce using rule 15 (statement -> statement NEWLINE .)
    NEWLINE         shift and go to state 6
    WORD            shift and go to state 44
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 22
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 28
    TYPE_N          shift and go to state 29
    TYPE_S          shift and go to state 30

  ! NEWLINE         [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! WORD            [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TYPE_A          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TEXT            [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! SO              [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! LOOP            [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! REPEAT          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TYPE_H          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TYPE_N          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TYPE_S          [ reduce using rule 15 (statement -> statement NEWLINE .) ]

    statement                      shift and go to state 69
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 45
    typeconst                      shift and go to state 19

state 34

    (27) expression -> expression PLUS . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 70
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 35

    (30) expression -> expression MINUS . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 71
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 36

    (33) expression -> expression MUL . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 72
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 37

    (36) expression -> expression DIV . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 73
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 38

    (39) expression -> expression MOD . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 74
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 39

    (57) expression -> expression EQUTO . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 75
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 40

    (58) expression -> expression NOEQU . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 76
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 41

    (59) expression -> expression LESS . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 77
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 42

    (60) expression -> expression MORE . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 78
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 43

    (16) statement -> NEWLINE statement .
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

  ! shift/reduce conflict for NEWLINE resolved as shift
    MINUS           reduce using rule 16 (statement -> NEWLINE statement .)
    LPAREN          reduce using rule 16 (statement -> NEWLINE statement .)
    WORD            reduce using rule 16 (statement -> NEWLINE statement .)
    TYPE_A          reduce using rule 16 (statement -> NEWLINE statement .)
    TEXT            reduce using rule 16 (statement -> NEWLINE statement .)
    SO              reduce using rule 16 (statement -> NEWLINE statement .)
    LOOP            reduce using rule 16 (statement -> NEWLINE statement .)
    REPEAT          reduce using rule 16 (statement -> NEWLINE statement .)
    NUM             reduce using rule 16 (statement -> NEWLINE statement .)
    HEX             reduce using rule 16 (statement -> NEWLINE statement .)
    APOS            reduce using rule 16 (statement -> NEWLINE statement .)
    TYPE_H          reduce using rule 16 (statement -> NEWLINE statement .)
    TYPE_N          reduce using rule 16 (statement -> NEWLINE statement .)
    TYPE_S          reduce using rule 16 (statement -> NEWLINE statement .)
    $end            reduce using rule 16 (statement -> NEWLINE statement .)
    LSTATE          reduce using rule 16 (statement -> NEWLINE statement .)
    RSTATE          reduce using rule 16 (statement -> NEWLINE statement .)
    NEWLINE         shift and go to state 33

  ! NEWLINE         [ reduce using rule 16 (statement -> NEWLINE statement .) ]


state 44

    (55) exassign -> WORD . EQU expression
    (63) arraysh -> WORD . LARRY NUM RARRY
    (64) arraysh -> WORD . LARRY WORD RARRY

    EQU             shift and go to state 58
    LARRY           shift and go to state 59


state 45

    (56) exassign -> arraysh . EQU expression

    EQU             shift and go to state 60


state 46

    (20) exelif -> exif exelse .

    NEWLINE         reduce using rule 20 (exelif -> exif exelse .)
    MINUS           reduce using rule 20 (exelif -> exif exelse .)
    LPAREN          reduce using rule 20 (exelif -> exif exelse .)
    WORD            reduce using rule 20 (exelif -> exif exelse .)
    TYPE_A          reduce using rule 20 (exelif -> exif exelse .)
    TEXT            reduce using rule 20 (exelif -> exif exelse .)
    SO              reduce using rule 20 (exelif -> exif exelse .)
    LOOP            reduce using rule 20 (exelif -> exif exelse .)
    REPEAT          reduce using rule 20 (exelif -> exif exelse .)
    NUM             reduce using rule 20 (exelif -> exif exelse .)
    HEX             reduce using rule 20 (exelif -> exif exelse .)
    APOS            reduce using rule 20 (exelif -> exif exelse .)
    TYPE_H          reduce using rule 20 (exelif -> exif exelse .)
    TYPE_N          reduce using rule 20 (exelif -> exif exelse .)
    TYPE_S          reduce using rule 20 (exelif -> exif exelse .)
    $end            reduce using rule 20 (exelif -> exif exelse .)
    LSTATE          reduce using rule 20 (exelif -> exif exelse .)
    RSTATE          reduce using rule 20 (exelif -> exif exelse .)


state 47

    (21) exelse -> OTHERWISE . LSTATE statement LSTATE OTHERWISE
    (22) exelse -> OTHERWISE . LSTATE NEWLINE statement RSTATE

    LSTATE          shift and go to state 79


state 48

    (17) statement -> exloop NEWLINE .

    NEWLINE         reduce using rule 17 (statement -> exloop NEWLINE .)
    MINUS           reduce using rule 17 (statement -> exloop NEWLINE .)
    LPAREN          reduce using rule 17 (statement -> exloop NEWLINE .)
    WORD            reduce using rule 17 (statement -> exloop NEWLINE .)
    TYPE_A          reduce using rule 17 (statement -> exloop NEWLINE .)
    TEXT            reduce using rule 17 (statement -> exloop NEWLINE .)
    SO              reduce using rule 17 (statement -> exloop NEWLINE .)
    LOOP            reduce using rule 17 (statement -> exloop NEWLINE .)
    REPEAT          reduce using rule 17 (statement -> exloop NEWLINE .)
    NUM             reduce using rule 17 (statement -> exloop NEWLINE .)
    HEX             reduce using rule 17 (statement -> exloop NEWLINE .)
    APOS            reduce using rule 17 (statement -> exloop NEWLINE .)
    TYPE_H          reduce using rule 17 (statement -> exloop NEWLINE .)
    TYPE_N          reduce using rule 17 (statement -> exloop NEWLINE .)
    TYPE_S          reduce using rule 17 (statement -> exloop NEWLINE .)
    $end            reduce using rule 17 (statement -> exloop NEWLINE .)
    LSTATE          reduce using rule 17 (statement -> exloop NEWLINE .)
    RSTATE          reduce using rule 17 (statement -> exloop NEWLINE .)


state 49

    (28) expression -> term PLUS . term
    (29) expression -> term PLUS . expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16

    term                           shift and go to state 80
    expression                     shift and go to state 81
    arraysh                        shift and go to state 56

state 50

    (31) expression -> term MINUS . term
    (32) expression -> term MINUS . expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16

    term                           shift and go to state 82
    expression                     shift and go to state 83
    arraysh                        shift and go to state 56

state 51

    (34) expression -> term MUL . term
    (35) expression -> term MUL . expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16

    term                           shift and go to state 84
    expression                     shift and go to state 85
    arraysh                        shift and go to state 56

state 52

    (37) expression -> term DIV . term
    (38) expression -> term DIV . expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16

    term                           shift and go to state 86
    expression                     shift and go to state 87
    arraysh                        shift and go to state 56

state 53

    (40) expression -> term MOD . term
    (41) expression -> term MOD . expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16

    term                           shift and go to state 88
    expression                     shift and go to state 89
    arraysh                        shift and go to state 56

state 54

    (53) expression -> MINUS expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    PLUS            reduce using rule 53 (expression -> MINUS expression .)
    MINUS           reduce using rule 53 (expression -> MINUS expression .)
    EQUTO           reduce using rule 53 (expression -> MINUS expression .)
    NOEQU           reduce using rule 53 (expression -> MINUS expression .)
    NEWLINE         reduce using rule 53 (expression -> MINUS expression .)
    LPAREN          reduce using rule 53 (expression -> MINUS expression .)
    WORD            reduce using rule 53 (expression -> MINUS expression .)
    TYPE_A          reduce using rule 53 (expression -> MINUS expression .)
    TEXT            reduce using rule 53 (expression -> MINUS expression .)
    SO              reduce using rule 53 (expression -> MINUS expression .)
    LOOP            reduce using rule 53 (expression -> MINUS expression .)
    REPEAT          reduce using rule 53 (expression -> MINUS expression .)
    NUM             reduce using rule 53 (expression -> MINUS expression .)
    HEX             reduce using rule 53 (expression -> MINUS expression .)
    APOS            reduce using rule 53 (expression -> MINUS expression .)
    TYPE_H          reduce using rule 53 (expression -> MINUS expression .)
    TYPE_N          reduce using rule 53 (expression -> MINUS expression .)
    TYPE_S          reduce using rule 53 (expression -> MINUS expression .)
    $end            reduce using rule 53 (expression -> MINUS expression .)
    RPAREN          reduce using rule 53 (expression -> MINUS expression .)
    LSTATE          reduce using rule 53 (expression -> MINUS expression .)
    RSTATE          reduce using rule 53 (expression -> MINUS expression .)
    COMMA           reduce using rule 53 (expression -> MINUS expression .)
    QUOT            reduce using rule 53 (expression -> MINUS expression .)
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    LESS            shift and go to state 41
    MORE            shift and go to state 42

  ! MUL             [ reduce using rule 53 (expression -> MINUS expression .) ]
  ! DIV             [ reduce using rule 53 (expression -> MINUS expression .) ]
  ! MOD             [ reduce using rule 53 (expression -> MINUS expression .) ]
  ! LESS            [ reduce using rule 53 (expression -> MINUS expression .) ]
  ! MORE            [ reduce using rule 53 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! EQUTO           [ shift and go to state 39 ]
  ! NOEQU           [ shift and go to state 40 ]


state 55

    (42) term -> WORD .
    (63) arraysh -> WORD . LARRY NUM RARRY
    (64) arraysh -> WORD . LARRY WORD RARRY

    PLUS            reduce using rule 42 (term -> WORD .)
    MINUS           reduce using rule 42 (term -> WORD .)
    MUL             reduce using rule 42 (term -> WORD .)
    DIV             reduce using rule 42 (term -> WORD .)
    MOD             reduce using rule 42 (term -> WORD .)
    EQUTO           reduce using rule 42 (term -> WORD .)
    NOEQU           reduce using rule 42 (term -> WORD .)
    LESS            reduce using rule 42 (term -> WORD .)
    MORE            reduce using rule 42 (term -> WORD .)
    NEWLINE         reduce using rule 42 (term -> WORD .)
    LPAREN          reduce using rule 42 (term -> WORD .)
    WORD            reduce using rule 42 (term -> WORD .)
    TYPE_A          reduce using rule 42 (term -> WORD .)
    TEXT            reduce using rule 42 (term -> WORD .)
    SO              reduce using rule 42 (term -> WORD .)
    LOOP            reduce using rule 42 (term -> WORD .)
    REPEAT          reduce using rule 42 (term -> WORD .)
    NUM             reduce using rule 42 (term -> WORD .)
    HEX             reduce using rule 42 (term -> WORD .)
    APOS            reduce using rule 42 (term -> WORD .)
    TYPE_H          reduce using rule 42 (term -> WORD .)
    TYPE_N          reduce using rule 42 (term -> WORD .)
    TYPE_S          reduce using rule 42 (term -> WORD .)
    $end            reduce using rule 42 (term -> WORD .)
    RPAREN          reduce using rule 42 (term -> WORD .)
    LSTATE          reduce using rule 42 (term -> WORD .)
    RSTATE          reduce using rule 42 (term -> WORD .)
    COMMA           reduce using rule 42 (term -> WORD .)
    QUOT            reduce using rule 42 (term -> WORD .)
    LARRY           shift and go to state 59


state 56

    (43) term -> arraysh .

    PLUS            reduce using rule 43 (term -> arraysh .)
    MINUS           reduce using rule 43 (term -> arraysh .)
    MUL             reduce using rule 43 (term -> arraysh .)
    DIV             reduce using rule 43 (term -> arraysh .)
    MOD             reduce using rule 43 (term -> arraysh .)
    EQUTO           reduce using rule 43 (term -> arraysh .)
    NOEQU           reduce using rule 43 (term -> arraysh .)
    LESS            reduce using rule 43 (term -> arraysh .)
    MORE            reduce using rule 43 (term -> arraysh .)
    NEWLINE         reduce using rule 43 (term -> arraysh .)
    LPAREN          reduce using rule 43 (term -> arraysh .)
    WORD            reduce using rule 43 (term -> arraysh .)
    TYPE_A          reduce using rule 43 (term -> arraysh .)
    TEXT            reduce using rule 43 (term -> arraysh .)
    SO              reduce using rule 43 (term -> arraysh .)
    LOOP            reduce using rule 43 (term -> arraysh .)
    REPEAT          reduce using rule 43 (term -> arraysh .)
    NUM             reduce using rule 43 (term -> arraysh .)
    HEX             reduce using rule 43 (term -> arraysh .)
    APOS            reduce using rule 43 (term -> arraysh .)
    TYPE_H          reduce using rule 43 (term -> arraysh .)
    TYPE_N          reduce using rule 43 (term -> arraysh .)
    TYPE_S          reduce using rule 43 (term -> arraysh .)
    $end            reduce using rule 43 (term -> arraysh .)
    RPAREN          reduce using rule 43 (term -> arraysh .)
    LSTATE          reduce using rule 43 (term -> arraysh .)
    RSTATE          reduce using rule 43 (term -> arraysh .)
    COMMA           reduce using rule 43 (term -> arraysh .)
    QUOT            reduce using rule 43 (term -> arraysh .)


state 57

    (54) expression -> LPAREN expression . RPAREN
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    RPAREN          shift and go to state 90
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    EQUTO           shift and go to state 39
    NOEQU           shift and go to state 40
    LESS            shift and go to state 41
    MORE            shift and go to state 42


state 58

    (55) exassign -> WORD EQU . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 91
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 59

    (63) arraysh -> WORD LARRY . NUM RARRY
    (64) arraysh -> WORD LARRY . WORD RARRY

    NUM             shift and go to state 93
    WORD            shift and go to state 92


state 60

    (56) exassign -> arraysh EQU . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    arraysh                        shift and go to state 56
    expression                     shift and go to state 94
    term                           shift and go to state 14

state 61

    (61) declare -> typeconst WORD .
    (62) declare -> typeconst WORD . EQU term

    NEWLINE         reduce using rule 61 (declare -> typeconst WORD .)
    MINUS           reduce using rule 61 (declare -> typeconst WORD .)
    LPAREN          reduce using rule 61 (declare -> typeconst WORD .)
    WORD            reduce using rule 61 (declare -> typeconst WORD .)
    TYPE_A          reduce using rule 61 (declare -> typeconst WORD .)
    TEXT            reduce using rule 61 (declare -> typeconst WORD .)
    SO              reduce using rule 61 (declare -> typeconst WORD .)
    LOOP            reduce using rule 61 (declare -> typeconst WORD .)
    REPEAT          reduce using rule 61 (declare -> typeconst WORD .)
    NUM             reduce using rule 61 (declare -> typeconst WORD .)
    HEX             reduce using rule 61 (declare -> typeconst WORD .)
    APOS            reduce using rule 61 (declare -> typeconst WORD .)
    TYPE_H          reduce using rule 61 (declare -> typeconst WORD .)
    TYPE_N          reduce using rule 61 (declare -> typeconst WORD .)
    TYPE_S          reduce using rule 61 (declare -> typeconst WORD .)
    $end            reduce using rule 61 (declare -> typeconst WORD .)
    LSTATE          reduce using rule 61 (declare -> typeconst WORD .)
    RSTATE          reduce using rule 61 (declare -> typeconst WORD .)
    EQU             shift and go to state 95


state 62

    (65) declare -> TYPE_A WORD . EQU LSTATE arrayX RSTATE
    (66) declare -> TYPE_A WORD . LARRY NUM RARRY
    (67) declare -> TYPE_A WORD . LARRY NUM RARRY EQU LSTATE arrayX RSTATE

    EQU             shift and go to state 96
    LARRY           shift and go to state 97


state 63

    (71) exprint -> TEXT LPAREN . expression printMore RPAREN
    (72) exprint -> TEXT LPAREN . QUOT expression QUOT printMore RPAREN
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    QUOT            shift and go to state 99
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 98
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 64

    (18) exif -> SO LPAREN . expression RPAREN LSTATE statement RSTATE
    (19) exif -> SO LPAREN . expression RPAREN NEWLINE LSTATE statement RSTATE
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 100
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 65

    (23) exloop -> LOOP LPAREN . expression RPAREN LSTATE statement RSTATE
    (24) exloop -> LOOP LPAREN . expression RPAREN LSTATE NEWLINE statement RSTATE
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 101
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 66

    (25) exrepeat -> REPEAT LPAREN . expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> REPEAT LPAREN . expression RPAREN NEWLINE LSTATE statement RSTATE
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 102
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 67

    (46) term -> APOS WORD . APOS

    APOS            shift and go to state 103


state 68

    (47) term -> APOS NUM . APOS

    APOS            shift and go to state 104


state 69

    (6) statement -> statement NEWLINE statement .
    (7) statement -> statement NEWLINE statement . NEWLINE
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

  ! shift/reduce conflict for NEWLINE resolved as shift
    MINUS           reduce using rule 6 (statement -> statement NEWLINE statement .)
    LPAREN          reduce using rule 6 (statement -> statement NEWLINE statement .)
    WORD            reduce using rule 6 (statement -> statement NEWLINE statement .)
    TYPE_A          reduce using rule 6 (statement -> statement NEWLINE statement .)
    TEXT            reduce using rule 6 (statement -> statement NEWLINE statement .)
    SO              reduce using rule 6 (statement -> statement NEWLINE statement .)
    LOOP            reduce using rule 6 (statement -> statement NEWLINE statement .)
    REPEAT          reduce using rule 6 (statement -> statement NEWLINE statement .)
    NUM             reduce using rule 6 (statement -> statement NEWLINE statement .)
    HEX             reduce using rule 6 (statement -> statement NEWLINE statement .)
    APOS            reduce using rule 6 (statement -> statement NEWLINE statement .)
    TYPE_H          reduce using rule 6 (statement -> statement NEWLINE statement .)
    TYPE_N          reduce using rule 6 (statement -> statement NEWLINE statement .)
    TYPE_S          reduce using rule 6 (statement -> statement NEWLINE statement .)
    $end            reduce using rule 6 (statement -> statement NEWLINE statement .)
    LSTATE          reduce using rule 6 (statement -> statement NEWLINE statement .)
    RSTATE          reduce using rule 6 (statement -> statement NEWLINE statement .)
    NEWLINE         shift and go to state 105

  ! NEWLINE         [ reduce using rule 6 (statement -> statement NEWLINE statement .) ]


state 70

    (27) expression -> expression PLUS expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    PLUS            reduce using rule 27 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 27 (expression -> expression PLUS expression .)
    EQUTO           reduce using rule 27 (expression -> expression PLUS expression .)
    NOEQU           reduce using rule 27 (expression -> expression PLUS expression .)
    NEWLINE         reduce using rule 27 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 27 (expression -> expression PLUS expression .)
    WORD            reduce using rule 27 (expression -> expression PLUS expression .)
    TYPE_A          reduce using rule 27 (expression -> expression PLUS expression .)
    TEXT            reduce using rule 27 (expression -> expression PLUS expression .)
    SO              reduce using rule 27 (expression -> expression PLUS expression .)
    LOOP            reduce using rule 27 (expression -> expression PLUS expression .)
    REPEAT          reduce using rule 27 (expression -> expression PLUS expression .)
    NUM             reduce using rule 27 (expression -> expression PLUS expression .)
    HEX             reduce using rule 27 (expression -> expression PLUS expression .)
    APOS            reduce using rule 27 (expression -> expression PLUS expression .)
    TYPE_H          reduce using rule 27 (expression -> expression PLUS expression .)
    TYPE_N          reduce using rule 27 (expression -> expression PLUS expression .)
    TYPE_S          reduce using rule 27 (expression -> expression PLUS expression .)
    $end            reduce using rule 27 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 27 (expression -> expression PLUS expression .)
    LSTATE          reduce using rule 27 (expression -> expression PLUS expression .)
    RSTATE          reduce using rule 27 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 27 (expression -> expression PLUS expression .)
    QUOT            reduce using rule 27 (expression -> expression PLUS expression .)
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    LESS            shift and go to state 41
    MORE            shift and go to state 42

  ! MUL             [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! LESS            [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! MORE            [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! EQUTO           [ shift and go to state 39 ]
  ! NOEQU           [ shift and go to state 40 ]


state 71

    (30) expression -> expression MINUS expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    PLUS            reduce using rule 30 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 30 (expression -> expression MINUS expression .)
    EQUTO           reduce using rule 30 (expression -> expression MINUS expression .)
    NOEQU           reduce using rule 30 (expression -> expression MINUS expression .)
    NEWLINE         reduce using rule 30 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 30 (expression -> expression MINUS expression .)
    WORD            reduce using rule 30 (expression -> expression MINUS expression .)
    TYPE_A          reduce using rule 30 (expression -> expression MINUS expression .)
    TEXT            reduce using rule 30 (expression -> expression MINUS expression .)
    SO              reduce using rule 30 (expression -> expression MINUS expression .)
    LOOP            reduce using rule 30 (expression -> expression MINUS expression .)
    REPEAT          reduce using rule 30 (expression -> expression MINUS expression .)
    NUM             reduce using rule 30 (expression -> expression MINUS expression .)
    HEX             reduce using rule 30 (expression -> expression MINUS expression .)
    APOS            reduce using rule 30 (expression -> expression MINUS expression .)
    TYPE_H          reduce using rule 30 (expression -> expression MINUS expression .)
    TYPE_N          reduce using rule 30 (expression -> expression MINUS expression .)
    TYPE_S          reduce using rule 30 (expression -> expression MINUS expression .)
    $end            reduce using rule 30 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 30 (expression -> expression MINUS expression .)
    LSTATE          reduce using rule 30 (expression -> expression MINUS expression .)
    RSTATE          reduce using rule 30 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 30 (expression -> expression MINUS expression .)
    QUOT            reduce using rule 30 (expression -> expression MINUS expression .)
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    LESS            shift and go to state 41
    MORE            shift and go to state 42

  ! MUL             [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! LESS            [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! MORE            [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! EQUTO           [ shift and go to state 39 ]
  ! NOEQU           [ shift and go to state 40 ]


state 72

    (33) expression -> expression MUL expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    PLUS            reduce using rule 33 (expression -> expression MUL expression .)
    MINUS           reduce using rule 33 (expression -> expression MUL expression .)
    MUL             reduce using rule 33 (expression -> expression MUL expression .)
    DIV             reduce using rule 33 (expression -> expression MUL expression .)
    MOD             reduce using rule 33 (expression -> expression MUL expression .)
    EQUTO           reduce using rule 33 (expression -> expression MUL expression .)
    NOEQU           reduce using rule 33 (expression -> expression MUL expression .)
    NEWLINE         reduce using rule 33 (expression -> expression MUL expression .)
    LPAREN          reduce using rule 33 (expression -> expression MUL expression .)
    WORD            reduce using rule 33 (expression -> expression MUL expression .)
    TYPE_A          reduce using rule 33 (expression -> expression MUL expression .)
    TEXT            reduce using rule 33 (expression -> expression MUL expression .)
    SO              reduce using rule 33 (expression -> expression MUL expression .)
    LOOP            reduce using rule 33 (expression -> expression MUL expression .)
    REPEAT          reduce using rule 33 (expression -> expression MUL expression .)
    NUM             reduce using rule 33 (expression -> expression MUL expression .)
    HEX             reduce using rule 33 (expression -> expression MUL expression .)
    APOS            reduce using rule 33 (expression -> expression MUL expression .)
    TYPE_H          reduce using rule 33 (expression -> expression MUL expression .)
    TYPE_N          reduce using rule 33 (expression -> expression MUL expression .)
    TYPE_S          reduce using rule 33 (expression -> expression MUL expression .)
    $end            reduce using rule 33 (expression -> expression MUL expression .)
    RPAREN          reduce using rule 33 (expression -> expression MUL expression .)
    LSTATE          reduce using rule 33 (expression -> expression MUL expression .)
    RSTATE          reduce using rule 33 (expression -> expression MUL expression .)
    COMMA           reduce using rule 33 (expression -> expression MUL expression .)
    QUOT            reduce using rule 33 (expression -> expression MUL expression .)
    LESS            shift and go to state 41
    MORE            shift and go to state 42

  ! LESS            [ reduce using rule 33 (expression -> expression MUL expression .) ]
  ! MORE            [ reduce using rule 33 (expression -> expression MUL expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! MUL             [ shift and go to state 36 ]
  ! DIV             [ shift and go to state 37 ]
  ! MOD             [ shift and go to state 38 ]
  ! EQUTO           [ shift and go to state 39 ]
  ! NOEQU           [ shift and go to state 40 ]


state 73

    (36) expression -> expression DIV expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    PLUS            reduce using rule 36 (expression -> expression DIV expression .)
    MINUS           reduce using rule 36 (expression -> expression DIV expression .)
    MUL             reduce using rule 36 (expression -> expression DIV expression .)
    DIV             reduce using rule 36 (expression -> expression DIV expression .)
    MOD             reduce using rule 36 (expression -> expression DIV expression .)
    EQUTO           reduce using rule 36 (expression -> expression DIV expression .)
    NOEQU           reduce using rule 36 (expression -> expression DIV expression .)
    NEWLINE         reduce using rule 36 (expression -> expression DIV expression .)
    LPAREN          reduce using rule 36 (expression -> expression DIV expression .)
    WORD            reduce using rule 36 (expression -> expression DIV expression .)
    TYPE_A          reduce using rule 36 (expression -> expression DIV expression .)
    TEXT            reduce using rule 36 (expression -> expression DIV expression .)
    SO              reduce using rule 36 (expression -> expression DIV expression .)
    LOOP            reduce using rule 36 (expression -> expression DIV expression .)
    REPEAT          reduce using rule 36 (expression -> expression DIV expression .)
    NUM             reduce using rule 36 (expression -> expression DIV expression .)
    HEX             reduce using rule 36 (expression -> expression DIV expression .)
    APOS            reduce using rule 36 (expression -> expression DIV expression .)
    TYPE_H          reduce using rule 36 (expression -> expression DIV expression .)
    TYPE_N          reduce using rule 36 (expression -> expression DIV expression .)
    TYPE_S          reduce using rule 36 (expression -> expression DIV expression .)
    $end            reduce using rule 36 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 36 (expression -> expression DIV expression .)
    LSTATE          reduce using rule 36 (expression -> expression DIV expression .)
    RSTATE          reduce using rule 36 (expression -> expression DIV expression .)
    COMMA           reduce using rule 36 (expression -> expression DIV expression .)
    QUOT            reduce using rule 36 (expression -> expression DIV expression .)
    LESS            shift and go to state 41
    MORE            shift and go to state 42

  ! LESS            [ reduce using rule 36 (expression -> expression DIV expression .) ]
  ! MORE            [ reduce using rule 36 (expression -> expression DIV expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! MUL             [ shift and go to state 36 ]
  ! DIV             [ shift and go to state 37 ]
  ! MOD             [ shift and go to state 38 ]
  ! EQUTO           [ shift and go to state 39 ]
  ! NOEQU           [ shift and go to state 40 ]


state 74

    (39) expression -> expression MOD expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    PLUS            reduce using rule 39 (expression -> expression MOD expression .)
    MINUS           reduce using rule 39 (expression -> expression MOD expression .)
    MUL             reduce using rule 39 (expression -> expression MOD expression .)
    DIV             reduce using rule 39 (expression -> expression MOD expression .)
    MOD             reduce using rule 39 (expression -> expression MOD expression .)
    EQUTO           reduce using rule 39 (expression -> expression MOD expression .)
    NOEQU           reduce using rule 39 (expression -> expression MOD expression .)
    NEWLINE         reduce using rule 39 (expression -> expression MOD expression .)
    LPAREN          reduce using rule 39 (expression -> expression MOD expression .)
    WORD            reduce using rule 39 (expression -> expression MOD expression .)
    TYPE_A          reduce using rule 39 (expression -> expression MOD expression .)
    TEXT            reduce using rule 39 (expression -> expression MOD expression .)
    SO              reduce using rule 39 (expression -> expression MOD expression .)
    LOOP            reduce using rule 39 (expression -> expression MOD expression .)
    REPEAT          reduce using rule 39 (expression -> expression MOD expression .)
    NUM             reduce using rule 39 (expression -> expression MOD expression .)
    HEX             reduce using rule 39 (expression -> expression MOD expression .)
    APOS            reduce using rule 39 (expression -> expression MOD expression .)
    TYPE_H          reduce using rule 39 (expression -> expression MOD expression .)
    TYPE_N          reduce using rule 39 (expression -> expression MOD expression .)
    TYPE_S          reduce using rule 39 (expression -> expression MOD expression .)
    $end            reduce using rule 39 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 39 (expression -> expression MOD expression .)
    LSTATE          reduce using rule 39 (expression -> expression MOD expression .)
    RSTATE          reduce using rule 39 (expression -> expression MOD expression .)
    COMMA           reduce using rule 39 (expression -> expression MOD expression .)
    QUOT            reduce using rule 39 (expression -> expression MOD expression .)
    LESS            shift and go to state 41
    MORE            shift and go to state 42

  ! LESS            [ reduce using rule 39 (expression -> expression MOD expression .) ]
  ! MORE            [ reduce using rule 39 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! MUL             [ shift and go to state 36 ]
  ! DIV             [ shift and go to state 37 ]
  ! MOD             [ shift and go to state 38 ]
  ! EQUTO           [ shift and go to state 39 ]
  ! NOEQU           [ shift and go to state 40 ]


state 75

    (57) expression -> expression EQUTO expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for EQUTO resolved as shift
  ! shift/reduce conflict for NOEQU resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for MORE resolved as shift
    NEWLINE         reduce using rule 57 (expression -> expression EQUTO expression .)
    LPAREN          reduce using rule 57 (expression -> expression EQUTO expression .)
    WORD            reduce using rule 57 (expression -> expression EQUTO expression .)
    TYPE_A          reduce using rule 57 (expression -> expression EQUTO expression .)
    TEXT            reduce using rule 57 (expression -> expression EQUTO expression .)
    SO              reduce using rule 57 (expression -> expression EQUTO expression .)
    LOOP            reduce using rule 57 (expression -> expression EQUTO expression .)
    REPEAT          reduce using rule 57 (expression -> expression EQUTO expression .)
    NUM             reduce using rule 57 (expression -> expression EQUTO expression .)
    HEX             reduce using rule 57 (expression -> expression EQUTO expression .)
    APOS            reduce using rule 57 (expression -> expression EQUTO expression .)
    TYPE_H          reduce using rule 57 (expression -> expression EQUTO expression .)
    TYPE_N          reduce using rule 57 (expression -> expression EQUTO expression .)
    TYPE_S          reduce using rule 57 (expression -> expression EQUTO expression .)
    $end            reduce using rule 57 (expression -> expression EQUTO expression .)
    RPAREN          reduce using rule 57 (expression -> expression EQUTO expression .)
    LSTATE          reduce using rule 57 (expression -> expression EQUTO expression .)
    RSTATE          reduce using rule 57 (expression -> expression EQUTO expression .)
    COMMA           reduce using rule 57 (expression -> expression EQUTO expression .)
    QUOT            reduce using rule 57 (expression -> expression EQUTO expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    EQUTO           shift and go to state 39
    NOEQU           shift and go to state 40
    LESS            shift and go to state 41
    MORE            shift and go to state 42

  ! PLUS            [ reduce using rule 57 (expression -> expression EQUTO expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> expression EQUTO expression .) ]
  ! MUL             [ reduce using rule 57 (expression -> expression EQUTO expression .) ]
  ! DIV             [ reduce using rule 57 (expression -> expression EQUTO expression .) ]
  ! MOD             [ reduce using rule 57 (expression -> expression EQUTO expression .) ]
  ! EQUTO           [ reduce using rule 57 (expression -> expression EQUTO expression .) ]
  ! NOEQU           [ reduce using rule 57 (expression -> expression EQUTO expression .) ]
  ! LESS            [ reduce using rule 57 (expression -> expression EQUTO expression .) ]
  ! MORE            [ reduce using rule 57 (expression -> expression EQUTO expression .) ]


state 76

    (58) expression -> expression NOEQU expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for EQUTO resolved as shift
  ! shift/reduce conflict for NOEQU resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for MORE resolved as shift
    NEWLINE         reduce using rule 58 (expression -> expression NOEQU expression .)
    LPAREN          reduce using rule 58 (expression -> expression NOEQU expression .)
    WORD            reduce using rule 58 (expression -> expression NOEQU expression .)
    TYPE_A          reduce using rule 58 (expression -> expression NOEQU expression .)
    TEXT            reduce using rule 58 (expression -> expression NOEQU expression .)
    SO              reduce using rule 58 (expression -> expression NOEQU expression .)
    LOOP            reduce using rule 58 (expression -> expression NOEQU expression .)
    REPEAT          reduce using rule 58 (expression -> expression NOEQU expression .)
    NUM             reduce using rule 58 (expression -> expression NOEQU expression .)
    HEX             reduce using rule 58 (expression -> expression NOEQU expression .)
    APOS            reduce using rule 58 (expression -> expression NOEQU expression .)
    TYPE_H          reduce using rule 58 (expression -> expression NOEQU expression .)
    TYPE_N          reduce using rule 58 (expression -> expression NOEQU expression .)
    TYPE_S          reduce using rule 58 (expression -> expression NOEQU expression .)
    $end            reduce using rule 58 (expression -> expression NOEQU expression .)
    RPAREN          reduce using rule 58 (expression -> expression NOEQU expression .)
    LSTATE          reduce using rule 58 (expression -> expression NOEQU expression .)
    RSTATE          reduce using rule 58 (expression -> expression NOEQU expression .)
    COMMA           reduce using rule 58 (expression -> expression NOEQU expression .)
    QUOT            reduce using rule 58 (expression -> expression NOEQU expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    EQUTO           shift and go to state 39
    NOEQU           shift and go to state 40
    LESS            shift and go to state 41
    MORE            shift and go to state 42

  ! PLUS            [ reduce using rule 58 (expression -> expression NOEQU expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> expression NOEQU expression .) ]
  ! MUL             [ reduce using rule 58 (expression -> expression NOEQU expression .) ]
  ! DIV             [ reduce using rule 58 (expression -> expression NOEQU expression .) ]
  ! MOD             [ reduce using rule 58 (expression -> expression NOEQU expression .) ]
  ! EQUTO           [ reduce using rule 58 (expression -> expression NOEQU expression .) ]
  ! NOEQU           [ reduce using rule 58 (expression -> expression NOEQU expression .) ]
  ! LESS            [ reduce using rule 58 (expression -> expression NOEQU expression .) ]
  ! MORE            [ reduce using rule 58 (expression -> expression NOEQU expression .) ]


state 77

    (59) expression -> expression LESS expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    PLUS            reduce using rule 59 (expression -> expression LESS expression .)
    MINUS           reduce using rule 59 (expression -> expression LESS expression .)
    MUL             reduce using rule 59 (expression -> expression LESS expression .)
    DIV             reduce using rule 59 (expression -> expression LESS expression .)
    MOD             reduce using rule 59 (expression -> expression LESS expression .)
    EQUTO           reduce using rule 59 (expression -> expression LESS expression .)
    NOEQU           reduce using rule 59 (expression -> expression LESS expression .)
    LESS            reduce using rule 59 (expression -> expression LESS expression .)
    MORE            reduce using rule 59 (expression -> expression LESS expression .)
    NEWLINE         reduce using rule 59 (expression -> expression LESS expression .)
    LPAREN          reduce using rule 59 (expression -> expression LESS expression .)
    WORD            reduce using rule 59 (expression -> expression LESS expression .)
    TYPE_A          reduce using rule 59 (expression -> expression LESS expression .)
    TEXT            reduce using rule 59 (expression -> expression LESS expression .)
    SO              reduce using rule 59 (expression -> expression LESS expression .)
    LOOP            reduce using rule 59 (expression -> expression LESS expression .)
    REPEAT          reduce using rule 59 (expression -> expression LESS expression .)
    NUM             reduce using rule 59 (expression -> expression LESS expression .)
    HEX             reduce using rule 59 (expression -> expression LESS expression .)
    APOS            reduce using rule 59 (expression -> expression LESS expression .)
    TYPE_H          reduce using rule 59 (expression -> expression LESS expression .)
    TYPE_N          reduce using rule 59 (expression -> expression LESS expression .)
    TYPE_S          reduce using rule 59 (expression -> expression LESS expression .)
    $end            reduce using rule 59 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 59 (expression -> expression LESS expression .)
    LSTATE          reduce using rule 59 (expression -> expression LESS expression .)
    RSTATE          reduce using rule 59 (expression -> expression LESS expression .)
    COMMA           reduce using rule 59 (expression -> expression LESS expression .)
    QUOT            reduce using rule 59 (expression -> expression LESS expression .)

  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! MUL             [ shift and go to state 36 ]
  ! DIV             [ shift and go to state 37 ]
  ! MOD             [ shift and go to state 38 ]
  ! EQUTO           [ shift and go to state 39 ]
  ! NOEQU           [ shift and go to state 40 ]
  ! LESS            [ shift and go to state 41 ]
  ! MORE            [ shift and go to state 42 ]


state 78

    (60) expression -> expression MORE expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    PLUS            reduce using rule 60 (expression -> expression MORE expression .)
    MINUS           reduce using rule 60 (expression -> expression MORE expression .)
    MUL             reduce using rule 60 (expression -> expression MORE expression .)
    DIV             reduce using rule 60 (expression -> expression MORE expression .)
    MOD             reduce using rule 60 (expression -> expression MORE expression .)
    EQUTO           reduce using rule 60 (expression -> expression MORE expression .)
    NOEQU           reduce using rule 60 (expression -> expression MORE expression .)
    LESS            reduce using rule 60 (expression -> expression MORE expression .)
    MORE            reduce using rule 60 (expression -> expression MORE expression .)
    NEWLINE         reduce using rule 60 (expression -> expression MORE expression .)
    LPAREN          reduce using rule 60 (expression -> expression MORE expression .)
    WORD            reduce using rule 60 (expression -> expression MORE expression .)
    TYPE_A          reduce using rule 60 (expression -> expression MORE expression .)
    TEXT            reduce using rule 60 (expression -> expression MORE expression .)
    SO              reduce using rule 60 (expression -> expression MORE expression .)
    LOOP            reduce using rule 60 (expression -> expression MORE expression .)
    REPEAT          reduce using rule 60 (expression -> expression MORE expression .)
    NUM             reduce using rule 60 (expression -> expression MORE expression .)
    HEX             reduce using rule 60 (expression -> expression MORE expression .)
    APOS            reduce using rule 60 (expression -> expression MORE expression .)
    TYPE_H          reduce using rule 60 (expression -> expression MORE expression .)
    TYPE_N          reduce using rule 60 (expression -> expression MORE expression .)
    TYPE_S          reduce using rule 60 (expression -> expression MORE expression .)
    $end            reduce using rule 60 (expression -> expression MORE expression .)
    RPAREN          reduce using rule 60 (expression -> expression MORE expression .)
    LSTATE          reduce using rule 60 (expression -> expression MORE expression .)
    RSTATE          reduce using rule 60 (expression -> expression MORE expression .)
    COMMA           reduce using rule 60 (expression -> expression MORE expression .)
    QUOT            reduce using rule 60 (expression -> expression MORE expression .)

  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! MUL             [ shift and go to state 36 ]
  ! DIV             [ shift and go to state 37 ]
  ! MOD             [ shift and go to state 38 ]
  ! EQUTO           [ shift and go to state 39 ]
  ! NOEQU           [ shift and go to state 40 ]
  ! LESS            [ shift and go to state 41 ]
  ! MORE            [ shift and go to state 42 ]


state 79

    (21) exelse -> OTHERWISE LSTATE . statement LSTATE OTHERWISE
    (22) exelse -> OTHERWISE LSTATE . NEWLINE statement RSTATE
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (55) exassign -> . WORD EQU expression
    (56) exassign -> . arraysh EQU expression
    (61) declare -> . typeconst WORD
    (62) declare -> . typeconst WORD EQU term
    (65) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (66) declare -> . TYPE_A WORD LARRY NUM RARRY
    (67) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (71) exprint -> . TEXT LPAREN expression printMore RPAREN
    (72) exprint -> . TEXT LPAREN QUOT expression QUOT printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY
    (48) typeconst -> . TYPE_H
    (49) typeconst -> . TYPE_N
    (50) typeconst -> . TYPE_A
    (51) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 107
    WORD            shift and go to state 44
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 22
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 28
    TYPE_N          shift and go to state 29
    TYPE_S          shift and go to state 30

    statement                      shift and go to state 106
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 45
    typeconst                      shift and go to state 19

state 80

    (28) expression -> term PLUS term .
    (28) expression -> term . PLUS term
    (29) expression -> term . PLUS expression
    (31) expression -> term . MINUS term
    (32) expression -> term . MINUS expression
    (34) expression -> term . MUL term
    (35) expression -> term . MUL expression
    (37) expression -> term . DIV term
    (38) expression -> term . DIV expression
    (40) expression -> term . MOD term
    (41) expression -> term . MOD expression
    (52) expression -> term .

  ! reduce/reduce conflict for PLUS resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for MINUS resolved using rule 28 (expression -> term PLUS term .)
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! reduce/reduce conflict for EQUTO resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for NOEQU resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for LESS resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for MORE resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for LPAREN resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for WORD resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for TYPE_A resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for TEXT resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for SO resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for LOOP resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for REPEAT resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for NUM resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for HEX resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for APOS resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for TYPE_H resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for TYPE_N resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for $end resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for LSTATE resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for RSTATE resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for COMMA resolved using rule 28 (expression -> term PLUS term .)
  ! reduce/reduce conflict for QUOT resolved using rule 28 (expression -> term PLUS term .)
    PLUS            reduce using rule 28 (expression -> term PLUS term .)
    MINUS           reduce using rule 28 (expression -> term PLUS term .)
    EQUTO           reduce using rule 28 (expression -> term PLUS term .)
    NOEQU           reduce using rule 28 (expression -> term PLUS term .)
    LESS            reduce using rule 28 (expression -> term PLUS term .)
    MORE            reduce using rule 28 (expression -> term PLUS term .)
    NEWLINE         reduce using rule 28 (expression -> term PLUS term .)
    LPAREN          reduce using rule 28 (expression -> term PLUS term .)
    WORD            reduce using rule 28 (expression -> term PLUS term .)
    TYPE_A          reduce using rule 28 (expression -> term PLUS term .)
    TEXT            reduce using rule 28 (expression -> term PLUS term .)
    SO              reduce using rule 28 (expression -> term PLUS term .)
    LOOP            reduce using rule 28 (expression -> term PLUS term .)
    REPEAT          reduce using rule 28 (expression -> term PLUS term .)
    NUM             reduce using rule 28 (expression -> term PLUS term .)
    HEX             reduce using rule 28 (expression -> term PLUS term .)
    APOS            reduce using rule 28 (expression -> term PLUS term .)
    TYPE_H          reduce using rule 28 (expression -> term PLUS term .)
    TYPE_N          reduce using rule 28 (expression -> term PLUS term .)
    TYPE_S          reduce using rule 28 (expression -> term PLUS term .)
    $end            reduce using rule 28 (expression -> term PLUS term .)
    RPAREN          reduce using rule 28 (expression -> term PLUS term .)
    LSTATE          reduce using rule 28 (expression -> term PLUS term .)
    RSTATE          reduce using rule 28 (expression -> term PLUS term .)
    COMMA           reduce using rule 28 (expression -> term PLUS term .)
    QUOT            reduce using rule 28 (expression -> term PLUS term .)
    MUL             shift and go to state 51
    DIV             shift and go to state 52
    MOD             shift and go to state 53

  ! MUL             [ reduce using rule 28 (expression -> term PLUS term .) ]
  ! DIV             [ reduce using rule 28 (expression -> term PLUS term .) ]
  ! MOD             [ reduce using rule 28 (expression -> term PLUS term .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]
  ! PLUS            [ reduce using rule 52 (expression -> term .) ]
  ! MINUS           [ reduce using rule 52 (expression -> term .) ]
  ! MUL             [ reduce using rule 52 (expression -> term .) ]
  ! DIV             [ reduce using rule 52 (expression -> term .) ]
  ! MOD             [ reduce using rule 52 (expression -> term .) ]
  ! EQUTO           [ reduce using rule 52 (expression -> term .) ]
  ! NOEQU           [ reduce using rule 52 (expression -> term .) ]
  ! LESS            [ reduce using rule 52 (expression -> term .) ]
  ! MORE            [ reduce using rule 52 (expression -> term .) ]
  ! NEWLINE         [ reduce using rule 52 (expression -> term .) ]
  ! LPAREN          [ reduce using rule 52 (expression -> term .) ]
  ! WORD            [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_A          [ reduce using rule 52 (expression -> term .) ]
  ! TEXT            [ reduce using rule 52 (expression -> term .) ]
  ! SO              [ reduce using rule 52 (expression -> term .) ]
  ! LOOP            [ reduce using rule 52 (expression -> term .) ]
  ! REPEAT          [ reduce using rule 52 (expression -> term .) ]
  ! NUM             [ reduce using rule 52 (expression -> term .) ]
  ! HEX             [ reduce using rule 52 (expression -> term .) ]
  ! APOS            [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_H          [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_N          [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_S          [ reduce using rule 52 (expression -> term .) ]
  ! $end            [ reduce using rule 52 (expression -> term .) ]
  ! RPAREN          [ reduce using rule 52 (expression -> term .) ]
  ! LSTATE          [ reduce using rule 52 (expression -> term .) ]
  ! RSTATE          [ reduce using rule 52 (expression -> term .) ]
  ! COMMA           [ reduce using rule 52 (expression -> term .) ]
  ! QUOT            [ reduce using rule 52 (expression -> term .) ]


state 81

    (29) expression -> term PLUS expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    PLUS            reduce using rule 29 (expression -> term PLUS expression .)
    MINUS           reduce using rule 29 (expression -> term PLUS expression .)
    EQUTO           reduce using rule 29 (expression -> term PLUS expression .)
    NOEQU           reduce using rule 29 (expression -> term PLUS expression .)
    NEWLINE         reduce using rule 29 (expression -> term PLUS expression .)
    LPAREN          reduce using rule 29 (expression -> term PLUS expression .)
    WORD            reduce using rule 29 (expression -> term PLUS expression .)
    TYPE_A          reduce using rule 29 (expression -> term PLUS expression .)
    TEXT            reduce using rule 29 (expression -> term PLUS expression .)
    SO              reduce using rule 29 (expression -> term PLUS expression .)
    LOOP            reduce using rule 29 (expression -> term PLUS expression .)
    REPEAT          reduce using rule 29 (expression -> term PLUS expression .)
    NUM             reduce using rule 29 (expression -> term PLUS expression .)
    HEX             reduce using rule 29 (expression -> term PLUS expression .)
    APOS            reduce using rule 29 (expression -> term PLUS expression .)
    TYPE_H          reduce using rule 29 (expression -> term PLUS expression .)
    TYPE_N          reduce using rule 29 (expression -> term PLUS expression .)
    TYPE_S          reduce using rule 29 (expression -> term PLUS expression .)
    $end            reduce using rule 29 (expression -> term PLUS expression .)
    RPAREN          reduce using rule 29 (expression -> term PLUS expression .)
    LSTATE          reduce using rule 29 (expression -> term PLUS expression .)
    RSTATE          reduce using rule 29 (expression -> term PLUS expression .)
    COMMA           reduce using rule 29 (expression -> term PLUS expression .)
    QUOT            reduce using rule 29 (expression -> term PLUS expression .)
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    LESS            shift and go to state 41
    MORE            shift and go to state 42

  ! MUL             [ reduce using rule 29 (expression -> term PLUS expression .) ]
  ! DIV             [ reduce using rule 29 (expression -> term PLUS expression .) ]
  ! MOD             [ reduce using rule 29 (expression -> term PLUS expression .) ]
  ! LESS            [ reduce using rule 29 (expression -> term PLUS expression .) ]
  ! MORE            [ reduce using rule 29 (expression -> term PLUS expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! EQUTO           [ shift and go to state 39 ]
  ! NOEQU           [ shift and go to state 40 ]


state 82

    (31) expression -> term MINUS term .
    (28) expression -> term . PLUS term
    (29) expression -> term . PLUS expression
    (31) expression -> term . MINUS term
    (32) expression -> term . MINUS expression
    (34) expression -> term . MUL term
    (35) expression -> term . MUL expression
    (37) expression -> term . DIV term
    (38) expression -> term . DIV expression
    (40) expression -> term . MOD term
    (41) expression -> term . MOD expression
    (52) expression -> term .

  ! reduce/reduce conflict for PLUS resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for MINUS resolved using rule 31 (expression -> term MINUS term .)
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! reduce/reduce conflict for EQUTO resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for NOEQU resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for LESS resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for MORE resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for LPAREN resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for WORD resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for TYPE_A resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for TEXT resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for SO resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for LOOP resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for REPEAT resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for NUM resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for HEX resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for APOS resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for TYPE_H resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for TYPE_N resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for $end resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for LSTATE resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for RSTATE resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for COMMA resolved using rule 31 (expression -> term MINUS term .)
  ! reduce/reduce conflict for QUOT resolved using rule 31 (expression -> term MINUS term .)
    PLUS            reduce using rule 31 (expression -> term MINUS term .)
    MINUS           reduce using rule 31 (expression -> term MINUS term .)
    EQUTO           reduce using rule 31 (expression -> term MINUS term .)
    NOEQU           reduce using rule 31 (expression -> term MINUS term .)
    LESS            reduce using rule 31 (expression -> term MINUS term .)
    MORE            reduce using rule 31 (expression -> term MINUS term .)
    NEWLINE         reduce using rule 31 (expression -> term MINUS term .)
    LPAREN          reduce using rule 31 (expression -> term MINUS term .)
    WORD            reduce using rule 31 (expression -> term MINUS term .)
    TYPE_A          reduce using rule 31 (expression -> term MINUS term .)
    TEXT            reduce using rule 31 (expression -> term MINUS term .)
    SO              reduce using rule 31 (expression -> term MINUS term .)
    LOOP            reduce using rule 31 (expression -> term MINUS term .)
    REPEAT          reduce using rule 31 (expression -> term MINUS term .)
    NUM             reduce using rule 31 (expression -> term MINUS term .)
    HEX             reduce using rule 31 (expression -> term MINUS term .)
    APOS            reduce using rule 31 (expression -> term MINUS term .)
    TYPE_H          reduce using rule 31 (expression -> term MINUS term .)
    TYPE_N          reduce using rule 31 (expression -> term MINUS term .)
    TYPE_S          reduce using rule 31 (expression -> term MINUS term .)
    $end            reduce using rule 31 (expression -> term MINUS term .)
    RPAREN          reduce using rule 31 (expression -> term MINUS term .)
    LSTATE          reduce using rule 31 (expression -> term MINUS term .)
    RSTATE          reduce using rule 31 (expression -> term MINUS term .)
    COMMA           reduce using rule 31 (expression -> term MINUS term .)
    QUOT            reduce using rule 31 (expression -> term MINUS term .)
    MUL             shift and go to state 51
    DIV             shift and go to state 52
    MOD             shift and go to state 53

  ! MUL             [ reduce using rule 31 (expression -> term MINUS term .) ]
  ! DIV             [ reduce using rule 31 (expression -> term MINUS term .) ]
  ! MOD             [ reduce using rule 31 (expression -> term MINUS term .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]
  ! PLUS            [ reduce using rule 52 (expression -> term .) ]
  ! MINUS           [ reduce using rule 52 (expression -> term .) ]
  ! MUL             [ reduce using rule 52 (expression -> term .) ]
  ! DIV             [ reduce using rule 52 (expression -> term .) ]
  ! MOD             [ reduce using rule 52 (expression -> term .) ]
  ! EQUTO           [ reduce using rule 52 (expression -> term .) ]
  ! NOEQU           [ reduce using rule 52 (expression -> term .) ]
  ! LESS            [ reduce using rule 52 (expression -> term .) ]
  ! MORE            [ reduce using rule 52 (expression -> term .) ]
  ! NEWLINE         [ reduce using rule 52 (expression -> term .) ]
  ! LPAREN          [ reduce using rule 52 (expression -> term .) ]
  ! WORD            [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_A          [ reduce using rule 52 (expression -> term .) ]
  ! TEXT            [ reduce using rule 52 (expression -> term .) ]
  ! SO              [ reduce using rule 52 (expression -> term .) ]
  ! LOOP            [ reduce using rule 52 (expression -> term .) ]
  ! REPEAT          [ reduce using rule 52 (expression -> term .) ]
  ! NUM             [ reduce using rule 52 (expression -> term .) ]
  ! HEX             [ reduce using rule 52 (expression -> term .) ]
  ! APOS            [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_H          [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_N          [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_S          [ reduce using rule 52 (expression -> term .) ]
  ! $end            [ reduce using rule 52 (expression -> term .) ]
  ! RPAREN          [ reduce using rule 52 (expression -> term .) ]
  ! LSTATE          [ reduce using rule 52 (expression -> term .) ]
  ! RSTATE          [ reduce using rule 52 (expression -> term .) ]
  ! COMMA           [ reduce using rule 52 (expression -> term .) ]
  ! QUOT            [ reduce using rule 52 (expression -> term .) ]


state 83

    (32) expression -> term MINUS expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    PLUS            reduce using rule 32 (expression -> term MINUS expression .)
    MINUS           reduce using rule 32 (expression -> term MINUS expression .)
    EQUTO           reduce using rule 32 (expression -> term MINUS expression .)
    NOEQU           reduce using rule 32 (expression -> term MINUS expression .)
    NEWLINE         reduce using rule 32 (expression -> term MINUS expression .)
    LPAREN          reduce using rule 32 (expression -> term MINUS expression .)
    WORD            reduce using rule 32 (expression -> term MINUS expression .)
    TYPE_A          reduce using rule 32 (expression -> term MINUS expression .)
    TEXT            reduce using rule 32 (expression -> term MINUS expression .)
    SO              reduce using rule 32 (expression -> term MINUS expression .)
    LOOP            reduce using rule 32 (expression -> term MINUS expression .)
    REPEAT          reduce using rule 32 (expression -> term MINUS expression .)
    NUM             reduce using rule 32 (expression -> term MINUS expression .)
    HEX             reduce using rule 32 (expression -> term MINUS expression .)
    APOS            reduce using rule 32 (expression -> term MINUS expression .)
    TYPE_H          reduce using rule 32 (expression -> term MINUS expression .)
    TYPE_N          reduce using rule 32 (expression -> term MINUS expression .)
    TYPE_S          reduce using rule 32 (expression -> term MINUS expression .)
    $end            reduce using rule 32 (expression -> term MINUS expression .)
    RPAREN          reduce using rule 32 (expression -> term MINUS expression .)
    LSTATE          reduce using rule 32 (expression -> term MINUS expression .)
    RSTATE          reduce using rule 32 (expression -> term MINUS expression .)
    COMMA           reduce using rule 32 (expression -> term MINUS expression .)
    QUOT            reduce using rule 32 (expression -> term MINUS expression .)
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    LESS            shift and go to state 41
    MORE            shift and go to state 42

  ! MUL             [ reduce using rule 32 (expression -> term MINUS expression .) ]
  ! DIV             [ reduce using rule 32 (expression -> term MINUS expression .) ]
  ! MOD             [ reduce using rule 32 (expression -> term MINUS expression .) ]
  ! LESS            [ reduce using rule 32 (expression -> term MINUS expression .) ]
  ! MORE            [ reduce using rule 32 (expression -> term MINUS expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! EQUTO           [ shift and go to state 39 ]
  ! NOEQU           [ shift and go to state 40 ]


state 84

    (34) expression -> term MUL term .
    (28) expression -> term . PLUS term
    (29) expression -> term . PLUS expression
    (31) expression -> term . MINUS term
    (32) expression -> term . MINUS expression
    (34) expression -> term . MUL term
    (35) expression -> term . MUL expression
    (37) expression -> term . DIV term
    (38) expression -> term . DIV expression
    (40) expression -> term . MOD term
    (41) expression -> term . MOD expression
    (52) expression -> term .

  ! reduce/reduce conflict for PLUS resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for MINUS resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for MUL resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for DIV resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for MOD resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for EQUTO resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for NOEQU resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for LESS resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for MORE resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for LPAREN resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for WORD resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for TYPE_A resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for TEXT resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for SO resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for LOOP resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for REPEAT resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for NUM resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for HEX resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for APOS resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for TYPE_H resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for TYPE_N resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for $end resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for LSTATE resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for RSTATE resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for COMMA resolved using rule 34 (expression -> term MUL term .)
  ! reduce/reduce conflict for QUOT resolved using rule 34 (expression -> term MUL term .)
    PLUS            reduce using rule 34 (expression -> term MUL term .)
    MINUS           reduce using rule 34 (expression -> term MUL term .)
    MUL             reduce using rule 34 (expression -> term MUL term .)
    DIV             reduce using rule 34 (expression -> term MUL term .)
    MOD             reduce using rule 34 (expression -> term MUL term .)
    EQUTO           reduce using rule 34 (expression -> term MUL term .)
    NOEQU           reduce using rule 34 (expression -> term MUL term .)
    LESS            reduce using rule 34 (expression -> term MUL term .)
    MORE            reduce using rule 34 (expression -> term MUL term .)
    NEWLINE         reduce using rule 34 (expression -> term MUL term .)
    LPAREN          reduce using rule 34 (expression -> term MUL term .)
    WORD            reduce using rule 34 (expression -> term MUL term .)
    TYPE_A          reduce using rule 34 (expression -> term MUL term .)
    TEXT            reduce using rule 34 (expression -> term MUL term .)
    SO              reduce using rule 34 (expression -> term MUL term .)
    LOOP            reduce using rule 34 (expression -> term MUL term .)
    REPEAT          reduce using rule 34 (expression -> term MUL term .)
    NUM             reduce using rule 34 (expression -> term MUL term .)
    HEX             reduce using rule 34 (expression -> term MUL term .)
    APOS            reduce using rule 34 (expression -> term MUL term .)
    TYPE_H          reduce using rule 34 (expression -> term MUL term .)
    TYPE_N          reduce using rule 34 (expression -> term MUL term .)
    TYPE_S          reduce using rule 34 (expression -> term MUL term .)
    $end            reduce using rule 34 (expression -> term MUL term .)
    RPAREN          reduce using rule 34 (expression -> term MUL term .)
    LSTATE          reduce using rule 34 (expression -> term MUL term .)
    RSTATE          reduce using rule 34 (expression -> term MUL term .)
    COMMA           reduce using rule 34 (expression -> term MUL term .)
    QUOT            reduce using rule 34 (expression -> term MUL term .)

  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]
  ! MUL             [ shift and go to state 51 ]
  ! DIV             [ shift and go to state 52 ]
  ! MOD             [ shift and go to state 53 ]
  ! PLUS            [ reduce using rule 52 (expression -> term .) ]
  ! MINUS           [ reduce using rule 52 (expression -> term .) ]
  ! MUL             [ reduce using rule 52 (expression -> term .) ]
  ! DIV             [ reduce using rule 52 (expression -> term .) ]
  ! MOD             [ reduce using rule 52 (expression -> term .) ]
  ! EQUTO           [ reduce using rule 52 (expression -> term .) ]
  ! NOEQU           [ reduce using rule 52 (expression -> term .) ]
  ! LESS            [ reduce using rule 52 (expression -> term .) ]
  ! MORE            [ reduce using rule 52 (expression -> term .) ]
  ! NEWLINE         [ reduce using rule 52 (expression -> term .) ]
  ! LPAREN          [ reduce using rule 52 (expression -> term .) ]
  ! WORD            [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_A          [ reduce using rule 52 (expression -> term .) ]
  ! TEXT            [ reduce using rule 52 (expression -> term .) ]
  ! SO              [ reduce using rule 52 (expression -> term .) ]
  ! LOOP            [ reduce using rule 52 (expression -> term .) ]
  ! REPEAT          [ reduce using rule 52 (expression -> term .) ]
  ! NUM             [ reduce using rule 52 (expression -> term .) ]
  ! HEX             [ reduce using rule 52 (expression -> term .) ]
  ! APOS            [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_H          [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_N          [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_S          [ reduce using rule 52 (expression -> term .) ]
  ! $end            [ reduce using rule 52 (expression -> term .) ]
  ! RPAREN          [ reduce using rule 52 (expression -> term .) ]
  ! LSTATE          [ reduce using rule 52 (expression -> term .) ]
  ! RSTATE          [ reduce using rule 52 (expression -> term .) ]
  ! COMMA           [ reduce using rule 52 (expression -> term .) ]
  ! QUOT            [ reduce using rule 52 (expression -> term .) ]


state 85

    (35) expression -> term MUL expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    PLUS            reduce using rule 35 (expression -> term MUL expression .)
    MINUS           reduce using rule 35 (expression -> term MUL expression .)
    MUL             reduce using rule 35 (expression -> term MUL expression .)
    DIV             reduce using rule 35 (expression -> term MUL expression .)
    MOD             reduce using rule 35 (expression -> term MUL expression .)
    EQUTO           reduce using rule 35 (expression -> term MUL expression .)
    NOEQU           reduce using rule 35 (expression -> term MUL expression .)
    NEWLINE         reduce using rule 35 (expression -> term MUL expression .)
    LPAREN          reduce using rule 35 (expression -> term MUL expression .)
    WORD            reduce using rule 35 (expression -> term MUL expression .)
    TYPE_A          reduce using rule 35 (expression -> term MUL expression .)
    TEXT            reduce using rule 35 (expression -> term MUL expression .)
    SO              reduce using rule 35 (expression -> term MUL expression .)
    LOOP            reduce using rule 35 (expression -> term MUL expression .)
    REPEAT          reduce using rule 35 (expression -> term MUL expression .)
    NUM             reduce using rule 35 (expression -> term MUL expression .)
    HEX             reduce using rule 35 (expression -> term MUL expression .)
    APOS            reduce using rule 35 (expression -> term MUL expression .)
    TYPE_H          reduce using rule 35 (expression -> term MUL expression .)
    TYPE_N          reduce using rule 35 (expression -> term MUL expression .)
    TYPE_S          reduce using rule 35 (expression -> term MUL expression .)
    $end            reduce using rule 35 (expression -> term MUL expression .)
    RPAREN          reduce using rule 35 (expression -> term MUL expression .)
    LSTATE          reduce using rule 35 (expression -> term MUL expression .)
    RSTATE          reduce using rule 35 (expression -> term MUL expression .)
    COMMA           reduce using rule 35 (expression -> term MUL expression .)
    QUOT            reduce using rule 35 (expression -> term MUL expression .)
    LESS            shift and go to state 41
    MORE            shift and go to state 42

  ! LESS            [ reduce using rule 35 (expression -> term MUL expression .) ]
  ! MORE            [ reduce using rule 35 (expression -> term MUL expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! MUL             [ shift and go to state 36 ]
  ! DIV             [ shift and go to state 37 ]
  ! MOD             [ shift and go to state 38 ]
  ! EQUTO           [ shift and go to state 39 ]
  ! NOEQU           [ shift and go to state 40 ]


state 86

    (37) expression -> term DIV term .
    (28) expression -> term . PLUS term
    (29) expression -> term . PLUS expression
    (31) expression -> term . MINUS term
    (32) expression -> term . MINUS expression
    (34) expression -> term . MUL term
    (35) expression -> term . MUL expression
    (37) expression -> term . DIV term
    (38) expression -> term . DIV expression
    (40) expression -> term . MOD term
    (41) expression -> term . MOD expression
    (52) expression -> term .

  ! reduce/reduce conflict for PLUS resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for MINUS resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for MUL resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for DIV resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for MOD resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for EQUTO resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for NOEQU resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for LESS resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for MORE resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for LPAREN resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for WORD resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for TYPE_A resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for TEXT resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for SO resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for LOOP resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for REPEAT resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for NUM resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for HEX resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for APOS resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for TYPE_H resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for TYPE_N resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for $end resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for LSTATE resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for RSTATE resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for COMMA resolved using rule 37 (expression -> term DIV term .)
  ! reduce/reduce conflict for QUOT resolved using rule 37 (expression -> term DIV term .)
    PLUS            reduce using rule 37 (expression -> term DIV term .)
    MINUS           reduce using rule 37 (expression -> term DIV term .)
    MUL             reduce using rule 37 (expression -> term DIV term .)
    DIV             reduce using rule 37 (expression -> term DIV term .)
    MOD             reduce using rule 37 (expression -> term DIV term .)
    EQUTO           reduce using rule 37 (expression -> term DIV term .)
    NOEQU           reduce using rule 37 (expression -> term DIV term .)
    LESS            reduce using rule 37 (expression -> term DIV term .)
    MORE            reduce using rule 37 (expression -> term DIV term .)
    NEWLINE         reduce using rule 37 (expression -> term DIV term .)
    LPAREN          reduce using rule 37 (expression -> term DIV term .)
    WORD            reduce using rule 37 (expression -> term DIV term .)
    TYPE_A          reduce using rule 37 (expression -> term DIV term .)
    TEXT            reduce using rule 37 (expression -> term DIV term .)
    SO              reduce using rule 37 (expression -> term DIV term .)
    LOOP            reduce using rule 37 (expression -> term DIV term .)
    REPEAT          reduce using rule 37 (expression -> term DIV term .)
    NUM             reduce using rule 37 (expression -> term DIV term .)
    HEX             reduce using rule 37 (expression -> term DIV term .)
    APOS            reduce using rule 37 (expression -> term DIV term .)
    TYPE_H          reduce using rule 37 (expression -> term DIV term .)
    TYPE_N          reduce using rule 37 (expression -> term DIV term .)
    TYPE_S          reduce using rule 37 (expression -> term DIV term .)
    $end            reduce using rule 37 (expression -> term DIV term .)
    RPAREN          reduce using rule 37 (expression -> term DIV term .)
    LSTATE          reduce using rule 37 (expression -> term DIV term .)
    RSTATE          reduce using rule 37 (expression -> term DIV term .)
    COMMA           reduce using rule 37 (expression -> term DIV term .)
    QUOT            reduce using rule 37 (expression -> term DIV term .)

  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]
  ! MUL             [ shift and go to state 51 ]
  ! DIV             [ shift and go to state 52 ]
  ! MOD             [ shift and go to state 53 ]
  ! PLUS            [ reduce using rule 52 (expression -> term .) ]
  ! MINUS           [ reduce using rule 52 (expression -> term .) ]
  ! MUL             [ reduce using rule 52 (expression -> term .) ]
  ! DIV             [ reduce using rule 52 (expression -> term .) ]
  ! MOD             [ reduce using rule 52 (expression -> term .) ]
  ! EQUTO           [ reduce using rule 52 (expression -> term .) ]
  ! NOEQU           [ reduce using rule 52 (expression -> term .) ]
  ! LESS            [ reduce using rule 52 (expression -> term .) ]
  ! MORE            [ reduce using rule 52 (expression -> term .) ]
  ! NEWLINE         [ reduce using rule 52 (expression -> term .) ]
  ! LPAREN          [ reduce using rule 52 (expression -> term .) ]
  ! WORD            [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_A          [ reduce using rule 52 (expression -> term .) ]
  ! TEXT            [ reduce using rule 52 (expression -> term .) ]
  ! SO              [ reduce using rule 52 (expression -> term .) ]
  ! LOOP            [ reduce using rule 52 (expression -> term .) ]
  ! REPEAT          [ reduce using rule 52 (expression -> term .) ]
  ! NUM             [ reduce using rule 52 (expression -> term .) ]
  ! HEX             [ reduce using rule 52 (expression -> term .) ]
  ! APOS            [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_H          [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_N          [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_S          [ reduce using rule 52 (expression -> term .) ]
  ! $end            [ reduce using rule 52 (expression -> term .) ]
  ! RPAREN          [ reduce using rule 52 (expression -> term .) ]
  ! LSTATE          [ reduce using rule 52 (expression -> term .) ]
  ! RSTATE          [ reduce using rule 52 (expression -> term .) ]
  ! COMMA           [ reduce using rule 52 (expression -> term .) ]
  ! QUOT            [ reduce using rule 52 (expression -> term .) ]


state 87

    (38) expression -> term DIV expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    PLUS            reduce using rule 38 (expression -> term DIV expression .)
    MINUS           reduce using rule 38 (expression -> term DIV expression .)
    MUL             reduce using rule 38 (expression -> term DIV expression .)
    DIV             reduce using rule 38 (expression -> term DIV expression .)
    MOD             reduce using rule 38 (expression -> term DIV expression .)
    EQUTO           reduce using rule 38 (expression -> term DIV expression .)
    NOEQU           reduce using rule 38 (expression -> term DIV expression .)
    NEWLINE         reduce using rule 38 (expression -> term DIV expression .)
    LPAREN          reduce using rule 38 (expression -> term DIV expression .)
    WORD            reduce using rule 38 (expression -> term DIV expression .)
    TYPE_A          reduce using rule 38 (expression -> term DIV expression .)
    TEXT            reduce using rule 38 (expression -> term DIV expression .)
    SO              reduce using rule 38 (expression -> term DIV expression .)
    LOOP            reduce using rule 38 (expression -> term DIV expression .)
    REPEAT          reduce using rule 38 (expression -> term DIV expression .)
    NUM             reduce using rule 38 (expression -> term DIV expression .)
    HEX             reduce using rule 38 (expression -> term DIV expression .)
    APOS            reduce using rule 38 (expression -> term DIV expression .)
    TYPE_H          reduce using rule 38 (expression -> term DIV expression .)
    TYPE_N          reduce using rule 38 (expression -> term DIV expression .)
    TYPE_S          reduce using rule 38 (expression -> term DIV expression .)
    $end            reduce using rule 38 (expression -> term DIV expression .)
    RPAREN          reduce using rule 38 (expression -> term DIV expression .)
    LSTATE          reduce using rule 38 (expression -> term DIV expression .)
    RSTATE          reduce using rule 38 (expression -> term DIV expression .)
    COMMA           reduce using rule 38 (expression -> term DIV expression .)
    QUOT            reduce using rule 38 (expression -> term DIV expression .)
    LESS            shift and go to state 41
    MORE            shift and go to state 42

  ! LESS            [ reduce using rule 38 (expression -> term DIV expression .) ]
  ! MORE            [ reduce using rule 38 (expression -> term DIV expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! MUL             [ shift and go to state 36 ]
  ! DIV             [ shift and go to state 37 ]
  ! MOD             [ shift and go to state 38 ]
  ! EQUTO           [ shift and go to state 39 ]
  ! NOEQU           [ shift and go to state 40 ]


state 88

    (40) expression -> term MOD term .
    (28) expression -> term . PLUS term
    (29) expression -> term . PLUS expression
    (31) expression -> term . MINUS term
    (32) expression -> term . MINUS expression
    (34) expression -> term . MUL term
    (35) expression -> term . MUL expression
    (37) expression -> term . DIV term
    (38) expression -> term . DIV expression
    (40) expression -> term . MOD term
    (41) expression -> term . MOD expression
    (52) expression -> term .

  ! reduce/reduce conflict for PLUS resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for MUL resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for DIV resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for MOD resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for EQUTO resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for NOEQU resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for LESS resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for MORE resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for LPAREN resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for WORD resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for TYPE_A resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for TEXT resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for SO resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for LOOP resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for REPEAT resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for NUM resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for HEX resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for APOS resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for TYPE_H resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for TYPE_N resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for LSTATE resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for RSTATE resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for COMMA resolved using rule 40 (expression -> term MOD term .)
  ! reduce/reduce conflict for QUOT resolved using rule 40 (expression -> term MOD term .)
    PLUS            reduce using rule 40 (expression -> term MOD term .)
    MINUS           reduce using rule 40 (expression -> term MOD term .)
    MUL             reduce using rule 40 (expression -> term MOD term .)
    DIV             reduce using rule 40 (expression -> term MOD term .)
    MOD             reduce using rule 40 (expression -> term MOD term .)
    EQUTO           reduce using rule 40 (expression -> term MOD term .)
    NOEQU           reduce using rule 40 (expression -> term MOD term .)
    LESS            reduce using rule 40 (expression -> term MOD term .)
    MORE            reduce using rule 40 (expression -> term MOD term .)
    NEWLINE         reduce using rule 40 (expression -> term MOD term .)
    LPAREN          reduce using rule 40 (expression -> term MOD term .)
    WORD            reduce using rule 40 (expression -> term MOD term .)
    TYPE_A          reduce using rule 40 (expression -> term MOD term .)
    TEXT            reduce using rule 40 (expression -> term MOD term .)
    SO              reduce using rule 40 (expression -> term MOD term .)
    LOOP            reduce using rule 40 (expression -> term MOD term .)
    REPEAT          reduce using rule 40 (expression -> term MOD term .)
    NUM             reduce using rule 40 (expression -> term MOD term .)
    HEX             reduce using rule 40 (expression -> term MOD term .)
    APOS            reduce using rule 40 (expression -> term MOD term .)
    TYPE_H          reduce using rule 40 (expression -> term MOD term .)
    TYPE_N          reduce using rule 40 (expression -> term MOD term .)
    TYPE_S          reduce using rule 40 (expression -> term MOD term .)
    $end            reduce using rule 40 (expression -> term MOD term .)
    RPAREN          reduce using rule 40 (expression -> term MOD term .)
    LSTATE          reduce using rule 40 (expression -> term MOD term .)
    RSTATE          reduce using rule 40 (expression -> term MOD term .)
    COMMA           reduce using rule 40 (expression -> term MOD term .)
    QUOT            reduce using rule 40 (expression -> term MOD term .)

  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]
  ! MUL             [ shift and go to state 51 ]
  ! DIV             [ shift and go to state 52 ]
  ! MOD             [ shift and go to state 53 ]
  ! PLUS            [ reduce using rule 52 (expression -> term .) ]
  ! MINUS           [ reduce using rule 52 (expression -> term .) ]
  ! MUL             [ reduce using rule 52 (expression -> term .) ]
  ! DIV             [ reduce using rule 52 (expression -> term .) ]
  ! MOD             [ reduce using rule 52 (expression -> term .) ]
  ! EQUTO           [ reduce using rule 52 (expression -> term .) ]
  ! NOEQU           [ reduce using rule 52 (expression -> term .) ]
  ! LESS            [ reduce using rule 52 (expression -> term .) ]
  ! MORE            [ reduce using rule 52 (expression -> term .) ]
  ! NEWLINE         [ reduce using rule 52 (expression -> term .) ]
  ! LPAREN          [ reduce using rule 52 (expression -> term .) ]
  ! WORD            [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_A          [ reduce using rule 52 (expression -> term .) ]
  ! TEXT            [ reduce using rule 52 (expression -> term .) ]
  ! SO              [ reduce using rule 52 (expression -> term .) ]
  ! LOOP            [ reduce using rule 52 (expression -> term .) ]
  ! REPEAT          [ reduce using rule 52 (expression -> term .) ]
  ! NUM             [ reduce using rule 52 (expression -> term .) ]
  ! HEX             [ reduce using rule 52 (expression -> term .) ]
  ! APOS            [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_H          [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_N          [ reduce using rule 52 (expression -> term .) ]
  ! TYPE_S          [ reduce using rule 52 (expression -> term .) ]
  ! $end            [ reduce using rule 52 (expression -> term .) ]
  ! RPAREN          [ reduce using rule 52 (expression -> term .) ]
  ! LSTATE          [ reduce using rule 52 (expression -> term .) ]
  ! RSTATE          [ reduce using rule 52 (expression -> term .) ]
  ! COMMA           [ reduce using rule 52 (expression -> term .) ]
  ! QUOT            [ reduce using rule 52 (expression -> term .) ]


state 89

    (41) expression -> term MOD expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    PLUS            reduce using rule 41 (expression -> term MOD expression .)
    MINUS           reduce using rule 41 (expression -> term MOD expression .)
    MUL             reduce using rule 41 (expression -> term MOD expression .)
    DIV             reduce using rule 41 (expression -> term MOD expression .)
    MOD             reduce using rule 41 (expression -> term MOD expression .)
    EQUTO           reduce using rule 41 (expression -> term MOD expression .)
    NOEQU           reduce using rule 41 (expression -> term MOD expression .)
    NEWLINE         reduce using rule 41 (expression -> term MOD expression .)
    LPAREN          reduce using rule 41 (expression -> term MOD expression .)
    WORD            reduce using rule 41 (expression -> term MOD expression .)
    TYPE_A          reduce using rule 41 (expression -> term MOD expression .)
    TEXT            reduce using rule 41 (expression -> term MOD expression .)
    SO              reduce using rule 41 (expression -> term MOD expression .)
    LOOP            reduce using rule 41 (expression -> term MOD expression .)
    REPEAT          reduce using rule 41 (expression -> term MOD expression .)
    NUM             reduce using rule 41 (expression -> term MOD expression .)
    HEX             reduce using rule 41 (expression -> term MOD expression .)
    APOS            reduce using rule 41 (expression -> term MOD expression .)
    TYPE_H          reduce using rule 41 (expression -> term MOD expression .)
    TYPE_N          reduce using rule 41 (expression -> term MOD expression .)
    TYPE_S          reduce using rule 41 (expression -> term MOD expression .)
    $end            reduce using rule 41 (expression -> term MOD expression .)
    RPAREN          reduce using rule 41 (expression -> term MOD expression .)
    LSTATE          reduce using rule 41 (expression -> term MOD expression .)
    RSTATE          reduce using rule 41 (expression -> term MOD expression .)
    COMMA           reduce using rule 41 (expression -> term MOD expression .)
    QUOT            reduce using rule 41 (expression -> term MOD expression .)
    LESS            shift and go to state 41
    MORE            shift and go to state 42

  ! LESS            [ reduce using rule 41 (expression -> term MOD expression .) ]
  ! MORE            [ reduce using rule 41 (expression -> term MOD expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! MUL             [ shift and go to state 36 ]
  ! DIV             [ shift and go to state 37 ]
  ! MOD             [ shift and go to state 38 ]
  ! EQUTO           [ shift and go to state 39 ]
  ! NOEQU           [ shift and go to state 40 ]


state 90

    (54) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    MUL             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    EQUTO           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    NOEQU           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    MORE            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    WORD            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    TYPE_A          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    TEXT            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    SO              reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    LOOP            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    REPEAT          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    NUM             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    HEX             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    APOS            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    TYPE_H          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    TYPE_N          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    TYPE_S          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    LSTATE          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    RSTATE          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    QUOT            reduce using rule 54 (expression -> LPAREN expression RPAREN .)


state 91

    (55) exassign -> WORD EQU expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

  ! shift/reduce conflict for MINUS resolved as shift
    NEWLINE         reduce using rule 55 (exassign -> WORD EQU expression .)
    LPAREN          reduce using rule 55 (exassign -> WORD EQU expression .)
    WORD            reduce using rule 55 (exassign -> WORD EQU expression .)
    TYPE_A          reduce using rule 55 (exassign -> WORD EQU expression .)
    TEXT            reduce using rule 55 (exassign -> WORD EQU expression .)
    SO              reduce using rule 55 (exassign -> WORD EQU expression .)
    LOOP            reduce using rule 55 (exassign -> WORD EQU expression .)
    REPEAT          reduce using rule 55 (exassign -> WORD EQU expression .)
    NUM             reduce using rule 55 (exassign -> WORD EQU expression .)
    HEX             reduce using rule 55 (exassign -> WORD EQU expression .)
    APOS            reduce using rule 55 (exassign -> WORD EQU expression .)
    TYPE_H          reduce using rule 55 (exassign -> WORD EQU expression .)
    TYPE_N          reduce using rule 55 (exassign -> WORD EQU expression .)
    TYPE_S          reduce using rule 55 (exassign -> WORD EQU expression .)
    $end            reduce using rule 55 (exassign -> WORD EQU expression .)
    LSTATE          reduce using rule 55 (exassign -> WORD EQU expression .)
    RSTATE          reduce using rule 55 (exassign -> WORD EQU expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    EQUTO           shift and go to state 39
    NOEQU           shift and go to state 40
    LESS            shift and go to state 41
    MORE            shift and go to state 42

  ! MINUS           [ reduce using rule 55 (exassign -> WORD EQU expression .) ]


state 92

    (64) arraysh -> WORD LARRY WORD . RARRY

    RARRY           shift and go to state 108


state 93

    (63) arraysh -> WORD LARRY NUM . RARRY

    RARRY           shift and go to state 109


state 94

    (56) exassign -> arraysh EQU expression .
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

  ! shift/reduce conflict for MINUS resolved as shift
    NEWLINE         reduce using rule 56 (exassign -> arraysh EQU expression .)
    LPAREN          reduce using rule 56 (exassign -> arraysh EQU expression .)
    WORD            reduce using rule 56 (exassign -> arraysh EQU expression .)
    TYPE_A          reduce using rule 56 (exassign -> arraysh EQU expression .)
    TEXT            reduce using rule 56 (exassign -> arraysh EQU expression .)
    SO              reduce using rule 56 (exassign -> arraysh EQU expression .)
    LOOP            reduce using rule 56 (exassign -> arraysh EQU expression .)
    REPEAT          reduce using rule 56 (exassign -> arraysh EQU expression .)
    NUM             reduce using rule 56 (exassign -> arraysh EQU expression .)
    HEX             reduce using rule 56 (exassign -> arraysh EQU expression .)
    APOS            reduce using rule 56 (exassign -> arraysh EQU expression .)
    TYPE_H          reduce using rule 56 (exassign -> arraysh EQU expression .)
    TYPE_N          reduce using rule 56 (exassign -> arraysh EQU expression .)
    TYPE_S          reduce using rule 56 (exassign -> arraysh EQU expression .)
    $end            reduce using rule 56 (exassign -> arraysh EQU expression .)
    LSTATE          reduce using rule 56 (exassign -> arraysh EQU expression .)
    RSTATE          reduce using rule 56 (exassign -> arraysh EQU expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    EQUTO           shift and go to state 39
    NOEQU           shift and go to state 40
    LESS            shift and go to state 41
    MORE            shift and go to state 42

  ! MINUS           [ reduce using rule 56 (exassign -> arraysh EQU expression .) ]


state 95

    (62) declare -> typeconst WORD EQU . term
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    term                           shift and go to state 110
    arraysh                        shift and go to state 56

state 96

    (65) declare -> TYPE_A WORD EQU . LSTATE arrayX RSTATE

    LSTATE          shift and go to state 111


state 97

    (66) declare -> TYPE_A WORD LARRY . NUM RARRY
    (67) declare -> TYPE_A WORD LARRY . NUM RARRY EQU LSTATE arrayX RSTATE

    NUM             shift and go to state 112


state 98

    (71) exprint -> TEXT LPAREN expression . printMore RPAREN
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression
    (73) printMore -> . COMMA expression printMore
    (74) printMore -> . empty empty empty
    (75) printMore -> . COMMA QUOT expression QUOT printMore
    (76) empty -> .

    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    EQUTO           shift and go to state 39
    NOEQU           shift and go to state 40
    LESS            shift and go to state 41
    MORE            shift and go to state 42
    COMMA           shift and go to state 114
    RPAREN          reduce using rule 76 (empty -> .)

    printMore                      shift and go to state 113
    empty                          shift and go to state 115

state 99

    (72) exprint -> TEXT LPAREN QUOT . expression QUOT printMore RPAREN
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 116
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 100

    (18) exif -> SO LPAREN expression . RPAREN LSTATE statement RSTATE
    (19) exif -> SO LPAREN expression . RPAREN NEWLINE LSTATE statement RSTATE
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    RPAREN          shift and go to state 117
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    EQUTO           shift and go to state 39
    NOEQU           shift and go to state 40
    LESS            shift and go to state 41
    MORE            shift and go to state 42


state 101

    (23) exloop -> LOOP LPAREN expression . RPAREN LSTATE statement RSTATE
    (24) exloop -> LOOP LPAREN expression . RPAREN LSTATE NEWLINE statement RSTATE
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    RPAREN          shift and go to state 118
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    EQUTO           shift and go to state 39
    NOEQU           shift and go to state 40
    LESS            shift and go to state 41
    MORE            shift and go to state 42


state 102

    (25) exrepeat -> REPEAT LPAREN expression . RPAREN LSTATE statement RSTATE
    (26) exrepeat -> REPEAT LPAREN expression . RPAREN NEWLINE LSTATE statement RSTATE
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    RPAREN          shift and go to state 119
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    EQUTO           shift and go to state 39
    NOEQU           shift and go to state 40
    LESS            shift and go to state 41
    MORE            shift and go to state 42


state 103

    (46) term -> APOS WORD APOS .

    PLUS            reduce using rule 46 (term -> APOS WORD APOS .)
    MINUS           reduce using rule 46 (term -> APOS WORD APOS .)
    MUL             reduce using rule 46 (term -> APOS WORD APOS .)
    DIV             reduce using rule 46 (term -> APOS WORD APOS .)
    MOD             reduce using rule 46 (term -> APOS WORD APOS .)
    EQUTO           reduce using rule 46 (term -> APOS WORD APOS .)
    NOEQU           reduce using rule 46 (term -> APOS WORD APOS .)
    LESS            reduce using rule 46 (term -> APOS WORD APOS .)
    MORE            reduce using rule 46 (term -> APOS WORD APOS .)
    NEWLINE         reduce using rule 46 (term -> APOS WORD APOS .)
    LPAREN          reduce using rule 46 (term -> APOS WORD APOS .)
    WORD            reduce using rule 46 (term -> APOS WORD APOS .)
    TYPE_A          reduce using rule 46 (term -> APOS WORD APOS .)
    TEXT            reduce using rule 46 (term -> APOS WORD APOS .)
    SO              reduce using rule 46 (term -> APOS WORD APOS .)
    LOOP            reduce using rule 46 (term -> APOS WORD APOS .)
    REPEAT          reduce using rule 46 (term -> APOS WORD APOS .)
    NUM             reduce using rule 46 (term -> APOS WORD APOS .)
    HEX             reduce using rule 46 (term -> APOS WORD APOS .)
    APOS            reduce using rule 46 (term -> APOS WORD APOS .)
    TYPE_H          reduce using rule 46 (term -> APOS WORD APOS .)
    TYPE_N          reduce using rule 46 (term -> APOS WORD APOS .)
    TYPE_S          reduce using rule 46 (term -> APOS WORD APOS .)
    $end            reduce using rule 46 (term -> APOS WORD APOS .)
    RPAREN          reduce using rule 46 (term -> APOS WORD APOS .)
    LSTATE          reduce using rule 46 (term -> APOS WORD APOS .)
    RSTATE          reduce using rule 46 (term -> APOS WORD APOS .)
    COMMA           reduce using rule 46 (term -> APOS WORD APOS .)
    QUOT            reduce using rule 46 (term -> APOS WORD APOS .)


state 104

    (47) term -> APOS NUM APOS .

    PLUS            reduce using rule 47 (term -> APOS NUM APOS .)
    MINUS           reduce using rule 47 (term -> APOS NUM APOS .)
    MUL             reduce using rule 47 (term -> APOS NUM APOS .)
    DIV             reduce using rule 47 (term -> APOS NUM APOS .)
    MOD             reduce using rule 47 (term -> APOS NUM APOS .)
    EQUTO           reduce using rule 47 (term -> APOS NUM APOS .)
    NOEQU           reduce using rule 47 (term -> APOS NUM APOS .)
    LESS            reduce using rule 47 (term -> APOS NUM APOS .)
    MORE            reduce using rule 47 (term -> APOS NUM APOS .)
    NEWLINE         reduce using rule 47 (term -> APOS NUM APOS .)
    LPAREN          reduce using rule 47 (term -> APOS NUM APOS .)
    WORD            reduce using rule 47 (term -> APOS NUM APOS .)
    TYPE_A          reduce using rule 47 (term -> APOS NUM APOS .)
    TEXT            reduce using rule 47 (term -> APOS NUM APOS .)
    SO              reduce using rule 47 (term -> APOS NUM APOS .)
    LOOP            reduce using rule 47 (term -> APOS NUM APOS .)
    REPEAT          reduce using rule 47 (term -> APOS NUM APOS .)
    NUM             reduce using rule 47 (term -> APOS NUM APOS .)
    HEX             reduce using rule 47 (term -> APOS NUM APOS .)
    APOS            reduce using rule 47 (term -> APOS NUM APOS .)
    TYPE_H          reduce using rule 47 (term -> APOS NUM APOS .)
    TYPE_N          reduce using rule 47 (term -> APOS NUM APOS .)
    TYPE_S          reduce using rule 47 (term -> APOS NUM APOS .)
    $end            reduce using rule 47 (term -> APOS NUM APOS .)
    RPAREN          reduce using rule 47 (term -> APOS NUM APOS .)
    LSTATE          reduce using rule 47 (term -> APOS NUM APOS .)
    RSTATE          reduce using rule 47 (term -> APOS NUM APOS .)
    COMMA           reduce using rule 47 (term -> APOS NUM APOS .)
    QUOT            reduce using rule 47 (term -> APOS NUM APOS .)


state 105

    (7) statement -> statement NEWLINE statement NEWLINE .
    (6) statement -> statement NEWLINE . statement
    (7) statement -> statement NEWLINE . statement NEWLINE
    (15) statement -> statement NEWLINE .
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (55) exassign -> . WORD EQU expression
    (56) exassign -> . arraysh EQU expression
    (61) declare -> . typeconst WORD
    (62) declare -> . typeconst WORD EQU term
    (65) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (66) declare -> . TYPE_A WORD LARRY NUM RARRY
    (67) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (71) exprint -> . TEXT LPAREN expression printMore RPAREN
    (72) exprint -> . TEXT LPAREN QUOT expression QUOT printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY
    (48) typeconst -> . TYPE_H
    (49) typeconst -> . TYPE_N
    (50) typeconst -> . TYPE_A
    (51) typeconst -> . TYPE_S

  ! reduce/reduce conflict for NEWLINE resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for MINUS resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for WORD resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for TYPE_A resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for TEXT resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for SO resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for LOOP resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for REPEAT resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for NUM resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for HEX resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for APOS resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for TYPE_H resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for TYPE_N resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for $end resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for LSTATE resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! reduce/reduce conflict for RSTATE resolved using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
  ! shift/reduce conflict for TYPE_A resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SO resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for TYPE_H resolved as shift
  ! shift/reduce conflict for TYPE_N resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
    MINUS           reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
    LPAREN          reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
    NUM             reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
    HEX             reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
    APOS            reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
    $end            reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
    LSTATE          reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
    RSTATE          reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .)
    NEWLINE         shift and go to state 6
    WORD            shift and go to state 44
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 22
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 28
    TYPE_N          shift and go to state 29
    TYPE_S          shift and go to state 30

  ! NEWLINE         [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! WORD            [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! TYPE_A          [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! TEXT            [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! SO              [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! LOOP            [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! REPEAT          [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! TYPE_H          [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! TYPE_N          [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! TYPE_S          [ reduce using rule 7 (statement -> statement NEWLINE statement NEWLINE .) ]
  ! NEWLINE         [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! MINUS           [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! LPAREN          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! WORD            [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TYPE_A          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TEXT            [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! SO              [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! LOOP            [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! REPEAT          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! NUM             [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! HEX             [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! APOS            [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TYPE_H          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TYPE_N          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! TYPE_S          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! $end            [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! LSTATE          [ reduce using rule 15 (statement -> statement NEWLINE .) ]
  ! RSTATE          [ reduce using rule 15 (statement -> statement NEWLINE .) ]

    statement                      shift and go to state 69
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 45
    typeconst                      shift and go to state 19

state 106

    (21) exelse -> OTHERWISE LSTATE statement . LSTATE OTHERWISE
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

    LSTATE          shift and go to state 120
    NEWLINE         shift and go to state 33


state 107

    (22) exelse -> OTHERWISE LSTATE NEWLINE . statement RSTATE
    (16) statement -> NEWLINE . statement
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (55) exassign -> . WORD EQU expression
    (56) exassign -> . arraysh EQU expression
    (61) declare -> . typeconst WORD
    (62) declare -> . typeconst WORD EQU term
    (65) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (66) declare -> . TYPE_A WORD LARRY NUM RARRY
    (67) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (71) exprint -> . TEXT LPAREN expression printMore RPAREN
    (72) exprint -> . TEXT LPAREN QUOT expression QUOT printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY
    (48) typeconst -> . TYPE_H
    (49) typeconst -> . TYPE_N
    (50) typeconst -> . TYPE_A
    (51) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 6
    WORD            shift and go to state 44
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 22
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 28
    TYPE_N          shift and go to state 29
    TYPE_S          shift and go to state 30

    statement                      shift and go to state 121
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 45
    typeconst                      shift and go to state 19

state 108

    (64) arraysh -> WORD LARRY WORD RARRY .

    EQU             reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    PLUS            reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    MINUS           reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    MUL             reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    DIV             reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    MOD             reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    EQUTO           reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    NOEQU           reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    LESS            reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    MORE            reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    NEWLINE         reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    LPAREN          reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    WORD            reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    TYPE_A          reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    TEXT            reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    SO              reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    LOOP            reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    REPEAT          reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    NUM             reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    HEX             reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    APOS            reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    TYPE_H          reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    TYPE_N          reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    TYPE_S          reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    $end            reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    RPAREN          reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    LSTATE          reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    RSTATE          reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    COMMA           reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)
    QUOT            reduce using rule 64 (arraysh -> WORD LARRY WORD RARRY .)


state 109

    (63) arraysh -> WORD LARRY NUM RARRY .

    EQU             reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    PLUS            reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    MINUS           reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    MUL             reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    DIV             reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    MOD             reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    EQUTO           reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    NOEQU           reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    LESS            reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    MORE            reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    NEWLINE         reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    LPAREN          reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    WORD            reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    TYPE_A          reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    TEXT            reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    SO              reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    LOOP            reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    REPEAT          reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    NUM             reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    HEX             reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    APOS            reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    TYPE_H          reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    TYPE_N          reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    TYPE_S          reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    $end            reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    RPAREN          reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    LSTATE          reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    RSTATE          reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    COMMA           reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)
    QUOT            reduce using rule 63 (arraysh -> WORD LARRY NUM RARRY .)


state 110

    (62) declare -> typeconst WORD EQU term .

    NEWLINE         reduce using rule 62 (declare -> typeconst WORD EQU term .)
    MINUS           reduce using rule 62 (declare -> typeconst WORD EQU term .)
    LPAREN          reduce using rule 62 (declare -> typeconst WORD EQU term .)
    WORD            reduce using rule 62 (declare -> typeconst WORD EQU term .)
    TYPE_A          reduce using rule 62 (declare -> typeconst WORD EQU term .)
    TEXT            reduce using rule 62 (declare -> typeconst WORD EQU term .)
    SO              reduce using rule 62 (declare -> typeconst WORD EQU term .)
    LOOP            reduce using rule 62 (declare -> typeconst WORD EQU term .)
    REPEAT          reduce using rule 62 (declare -> typeconst WORD EQU term .)
    NUM             reduce using rule 62 (declare -> typeconst WORD EQU term .)
    HEX             reduce using rule 62 (declare -> typeconst WORD EQU term .)
    APOS            reduce using rule 62 (declare -> typeconst WORD EQU term .)
    TYPE_H          reduce using rule 62 (declare -> typeconst WORD EQU term .)
    TYPE_N          reduce using rule 62 (declare -> typeconst WORD EQU term .)
    TYPE_S          reduce using rule 62 (declare -> typeconst WORD EQU term .)
    $end            reduce using rule 62 (declare -> typeconst WORD EQU term .)
    LSTATE          reduce using rule 62 (declare -> typeconst WORD EQU term .)
    RSTATE          reduce using rule 62 (declare -> typeconst WORD EQU term .)


state 111

    (65) declare -> TYPE_A WORD EQU LSTATE . arrayX RSTATE
    (68) arrayX -> . NUM arrayY

    NUM             shift and go to state 123

    arrayX                         shift and go to state 122

state 112

    (66) declare -> TYPE_A WORD LARRY NUM . RARRY
    (67) declare -> TYPE_A WORD LARRY NUM . RARRY EQU LSTATE arrayX RSTATE

    RARRY           shift and go to state 124


state 113

    (71) exprint -> TEXT LPAREN expression printMore . RPAREN

    RPAREN          shift and go to state 125


state 114

    (73) printMore -> COMMA . expression printMore
    (75) printMore -> COMMA . QUOT expression QUOT printMore
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    QUOT            shift and go to state 127
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 126
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 115

    (74) printMore -> empty . empty empty
    (76) empty -> .

    RPAREN          reduce using rule 76 (empty -> .)

    empty                          shift and go to state 128

state 116

    (72) exprint -> TEXT LPAREN QUOT expression . QUOT printMore RPAREN
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    QUOT            shift and go to state 129
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    EQUTO           shift and go to state 39
    NOEQU           shift and go to state 40
    LESS            shift and go to state 41
    MORE            shift and go to state 42


state 117

    (18) exif -> SO LPAREN expression RPAREN . LSTATE statement RSTATE
    (19) exif -> SO LPAREN expression RPAREN . NEWLINE LSTATE statement RSTATE

    LSTATE          shift and go to state 130
    NEWLINE         shift and go to state 131


state 118

    (23) exloop -> LOOP LPAREN expression RPAREN . LSTATE statement RSTATE
    (24) exloop -> LOOP LPAREN expression RPAREN . LSTATE NEWLINE statement RSTATE

    LSTATE          shift and go to state 132


state 119

    (25) exrepeat -> REPEAT LPAREN expression RPAREN . LSTATE statement RSTATE
    (26) exrepeat -> REPEAT LPAREN expression RPAREN . NEWLINE LSTATE statement RSTATE

    LSTATE          shift and go to state 133
    NEWLINE         shift and go to state 134


state 120

    (21) exelse -> OTHERWISE LSTATE statement LSTATE . OTHERWISE

    OTHERWISE       shift and go to state 135


state 121

    (22) exelse -> OTHERWISE LSTATE NEWLINE statement . RSTATE
    (16) statement -> NEWLINE statement .
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

  ! shift/reduce conflict for NEWLINE resolved as shift
    RSTATE          shift and go to state 136
    LSTATE          reduce using rule 16 (statement -> NEWLINE statement .)
    NEWLINE         shift and go to state 33

  ! NEWLINE         [ reduce using rule 16 (statement -> NEWLINE statement .) ]


state 122

    (65) declare -> TYPE_A WORD EQU LSTATE arrayX . RSTATE

    RSTATE          shift and go to state 137


state 123

    (68) arrayX -> NUM . arrayY
    (69) arrayY -> . COMMA NUM arrayY
    (70) arrayY -> . empty empty empty
    (76) empty -> .

    COMMA           shift and go to state 139
    RSTATE          reduce using rule 76 (empty -> .)

    arrayY                         shift and go to state 138
    empty                          shift and go to state 140

state 124

    (66) declare -> TYPE_A WORD LARRY NUM RARRY .
    (67) declare -> TYPE_A WORD LARRY NUM RARRY . EQU LSTATE arrayX RSTATE

    NEWLINE         reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    MINUS           reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    LPAREN          reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    WORD            reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    TYPE_A          reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    TEXT            reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    SO              reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    LOOP            reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    REPEAT          reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    NUM             reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    HEX             reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    APOS            reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    TYPE_H          reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    TYPE_N          reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    TYPE_S          reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    $end            reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    LSTATE          reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    RSTATE          reduce using rule 66 (declare -> TYPE_A WORD LARRY NUM RARRY .)
    EQU             shift and go to state 141


state 125

    (71) exprint -> TEXT LPAREN expression printMore RPAREN .

    NEWLINE         reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    MINUS           reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    LPAREN          reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    WORD            reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    TYPE_A          reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    TEXT            reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    SO              reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    LOOP            reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    REPEAT          reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    NUM             reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    HEX             reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    APOS            reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    TYPE_H          reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    TYPE_N          reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    TYPE_S          reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    $end            reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    LSTATE          reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)
    RSTATE          reduce using rule 71 (exprint -> TEXT LPAREN expression printMore RPAREN .)


state 126

    (73) printMore -> COMMA expression . printMore
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression
    (73) printMore -> . COMMA expression printMore
    (74) printMore -> . empty empty empty
    (75) printMore -> . COMMA QUOT expression QUOT printMore
    (76) empty -> .

    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    EQUTO           shift and go to state 39
    NOEQU           shift and go to state 40
    LESS            shift and go to state 41
    MORE            shift and go to state 42
    COMMA           shift and go to state 114
    RPAREN          reduce using rule 76 (empty -> .)

    printMore                      shift and go to state 142
    empty                          shift and go to state 115

state 127

    (75) printMore -> COMMA QUOT . expression QUOT printMore
    (27) expression -> . expression PLUS expression
    (28) expression -> . term PLUS term
    (29) expression -> . term PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . term MINUS term
    (32) expression -> . term MINUS expression
    (33) expression -> . expression MUL expression
    (34) expression -> . term MUL term
    (35) expression -> . term MUL expression
    (36) expression -> . expression DIV expression
    (37) expression -> . term DIV term
    (38) expression -> . term DIV expression
    (39) expression -> . expression MOD expression
    (40) expression -> . term MOD term
    (41) expression -> . term MOD expression
    (52) expression -> . term
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (57) expression -> . expression EQUTO expression
    (58) expression -> . expression NOEQU expression
    (59) expression -> . expression LESS expression
    (60) expression -> . expression MORE expression
    (42) term -> . WORD
    (43) term -> . arraysh
    (44) term -> . NUM
    (45) term -> . HEX
    (46) term -> . APOS WORD APOS
    (47) term -> . APOS NUM APOS
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 16
    WORD            shift and go to state 55
    NUM             shift and go to state 21
    HEX             shift and go to state 26
    APOS            shift and go to state 27

    expression                     shift and go to state 143
    term                           shift and go to state 14
    arraysh                        shift and go to state 56

state 128

    (74) printMore -> empty empty . empty
    (76) empty -> .

    RPAREN          reduce using rule 76 (empty -> .)

    empty                          shift and go to state 144

state 129

    (72) exprint -> TEXT LPAREN QUOT expression QUOT . printMore RPAREN
    (73) printMore -> . COMMA expression printMore
    (74) printMore -> . empty empty empty
    (75) printMore -> . COMMA QUOT expression QUOT printMore
    (76) empty -> .

    COMMA           shift and go to state 114
    RPAREN          reduce using rule 76 (empty -> .)

    printMore                      shift and go to state 145
    empty                          shift and go to state 115

state 130

    (18) exif -> SO LPAREN expression RPAREN LSTATE . statement RSTATE
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (55) exassign -> . WORD EQU expression
    (56) exassign -> . arraysh EQU expression
    (61) declare -> . typeconst WORD
    (62) declare -> . typeconst WORD EQU term
    (65) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (66) declare -> . TYPE_A WORD LARRY NUM RARRY
    (67) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (71) exprint -> . TEXT LPAREN expression printMore RPAREN
    (72) exprint -> . TEXT LPAREN QUOT expression QUOT printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY
    (48) typeconst -> . TYPE_H
    (49) typeconst -> . TYPE_N
    (50) typeconst -> . TYPE_A
    (51) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 6
    WORD            shift and go to state 44
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 22
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 28
    TYPE_N          shift and go to state 29
    TYPE_S          shift and go to state 30

    statement                      shift and go to state 146
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 45
    typeconst                      shift and go to state 19

state 131

    (19) exif -> SO LPAREN expression RPAREN NEWLINE . LSTATE statement RSTATE

    LSTATE          shift and go to state 147


state 132

    (23) exloop -> LOOP LPAREN expression RPAREN LSTATE . statement RSTATE
    (24) exloop -> LOOP LPAREN expression RPAREN LSTATE . NEWLINE statement RSTATE
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (55) exassign -> . WORD EQU expression
    (56) exassign -> . arraysh EQU expression
    (61) declare -> . typeconst WORD
    (62) declare -> . typeconst WORD EQU term
    (65) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (66) declare -> . TYPE_A WORD LARRY NUM RARRY
    (67) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (71) exprint -> . TEXT LPAREN expression printMore RPAREN
    (72) exprint -> . TEXT LPAREN QUOT expression QUOT printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY
    (48) typeconst -> . TYPE_H
    (49) typeconst -> . TYPE_N
    (50) typeconst -> . TYPE_A
    (51) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 149
    WORD            shift and go to state 44
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 22
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 28
    TYPE_N          shift and go to state 29
    TYPE_S          shift and go to state 30

    statement                      shift and go to state 148
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 45
    typeconst                      shift and go to state 19

state 133

    (25) exrepeat -> REPEAT LPAREN expression RPAREN LSTATE . statement RSTATE
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (55) exassign -> . WORD EQU expression
    (56) exassign -> . arraysh EQU expression
    (61) declare -> . typeconst WORD
    (62) declare -> . typeconst WORD EQU term
    (65) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (66) declare -> . TYPE_A WORD LARRY NUM RARRY
    (67) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (71) exprint -> . TEXT LPAREN expression printMore RPAREN
    (72) exprint -> . TEXT LPAREN QUOT expression QUOT printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY
    (48) typeconst -> . TYPE_H
    (49) typeconst -> . TYPE_N
    (50) typeconst -> . TYPE_A
    (51) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 6
    WORD            shift and go to state 44
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 22
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 28
    TYPE_N          shift and go to state 29
    TYPE_S          shift and go to state 30

    statement                      shift and go to state 150
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 45
    typeconst                      shift and go to state 19

state 134

    (26) exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE . LSTATE statement RSTATE

    LSTATE          shift and go to state 151


state 135

    (21) exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .

    NEWLINE         reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    MINUS           reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    LPAREN          reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    WORD            reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    TYPE_A          reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    TEXT            reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    SO              reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    LOOP            reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    REPEAT          reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    NUM             reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    HEX             reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    APOS            reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    TYPE_H          reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    TYPE_N          reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    TYPE_S          reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    $end            reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    LSTATE          reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)
    RSTATE          reduce using rule 21 (exelse -> OTHERWISE LSTATE statement LSTATE OTHERWISE .)


state 136

    (22) exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .

    NEWLINE         reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    MINUS           reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    LPAREN          reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    WORD            reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    TYPE_A          reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    TEXT            reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    SO              reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    LOOP            reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    REPEAT          reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    NUM             reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    HEX             reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    APOS            reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    TYPE_H          reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    TYPE_N          reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    TYPE_S          reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    $end            reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    LSTATE          reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)
    RSTATE          reduce using rule 22 (exelse -> OTHERWISE LSTATE NEWLINE statement RSTATE .)


state 137

    (65) declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .

    NEWLINE         reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    MINUS           reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    LPAREN          reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    WORD            reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    TYPE_A          reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    TEXT            reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    SO              reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    LOOP            reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    REPEAT          reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    NUM             reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    HEX             reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    APOS            reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    TYPE_H          reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    TYPE_N          reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    TYPE_S          reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    $end            reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    LSTATE          reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)
    RSTATE          reduce using rule 65 (declare -> TYPE_A WORD EQU LSTATE arrayX RSTATE .)


state 138

    (68) arrayX -> NUM arrayY .

    RSTATE          reduce using rule 68 (arrayX -> NUM arrayY .)


state 139

    (69) arrayY -> COMMA . NUM arrayY

    NUM             shift and go to state 152


state 140

    (70) arrayY -> empty . empty empty
    (76) empty -> .

    RSTATE          reduce using rule 76 (empty -> .)

    empty                          shift and go to state 153

state 141

    (67) declare -> TYPE_A WORD LARRY NUM RARRY EQU . LSTATE arrayX RSTATE

    LSTATE          shift and go to state 154


state 142

    (73) printMore -> COMMA expression printMore .

    RPAREN          reduce using rule 73 (printMore -> COMMA expression printMore .)


state 143

    (75) printMore -> COMMA QUOT expression . QUOT printMore
    (27) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (33) expression -> expression . MUL expression
    (36) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (57) expression -> expression . EQUTO expression
    (58) expression -> expression . NOEQU expression
    (59) expression -> expression . LESS expression
    (60) expression -> expression . MORE expression

    QUOT            shift and go to state 155
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38
    EQUTO           shift and go to state 39
    NOEQU           shift and go to state 40
    LESS            shift and go to state 41
    MORE            shift and go to state 42


state 144

    (74) printMore -> empty empty empty .

    RPAREN          reduce using rule 74 (printMore -> empty empty empty .)


state 145

    (72) exprint -> TEXT LPAREN QUOT expression QUOT printMore . RPAREN

    RPAREN          shift and go to state 156


state 146

    (18) exif -> SO LPAREN expression RPAREN LSTATE statement . RSTATE
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

    RSTATE          shift and go to state 157
    NEWLINE         shift and go to state 33


state 147

    (19) exif -> SO LPAREN expression RPAREN NEWLINE LSTATE . statement RSTATE
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (55) exassign -> . WORD EQU expression
    (56) exassign -> . arraysh EQU expression
    (61) declare -> . typeconst WORD
    (62) declare -> . typeconst WORD EQU term
    (65) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (66) declare -> . TYPE_A WORD LARRY NUM RARRY
    (67) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (71) exprint -> . TEXT LPAREN expression printMore RPAREN
    (72) exprint -> . TEXT LPAREN QUOT expression QUOT printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY
    (48) typeconst -> . TYPE_H
    (49) typeconst -> . TYPE_N
    (50) typeconst -> . TYPE_A
    (51) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 6
    WORD            shift and go to state 44
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 22
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 28
    TYPE_N          shift and go to state 29
    TYPE_S          shift and go to state 30

    statement                      shift and go to state 158
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 45
    typeconst                      shift and go to state 19

state 148

    (23) exloop -> LOOP LPAREN expression RPAREN LSTATE statement . RSTATE
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

    RSTATE          shift and go to state 159
    NEWLINE         shift and go to state 33


state 149

    (24) exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE . statement RSTATE
    (16) statement -> NEWLINE . statement
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (55) exassign -> . WORD EQU expression
    (56) exassign -> . arraysh EQU expression
    (61) declare -> . typeconst WORD
    (62) declare -> . typeconst WORD EQU term
    (65) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (66) declare -> . TYPE_A WORD LARRY NUM RARRY
    (67) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (71) exprint -> . TEXT LPAREN expression printMore RPAREN
    (72) exprint -> . TEXT LPAREN QUOT expression QUOT printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY
    (48) typeconst -> . TYPE_H
    (49) typeconst -> . TYPE_N
    (50) typeconst -> . TYPE_A
    (51) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 6
    WORD            shift and go to state 44
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 22
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 28
    TYPE_N          shift and go to state 29
    TYPE_S          shift and go to state 30

    statement                      shift and go to state 160
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 45
    typeconst                      shift and go to state 19

state 150

    (25) exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement . RSTATE
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

    RSTATE          shift and go to state 161
    NEWLINE         shift and go to state 33


state 151

    (26) exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE . statement RSTATE
    (6) statement -> . statement NEWLINE statement
    (7) statement -> . statement NEWLINE statement NEWLINE
    (8) statement -> . exassign
    (9) statement -> . declare
    (10) statement -> . exprint
    (11) statement -> . exif
    (12) statement -> . exelif
    (13) statement -> . exloop
    (14) statement -> . exrepeat
    (15) statement -> . statement NEWLINE
    (16) statement -> . NEWLINE statement
    (17) statement -> . exloop NEWLINE
    (55) exassign -> . WORD EQU expression
    (56) exassign -> . arraysh EQU expression
    (61) declare -> . typeconst WORD
    (62) declare -> . typeconst WORD EQU term
    (65) declare -> . TYPE_A WORD EQU LSTATE arrayX RSTATE
    (66) declare -> . TYPE_A WORD LARRY NUM RARRY
    (67) declare -> . TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE
    (71) exprint -> . TEXT LPAREN expression printMore RPAREN
    (72) exprint -> . TEXT LPAREN QUOT expression QUOT printMore RPAREN
    (18) exif -> . SO LPAREN expression RPAREN LSTATE statement RSTATE
    (19) exif -> . SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (20) exelif -> . exif exelse
    (23) exloop -> . LOOP LPAREN expression RPAREN LSTATE statement RSTATE
    (24) exloop -> . LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE
    (25) exrepeat -> . REPEAT LPAREN expression RPAREN LSTATE statement RSTATE
    (26) exrepeat -> . REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE
    (63) arraysh -> . WORD LARRY NUM RARRY
    (64) arraysh -> . WORD LARRY WORD RARRY
    (48) typeconst -> . TYPE_H
    (49) typeconst -> . TYPE_N
    (50) typeconst -> . TYPE_A
    (51) typeconst -> . TYPE_S

    NEWLINE         shift and go to state 6
    WORD            shift and go to state 44
    TYPE_A          shift and go to state 20
    TEXT            shift and go to state 22
    SO              shift and go to state 23
    LOOP            shift and go to state 24
    REPEAT          shift and go to state 25
    TYPE_H          shift and go to state 28
    TYPE_N          shift and go to state 29
    TYPE_S          shift and go to state 30

    statement                      shift and go to state 162
    exassign                       shift and go to state 7
    declare                        shift and go to state 8
    exprint                        shift and go to state 9
    exif                           shift and go to state 10
    exelif                         shift and go to state 11
    exloop                         shift and go to state 12
    exrepeat                       shift and go to state 13
    arraysh                        shift and go to state 45
    typeconst                      shift and go to state 19

state 152

    (69) arrayY -> COMMA NUM . arrayY
    (69) arrayY -> . COMMA NUM arrayY
    (70) arrayY -> . empty empty empty
    (76) empty -> .

    COMMA           shift and go to state 139
    RSTATE          reduce using rule 76 (empty -> .)

    arrayY                         shift and go to state 163
    empty                          shift and go to state 140

state 153

    (70) arrayY -> empty empty . empty
    (76) empty -> .

    RSTATE          reduce using rule 76 (empty -> .)

    empty                          shift and go to state 164

state 154

    (67) declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE . arrayX RSTATE
    (68) arrayX -> . NUM arrayY

    NUM             shift and go to state 123

    arrayX                         shift and go to state 165

state 155

    (75) printMore -> COMMA QUOT expression QUOT . printMore
    (73) printMore -> . COMMA expression printMore
    (74) printMore -> . empty empty empty
    (75) printMore -> . COMMA QUOT expression QUOT printMore
    (76) empty -> .

    COMMA           shift and go to state 114
    RPAREN          reduce using rule 76 (empty -> .)

    printMore                      shift and go to state 166
    empty                          shift and go to state 115

state 156

    (72) exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .

    NEWLINE         reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)
    MINUS           reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)
    LPAREN          reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)
    WORD            reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)
    TYPE_A          reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)
    TEXT            reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)
    SO              reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)
    LOOP            reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)
    REPEAT          reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)
    NUM             reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)
    HEX             reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)
    APOS            reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)
    TYPE_H          reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)
    TYPE_N          reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)
    TYPE_S          reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)
    $end            reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)
    LSTATE          reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)
    RSTATE          reduce using rule 72 (exprint -> TEXT LPAREN QUOT expression QUOT printMore RPAREN .)


state 157

    (18) exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .

    OTHERWISE       reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    NEWLINE         reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    MINUS           reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    LPAREN          reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    WORD            reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_A          reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    TEXT            reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    SO              reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    LOOP            reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    REPEAT          reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    NUM             reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    HEX             reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    APOS            reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_H          reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_N          reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_S          reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    $end            reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    LSTATE          reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)
    RSTATE          reduce using rule 18 (exif -> SO LPAREN expression RPAREN LSTATE statement RSTATE .)


state 158

    (19) exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement . RSTATE
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

    RSTATE          shift and go to state 167
    NEWLINE         shift and go to state 33


state 159

    (23) exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .

    NEWLINE         reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    MINUS           reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    LPAREN          reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    WORD            reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_A          reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    TEXT            reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    SO              reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    LOOP            reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    REPEAT          reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    NUM             reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    HEX             reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    APOS            reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_H          reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_N          reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_S          reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    $end            reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    LSTATE          reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)
    RSTATE          reduce using rule 23 (exloop -> LOOP LPAREN expression RPAREN LSTATE statement RSTATE .)


state 160

    (24) exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement . RSTATE
    (16) statement -> NEWLINE statement .
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

  ! shift/reduce conflict for RSTATE resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
    RSTATE          shift and go to state 168
    NEWLINE         shift and go to state 33

  ! RSTATE          [ reduce using rule 16 (statement -> NEWLINE statement .) ]
  ! NEWLINE         [ reduce using rule 16 (statement -> NEWLINE statement .) ]


state 161

    (25) exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .

    NEWLINE         reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    MINUS           reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    LPAREN          reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    WORD            reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_A          reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    TEXT            reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    SO              reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    LOOP            reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    REPEAT          reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    NUM             reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    HEX             reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    APOS            reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_H          reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_N          reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    TYPE_S          reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    $end            reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    LSTATE          reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)
    RSTATE          reduce using rule 25 (exrepeat -> REPEAT LPAREN expression RPAREN LSTATE statement RSTATE .)


state 162

    (26) exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement . RSTATE
    (6) statement -> statement . NEWLINE statement
    (7) statement -> statement . NEWLINE statement NEWLINE
    (15) statement -> statement . NEWLINE

    RSTATE          shift and go to state 169
    NEWLINE         shift and go to state 33


state 163

    (69) arrayY -> COMMA NUM arrayY .

    RSTATE          reduce using rule 69 (arrayY -> COMMA NUM arrayY .)


state 164

    (70) arrayY -> empty empty empty .

    RSTATE          reduce using rule 70 (arrayY -> empty empty empty .)


state 165

    (67) declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX . RSTATE

    RSTATE          shift and go to state 170


state 166

    (75) printMore -> COMMA QUOT expression QUOT printMore .

    RPAREN          reduce using rule 75 (printMore -> COMMA QUOT expression QUOT printMore .)


state 167

    (19) exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .

    OTHERWISE       reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    NEWLINE         reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    MINUS           reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    LPAREN          reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    WORD            reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TYPE_A          reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TEXT            reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    SO              reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    LOOP            reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    REPEAT          reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    NUM             reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    HEX             reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    APOS            reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TYPE_H          reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TYPE_N          reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TYPE_S          reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    $end            reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    LSTATE          reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    RSTATE          reduce using rule 19 (exif -> SO LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)


state 168

    (24) exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .

    NEWLINE         reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    MINUS           reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    LPAREN          reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    WORD            reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    TYPE_A          reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    TEXT            reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    SO              reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    LOOP            reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    REPEAT          reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    NUM             reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    HEX             reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    APOS            reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    TYPE_H          reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    TYPE_N          reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    TYPE_S          reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    $end            reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    LSTATE          reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)
    RSTATE          reduce using rule 24 (exloop -> LOOP LPAREN expression RPAREN LSTATE NEWLINE statement RSTATE .)


state 169

    (26) exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .

    NEWLINE         reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    MINUS           reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    LPAREN          reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    WORD            reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TYPE_A          reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TEXT            reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    SO              reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    LOOP            reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    REPEAT          reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    NUM             reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    HEX             reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    APOS            reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TYPE_H          reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TYPE_N          reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    TYPE_S          reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    $end            reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    LSTATE          reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)
    RSTATE          reduce using rule 26 (exrepeat -> REPEAT LPAREN expression RPAREN NEWLINE LSTATE statement RSTATE .)


state 170

    (67) declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .

    NEWLINE         reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    MINUS           reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    LPAREN          reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    WORD            reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    TYPE_A          reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    TEXT            reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    SO              reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    LOOP            reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    REPEAT          reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    NUM             reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    HEX             reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    APOS            reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    TYPE_H          reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    TYPE_N          reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    TYPE_S          reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    $end            reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    LSTATE          reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)
    RSTATE          reduce using rule 67 (declare -> TYPE_A WORD LARRY NUM RARRY EQU LSTATE arrayX RSTATE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLINE in state 4 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 5 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 12 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 14 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 14 resolved as shift
WARNING: shift/reduce conflict for MUL in state 14 resolved as shift
WARNING: shift/reduce conflict for DIV in state 14 resolved as shift
WARNING: shift/reduce conflict for MOD in state 14 resolved as shift
WARNING: shift/reduce conflict for WORD in state 20 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 33 resolved as shift
WARNING: shift/reduce conflict for WORD in state 33 resolved as shift
WARNING: shift/reduce conflict for TYPE_A in state 33 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 33 resolved as shift
WARNING: shift/reduce conflict for SO in state 33 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 33 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 33 resolved as shift
WARNING: shift/reduce conflict for TYPE_H in state 33 resolved as shift
WARNING: shift/reduce conflict for TYPE_N in state 33 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 33 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 43 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MUL in state 75 resolved as shift
WARNING: shift/reduce conflict for DIV in state 75 resolved as shift
WARNING: shift/reduce conflict for MOD in state 75 resolved as shift
WARNING: shift/reduce conflict for EQUTO in state 75 resolved as shift
WARNING: shift/reduce conflict for NOEQU in state 75 resolved as shift
WARNING: shift/reduce conflict for LESS in state 75 resolved as shift
WARNING: shift/reduce conflict for MORE in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MUL in state 76 resolved as shift
WARNING: shift/reduce conflict for DIV in state 76 resolved as shift
WARNING: shift/reduce conflict for MOD in state 76 resolved as shift
WARNING: shift/reduce conflict for EQUTO in state 76 resolved as shift
WARNING: shift/reduce conflict for NOEQU in state 76 resolved as shift
WARNING: shift/reduce conflict for LESS in state 76 resolved as shift
WARNING: shift/reduce conflict for MORE in state 76 resolved as shift
WARNING: shift/reduce conflict for MUL in state 80 resolved as shift
WARNING: shift/reduce conflict for DIV in state 80 resolved as shift
WARNING: shift/reduce conflict for MOD in state 80 resolved as shift
WARNING: shift/reduce conflict for MUL in state 82 resolved as shift
WARNING: shift/reduce conflict for DIV in state 82 resolved as shift
WARNING: shift/reduce conflict for MOD in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 105 resolved as shift
WARNING: shift/reduce conflict for WORD in state 105 resolved as shift
WARNING: shift/reduce conflict for TYPE_A in state 105 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 105 resolved as shift
WARNING: shift/reduce conflict for SO in state 105 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 105 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 105 resolved as shift
WARNING: shift/reduce conflict for TYPE_H in state 105 resolved as shift
WARNING: shift/reduce conflict for TYPE_N in state 105 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 105 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 121 resolved as shift
WARNING: shift/reduce conflict for RSTATE in state 160 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 160 resolved as shift
WARNING: reduce/reduce conflict in state 80 resolved using rule (expression -> term PLUS term)
WARNING: rejected rule (expression -> term) in state 80
WARNING: reduce/reduce conflict in state 82 resolved using rule (expression -> term MINUS term)
WARNING: rejected rule (expression -> term) in state 82
WARNING: reduce/reduce conflict in state 84 resolved using rule (expression -> term MUL term)
WARNING: rejected rule (expression -> term) in state 84
WARNING: reduce/reduce conflict in state 86 resolved using rule (expression -> term DIV term)
WARNING: rejected rule (expression -> term) in state 86
WARNING: reduce/reduce conflict in state 88 resolved using rule (expression -> term MOD term)
WARNING: rejected rule (expression -> term) in state 88
WARNING: reduce/reduce conflict in state 105 resolved using rule (statement -> statement NEWLINE statement NEWLINE)
WARNING: rejected rule (statement -> statement NEWLINE) in state 105
